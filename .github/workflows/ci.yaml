name: ci
on:
  push:
    branches:
      - "*"
      - main
  pull_request:

permissions:
  contents: write
  security-events: write
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5
        with:
          go-version: "1.22"
          cache: false
      - name: Run tests
        run: go test ./... -coverprofile=coverage.out -coverpkg=./... -covermode=atomic
      - name: golangci-lint
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6
        with:
          version: v1.59
          args: -v --config=.ci.yml
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Static check
        uses: dominikh/staticcheck-action@fe1dd0c3658873b46f8c9bb3291096a617310ca6 # v1.3.1
        with:
          version: "2023.1.6"
          install-go: false
          cache-key: "1.22"
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@915b19bbe73b92a6cf82a1bc12b087c9a19a5fe2 # 0.28.0
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: sarif
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@662472033e021d55d94146f66f6058822b0b39fd # v3
        with:
          sarif_file: "trivy-results.sarif"
