// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/chime/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#MediaInsightsConfigurationInitParameters: {
	// The media insights configuration that will be invoked by the Voice Connector.
	configurationArn?: null | string @go(ConfigurationArn,*string)

	// When true, the media insights configuration is not enabled. Defaults to false.
	disabled?: null | bool @go(Disabled,*bool)
}

#MediaInsightsConfigurationObservation: {
	// The media insights configuration that will be invoked by the Voice Connector.
	configurationArn?: null | string @go(ConfigurationArn,*string)

	// When true, the media insights configuration is not enabled. Defaults to false.
	disabled?: null | bool @go(Disabled,*bool)
}

#MediaInsightsConfigurationParameters: {
	// The media insights configuration that will be invoked by the Voice Connector.
	// +kubebuilder:validation:Optional
	configurationArn?: null | string @go(ConfigurationArn,*string)

	// When true, the media insights configuration is not enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	disabled?: null | bool @go(Disabled,*bool)
}

#VoiceConnectorStreamingInitParameters: {
	// The retention period, in hours, for the Amazon Kinesis data.
	dataRetention?: null | float64 @go(DataRetention,*float64)

	// When true, media streaming to Amazon Kinesis is turned off. Default: false
	disabled?: null | bool @go(Disabled,*bool)

	// The media insights configuration. See media_insights_configuration.
	mediaInsightsConfiguration?: [...#MediaInsightsConfigurationInitParameters] @go(MediaInsightsConfiguration,[]MediaInsightsConfigurationInitParameters)

	// The streaming notification targets. Valid Values: EventBridge | SNS | SQS
	streamingNotificationTargets?: [...null | string] @go(StreamingNotificationTargets,[]*string)
}

#VoiceConnectorStreamingObservation: {
	// The retention period, in hours, for the Amazon Kinesis data.
	dataRetention?: null | float64 @go(DataRetention,*float64)

	// When true, media streaming to Amazon Kinesis is turned off. Default: false
	disabled?: null | bool @go(Disabled,*bool)

	// The Amazon Chime Voice Connector ID.
	id?: null | string @go(ID,*string)

	// The media insights configuration. See media_insights_configuration.
	mediaInsightsConfiguration?: [...#MediaInsightsConfigurationObservation] @go(MediaInsightsConfiguration,[]MediaInsightsConfigurationObservation)

	// The streaming notification targets. Valid Values: EventBridge | SNS | SQS
	streamingNotificationTargets?: [...null | string] @go(StreamingNotificationTargets,[]*string)

	// The Amazon Chime Voice Connector ID.
	voiceConnectorId?: null | string @go(VoiceConnectorID,*string)
}

#VoiceConnectorStreamingParameters: {
	// The retention period, in hours, for the Amazon Kinesis data.
	// +kubebuilder:validation:Optional
	dataRetention?: null | float64 @go(DataRetention,*float64)

	// When true, media streaming to Amazon Kinesis is turned off. Default: false
	// +kubebuilder:validation:Optional
	disabled?: null | bool @go(Disabled,*bool)

	// The media insights configuration. See media_insights_configuration.
	// +kubebuilder:validation:Optional
	mediaInsightsConfiguration?: [...#MediaInsightsConfigurationParameters] @go(MediaInsightsConfiguration,[]MediaInsightsConfigurationParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The streaming notification targets. Valid Values: EventBridge | SNS | SQS
	// +kubebuilder:validation:Optional
	streamingNotificationTargets?: [...null | string] @go(StreamingNotificationTargets,[]*string)

	// The Amazon Chime Voice Connector ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/chime/v1beta1.VoiceConnector
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	voiceConnectorId?: null | string @go(VoiceConnectorID,*string)

	// Reference to a VoiceConnector in chime to populate voiceConnectorId.
	// +kubebuilder:validation:Optional
	voiceConnectorIdRef?: null | v1.#Reference @go(VoiceConnectorIDRef,*v1.Reference)

	// Selector for a VoiceConnector in chime to populate voiceConnectorId.
	// +kubebuilder:validation:Optional
	voiceConnectorIdSelector?: null | v1.#Selector @go(VoiceConnectorIDSelector,*v1.Selector)
}

// VoiceConnectorStreamingSpec defines the desired state of VoiceConnectorStreaming
#VoiceConnectorStreamingSpec: {
	v1.#ResourceSpec
	forProvider: #VoiceConnectorStreamingParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #VoiceConnectorStreamingInitParameters @go(InitProvider)
}

// VoiceConnectorStreamingStatus defines the observed state of VoiceConnectorStreaming.
#VoiceConnectorStreamingStatus: {
	v1.#ResourceStatus
	atProvider?: #VoiceConnectorStreamingObservation @go(AtProvider)
}

// VoiceConnectorStreaming is the Schema for the VoiceConnectorStreamings API. The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VoiceConnectorStreaming: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dataRetention) || (has(self.initProvider) && has(self.initProvider.dataRetention))",message="spec.forProvider.dataRetention is a required parameter"
	spec:    #VoiceConnectorStreamingSpec   @go(Spec)
	status?: #VoiceConnectorStreamingStatus @go(Status)
}

// VoiceConnectorStreamingList contains a list of VoiceConnectorStreamings
#VoiceConnectorStreamingList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#VoiceConnectorStreaming] @go(Items,[]VoiceConnectorStreaming)
}
