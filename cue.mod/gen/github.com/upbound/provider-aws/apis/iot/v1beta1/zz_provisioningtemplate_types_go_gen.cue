// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iot/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PreProvisioningHookInitParameters: {
	// The version of the payload that was sent to the target function. The only valid (and the default) payload version is "2020-04-01".
	payloadVersion?: null | string @go(PayloadVersion,*string)

	// The ARN of the target function.
	targetArn?: null | string @go(TargetArn,*string)
}

#PreProvisioningHookObservation: {
	// The version of the payload that was sent to the target function. The only valid (and the default) payload version is "2020-04-01".
	payloadVersion?: null | string @go(PayloadVersion,*string)

	// The ARN of the target function.
	targetArn?: null | string @go(TargetArn,*string)
}

#PreProvisioningHookParameters: {
	// The version of the payload that was sent to the target function. The only valid (and the default) payload version is "2020-04-01".
	// +kubebuilder:validation:Optional
	payloadVersion?: null | string @go(PayloadVersion,*string)

	// The ARN of the target function.
	// +kubebuilder:validation:Optional
	targetArn?: null | string @go(TargetArn,*string)
}

#ProvisioningTemplateInitParameters: {
	// The description of the fleet provisioning template.
	description?: null | string @go(Description,*string)

	// True to enable the fleet provisioning template, otherwise false.
	enabled?: null | bool @go(Enabled,*bool)

	// Creates a pre-provisioning hook template. Details below.
	preProvisioningHook?: [...#PreProvisioningHookInitParameters] @go(PreProvisioningHook,[]PreProvisioningHookInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The JSON formatted contents of the fleet provisioning template.
	templateBody?: null | string @go(TemplateBody,*string)
}

#ProvisioningTemplateObservation: {
	// The ARN that identifies the provisioning template.
	arn?: null | string @go(Arn,*string)

	// The default version of the fleet provisioning template.
	defaultVersionId?: null | float64 @go(DefaultVersionID,*float64)

	// The description of the fleet provisioning template.
	description?: null | string @go(Description,*string)

	// True to enable the fleet provisioning template, otherwise false.
	enabled?: null | bool   @go(Enabled,*bool)
	id?:      null | string @go(ID,*string)

	// Creates a pre-provisioning hook template. Details below.
	preProvisioningHook?: [...#PreProvisioningHookObservation] @go(PreProvisioningHook,[]PreProvisioningHookObservation)

	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	provisioningRoleArn?: null | string @go(ProvisioningRoleArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The JSON formatted contents of the fleet provisioning template.
	templateBody?: null | string @go(TemplateBody,*string)
}

#ProvisioningTemplateParameters: {
	// The description of the fleet provisioning template.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// True to enable the fleet provisioning template, otherwise false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Creates a pre-provisioning hook template. Details below.
	// +kubebuilder:validation:Optional
	preProvisioningHook?: [...#PreProvisioningHookParameters] @go(PreProvisioningHook,[]PreProvisioningHookParameters)

	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	provisioningRoleArn?: null | string @go(ProvisioningRoleArn,*string)

	// Reference to a Role in iam to populate provisioningRoleArn.
	// +kubebuilder:validation:Optional
	provisioningRoleArnRef?: null | v1.#Reference @go(ProvisioningRoleArnRef,*v1.Reference)

	// Selector for a Role in iam to populate provisioningRoleArn.
	// +kubebuilder:validation:Optional
	provisioningRoleArnSelector?: null | v1.#Selector @go(ProvisioningRoleArnSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The JSON formatted contents of the fleet provisioning template.
	// +kubebuilder:validation:Optional
	templateBody?: null | string @go(TemplateBody,*string)
}

// ProvisioningTemplateSpec defines the desired state of ProvisioningTemplate
#ProvisioningTemplateSpec: {
	v1.#ResourceSpec
	forProvider: #ProvisioningTemplateParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ProvisioningTemplateInitParameters @go(InitProvider)
}

// ProvisioningTemplateStatus defines the observed state of ProvisioningTemplate.
#ProvisioningTemplateStatus: {
	v1.#ResourceStatus
	atProvider?: #ProvisioningTemplateObservation @go(AtProvider)
}

// ProvisioningTemplate is the Schema for the ProvisioningTemplates API. Manages an IoT fleet provisioning template.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ProvisioningTemplate: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.templateBody) || (has(self.initProvider) && has(self.initProvider.templateBody))",message="spec.forProvider.templateBody is a required parameter"
	spec:    #ProvisioningTemplateSpec   @go(Spec)
	status?: #ProvisioningTemplateStatus @go(Status)
}

// ProvisioningTemplateList contains a list of ProvisioningTemplates
#ProvisioningTemplateList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ProvisioningTemplate] @go(Items,[]ProvisioningTemplate)
}
