// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iot/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ThingGroupMembershipInitParameters: {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	overrideDynamicGroup?: null | bool @go(OverrideDynamicGroup,*bool)

	// The name of the group to which you are adding a thing.
	thingGroupName?: null | string @go(ThingGroupName,*string)

	// The name of the thing to add to a group.
	thingName?: null | string @go(ThingName,*string)
}

#ThingGroupMembershipObservation: {
	// The membership ID.
	id?: null | string @go(ID,*string)

	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	overrideDynamicGroup?: null | bool @go(OverrideDynamicGroup,*bool)

	// The name of the group to which you are adding a thing.
	thingGroupName?: null | string @go(ThingGroupName,*string)

	// The name of the thing to add to a group.
	thingName?: null | string @go(ThingName,*string)
}

#ThingGroupMembershipParameters: {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	// +kubebuilder:validation:Optional
	overrideDynamicGroup?: null | bool @go(OverrideDynamicGroup,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The name of the group to which you are adding a thing.
	// +kubebuilder:validation:Optional
	thingGroupName?: null | string @go(ThingGroupName,*string)

	// The name of the thing to add to a group.
	// +kubebuilder:validation:Optional
	thingName?: null | string @go(ThingName,*string)
}

// ThingGroupMembershipSpec defines the desired state of ThingGroupMembership
#ThingGroupMembershipSpec: {
	v1.#ResourceSpec
	forProvider: #ThingGroupMembershipParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ThingGroupMembershipInitParameters @go(InitProvider)
}

// ThingGroupMembershipStatus defines the observed state of ThingGroupMembership.
#ThingGroupMembershipStatus: {
	v1.#ResourceStatus
	atProvider?: #ThingGroupMembershipObservation @go(AtProvider)
}

// ThingGroupMembership is the Schema for the ThingGroupMemberships API. Adds an IoT Thing to an IoT Thing Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ThingGroupMembership: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.thingGroupName) || (has(self.initProvider) && has(self.initProvider.thingGroupName))",message="spec.forProvider.thingGroupName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.thingName) || (has(self.initProvider) && has(self.initProvider.thingName))",message="spec.forProvider.thingName is a required parameter"
	spec:    #ThingGroupMembershipSpec   @go(Spec)
	status?: #ThingGroupMembershipStatus @go(Status)
}

// ThingGroupMembershipList contains a list of ThingGroupMemberships
#ThingGroupMembershipList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ThingGroupMembership] @go(Items,[]ThingGroupMembership)
}
