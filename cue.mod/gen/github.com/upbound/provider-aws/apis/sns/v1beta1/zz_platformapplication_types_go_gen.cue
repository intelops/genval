// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sns/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PlatformApplicationInitParameters: {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	applePlatformBundleId?: null | string @go(ApplePlatformBundleID,*string)

	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	applePlatformTeamId?: null | string @go(ApplePlatformTeamID,*string)

	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	eventDeliveryFailureTopicArn?: null | string @go(EventDeliveryFailureTopicArn,*string)

	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	eventEndpointCreatedTopicArn?: null | string @go(EventEndpointCreatedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	eventEndpointDeletedTopicArn?: null | string @go(EventEndpointDeletedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	eventEndpointUpdatedTopicArn?: null | string @go(EventEndpointUpdatedTopicArn,*string)

	// The platform that the app is registered with. See Platform for supported platforms.
	platform?: null | string @go(Platform,*string)

	// The sample rate percentage (0-100) of successfully delivered messages.
	successFeedbackSampleRate?: null | string @go(SuccessFeedbackSampleRate,*string)
}

#PlatformApplicationObservation: {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	applePlatformBundleId?: null | string @go(ApplePlatformBundleID,*string)

	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	applePlatformTeamId?: null | string @go(ApplePlatformTeamID,*string)

	// The ARN of the SNS platform application
	arn?: null | string @go(Arn,*string)

	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	eventDeliveryFailureTopicArn?: null | string @go(EventDeliveryFailureTopicArn,*string)

	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	eventEndpointCreatedTopicArn?: null | string @go(EventEndpointCreatedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	eventEndpointDeletedTopicArn?: null | string @go(EventEndpointDeletedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	eventEndpointUpdatedTopicArn?: null | string @go(EventEndpointUpdatedTopicArn,*string)

	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	failureFeedbackRoleArn?: null | string @go(FailureFeedbackRoleArn,*string)

	// The ARN of the SNS platform application
	id?: null | string @go(ID,*string)

	// The platform that the app is registered with. See Platform for supported platforms.
	platform?: null | string @go(Platform,*string)

	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	successFeedbackRoleArn?: null | string @go(SuccessFeedbackRoleArn,*string)

	// The sample rate percentage (0-100) of successfully delivered messages.
	successFeedbackSampleRate?: null | string @go(SuccessFeedbackSampleRate,*string)
}

#PlatformApplicationParameters: {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	// +kubebuilder:validation:Optional
	applePlatformBundleId?: null | string @go(ApplePlatformBundleID,*string)

	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	// +kubebuilder:validation:Optional
	applePlatformTeamId?: null | string @go(ApplePlatformTeamID,*string)

	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	// +kubebuilder:validation:Optional
	eventDeliveryFailureTopicArn?: null | string @go(EventDeliveryFailureTopicArn,*string)

	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	// +kubebuilder:validation:Optional
	eventEndpointCreatedTopicArn?: null | string @go(EventEndpointCreatedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	// +kubebuilder:validation:Optional
	eventEndpointDeletedTopicArn?: null | string @go(EventEndpointDeletedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	// +kubebuilder:validation:Optional
	eventEndpointUpdatedTopicArn?: null | string @go(EventEndpointUpdatedTopicArn,*string)

	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	failureFeedbackRoleArn?: null | string @go(FailureFeedbackRoleArn,*string)

	// Reference to a Role in iam to populate failureFeedbackRoleArn.
	// +kubebuilder:validation:Optional
	failureFeedbackRoleArnRef?: null | v1.#Reference @go(FailureFeedbackRoleArnRef,*v1.Reference)

	// Selector for a Role in iam to populate failureFeedbackRoleArn.
	// +kubebuilder:validation:Optional
	failureFeedbackRoleArnSelector?: null | v1.#Selector @go(FailureFeedbackRoleArnSelector,*v1.Selector)

	// The platform that the app is registered with. See Platform for supported platforms.
	// +kubebuilder:validation:Optional
	platform?: null | string @go(Platform,*string)

	// Application Platform credential. See Credential for type of credential required for platform.
	// +kubebuilder:validation:Optional
	platformCredentialSecretRef: v1.#SecretKeySelector @go(PlatformCredentialSecretRef)

	// Application Platform principal. See Principal for type of principal required for platform.
	// +kubebuilder:validation:Optional
	platformPrincipalSecretRef?: null | v1.#SecretKeySelector @go(PlatformPrincipalSecretRef,*v1.SecretKeySelector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	successFeedbackRoleArn?: null | string @go(SuccessFeedbackRoleArn,*string)

	// Reference to a Role in iam to populate successFeedbackRoleArn.
	// +kubebuilder:validation:Optional
	successFeedbackRoleArnRef?: null | v1.#Reference @go(SuccessFeedbackRoleArnRef,*v1.Reference)

	// Selector for a Role in iam to populate successFeedbackRoleArn.
	// +kubebuilder:validation:Optional
	successFeedbackRoleArnSelector?: null | v1.#Selector @go(SuccessFeedbackRoleArnSelector,*v1.Selector)

	// The sample rate percentage (0-100) of successfully delivered messages.
	// +kubebuilder:validation:Optional
	successFeedbackSampleRate?: null | string @go(SuccessFeedbackSampleRate,*string)
}

// PlatformApplicationSpec defines the desired state of PlatformApplication
#PlatformApplicationSpec: {
	v1.#ResourceSpec
	forProvider: #PlatformApplicationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PlatformApplicationInitParameters @go(InitProvider)
}

// PlatformApplicationStatus defines the observed state of PlatformApplication.
#PlatformApplicationStatus: {
	v1.#ResourceStatus
	atProvider?: #PlatformApplicationObservation @go(AtProvider)
}

// PlatformApplication is the Schema for the PlatformApplications API. Provides an SNS platform application resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PlatformApplication: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.platform) || (has(self.initProvider) && has(self.initProvider.platform))",message="spec.forProvider.platform is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.platformCredentialSecretRef)",message="spec.forProvider.platformCredentialSecretRef is a required parameter"
	spec:    #PlatformApplicationSpec   @go(Spec)
	status?: #PlatformApplicationStatus @go(Status)
}

// PlatformApplicationList contains a list of PlatformApplications
#PlatformApplicationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#PlatformApplication] @go(Items,[]PlatformApplication)
}
