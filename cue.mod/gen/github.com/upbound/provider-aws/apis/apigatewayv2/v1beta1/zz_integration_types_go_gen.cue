// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigatewayv2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#IntegrationInitParameters: {
	// Type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.
	connectionType?: null | string @go(ConnectionType,*string)

	// How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.
	contentHandlingStrategy?: null | string @go(ContentHandlingStrategy,*string)

	// Description of the integration.
	description?: null | string @go(Description,*string)

	// Integration's HTTP method. Must be specified if integration_type is not MOCK.
	integrationMethod?: null | string @go(IntegrationMethod,*string)

	// AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.
	integrationSubtype?: null | string @go(IntegrationSubtype,*string)

	// Integration type of an integration.
	// Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
	integrationType?: null | string @go(IntegrationType,*string)

	// Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
	// Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
	passthroughBehavior?: null | string @go(PassthroughBehavior,*string)

	// The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.
	payloadFormatVersion?: null | string @go(PayloadFormatVersion,*string)

	// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
	// For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
	// For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
	// See the Amazon API Gateway Developer Guide for details.
	requestParameters?: {[string]: null | string} @go(RequestParameters,map[string]*string)

	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
	requestTemplates?: {[string]: null | string} @go(RequestTemplates,map[string]*string)

	// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
	responseParameters?: [...#ResponseParametersInitParameters] @go(ResponseParameters,[]ResponseParametersInitParameters)

	// TLS configuration for a private integration. Supported only for HTTP APIs.
	tlsConfig?: [...#TLSConfigInitParameters] @go(TLSConfig,[]TLSConfigInitParameters)

	// The template selection expression for the integration.
	templateSelectionExpression?: null | string @go(TemplateSelectionExpression,*string)

	// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
	// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
	timeoutMilliseconds?: null | float64 @go(TimeoutMilliseconds,*float64)
}

#IntegrationObservation: {
	// API identifier.
	apiId?: null | string @go(APIID,*string)

	// ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
	connectionId?: null | string @go(ConnectionID,*string)

	// Type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.
	connectionType?: null | string @go(ConnectionType,*string)

	// How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.
	contentHandlingStrategy?: null | string @go(ContentHandlingStrategy,*string)

	// Credentials required for the integration, if any.
	credentialsArn?: null | string @go(CredentialsArn,*string)

	// Description of the integration.
	description?: null | string @go(Description,*string)

	// Integration identifier.
	id?: null | string @go(ID,*string)

	// Integration's HTTP method. Must be specified if integration_type is not MOCK.
	integrationMethod?: null | string @go(IntegrationMethod,*string)

	// The integration response selection expression for the integration.
	integrationResponseSelectionExpression?: null | string @go(IntegrationResponseSelectionExpression,*string)

	// AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.
	integrationSubtype?: null | string @go(IntegrationSubtype,*string)

	// Integration type of an integration.
	// Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
	integrationType?: null | string @go(IntegrationType,*string)

	// URI of the Lambda function for a Lambda proxy integration, when integration_type is AWS_PROXY.
	// For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
	integrationUri?: null | string @go(IntegrationURI,*string)

	// Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
	// Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
	passthroughBehavior?: null | string @go(PassthroughBehavior,*string)

	// The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.
	payloadFormatVersion?: null | string @go(PayloadFormatVersion,*string)

	// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
	// For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
	// For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
	// See the Amazon API Gateway Developer Guide for details.
	requestParameters?: {[string]: null | string} @go(RequestParameters,map[string]*string)

	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
	requestTemplates?: {[string]: null | string} @go(RequestTemplates,map[string]*string)

	// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
	responseParameters?: [...#ResponseParametersObservation] @go(ResponseParameters,[]ResponseParametersObservation)

	// TLS configuration for a private integration. Supported only for HTTP APIs.
	tlsConfig?: [...#TLSConfigObservation] @go(TLSConfig,[]TLSConfigObservation)

	// The template selection expression for the integration.
	templateSelectionExpression?: null | string @go(TemplateSelectionExpression,*string)

	// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
	// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
	timeoutMilliseconds?: null | float64 @go(TimeoutMilliseconds,*float64)
}

#IntegrationParameters: {
	// API identifier.
	// +crossplane:generate:reference:type=API
	// +kubebuilder:validation:Optional
	apiId?: null | string @go(APIID,*string)

	// Reference to a API to populate apiId.
	// +kubebuilder:validation:Optional
	apiIdRef?: null | v1.#Reference @go(APIIDRef,*v1.Reference)

	// Selector for a API to populate apiId.
	// +kubebuilder:validation:Optional
	apiIdSelector?: null | v1.#Selector @go(APIIDSelector,*v1.Selector)

	// ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/apigatewayv2/v1beta1.VPCLink
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	connectionId?: null | string @go(ConnectionID,*string)

	// Reference to a VPCLink in apigatewayv2 to populate connectionId.
	// +kubebuilder:validation:Optional
	connectionIdRef?: null | v1.#Reference @go(ConnectionIDRef,*v1.Reference)

	// Selector for a VPCLink in apigatewayv2 to populate connectionId.
	// +kubebuilder:validation:Optional
	connectionIdSelector?: null | v1.#Selector @go(ConnectionIDSelector,*v1.Selector)

	// Type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.
	// +kubebuilder:validation:Optional
	connectionType?: null | string @go(ConnectionType,*string)

	// How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	contentHandlingStrategy?: null | string @go(ContentHandlingStrategy,*string)

	// Credentials required for the integration, if any.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	credentialsArn?: null | string @go(CredentialsArn,*string)

	// Reference to a Role in iam to populate credentialsArn.
	// +kubebuilder:validation:Optional
	credentialsArnRef?: null | v1.#Reference @go(CredentialsArnRef,*v1.Reference)

	// Selector for a Role in iam to populate credentialsArn.
	// +kubebuilder:validation:Optional
	credentialsArnSelector?: null | v1.#Selector @go(CredentialsArnSelector,*v1.Selector)

	// Description of the integration.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Integration's HTTP method. Must be specified if integration_type is not MOCK.
	// +kubebuilder:validation:Optional
	integrationMethod?: null | string @go(IntegrationMethod,*string)

	// AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.
	// +kubebuilder:validation:Optional
	integrationSubtype?: null | string @go(IntegrationSubtype,*string)

	// Integration type of an integration.
	// Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
	// +kubebuilder:validation:Optional
	integrationType?: null | string @go(IntegrationType,*string)

	// URI of the Lambda function for a Lambda proxy integration, when integration_type is AWS_PROXY.
	// For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("invoke_arn",true)
	// +kubebuilder:validation:Optional
	integrationUri?: null | string @go(IntegrationURI,*string)

	// Reference to a Function in lambda to populate integrationUri.
	// +kubebuilder:validation:Optional
	integrationUriRef?: null | v1.#Reference @go(IntegrationURIRef,*v1.Reference)

	// Selector for a Function in lambda to populate integrationUri.
	// +kubebuilder:validation:Optional
	integrationUriSelector?: null | v1.#Selector @go(IntegrationURISelector,*v1.Selector)

	// Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
	// Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	passthroughBehavior?: null | string @go(PassthroughBehavior,*string)

	// The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.
	// +kubebuilder:validation:Optional
	payloadFormatVersion?: null | string @go(PayloadFormatVersion,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
	// For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
	// For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
	// See the Amazon API Gateway Developer Guide for details.
	// +kubebuilder:validation:Optional
	requestParameters?: {[string]: null | string} @go(RequestParameters,map[string]*string)

	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	requestTemplates?: {[string]: null | string} @go(RequestTemplates,map[string]*string)

	// Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
	// +kubebuilder:validation:Optional
	responseParameters?: [...#ResponseParametersParameters] @go(ResponseParameters,[]ResponseParametersParameters)

	// TLS configuration for a private integration. Supported only for HTTP APIs.
	// +kubebuilder:validation:Optional
	tlsConfig?: [...#TLSConfigParameters] @go(TLSConfig,[]TLSConfigParameters)

	// The template selection expression for the integration.
	// +kubebuilder:validation:Optional
	templateSelectionExpression?: null | string @go(TemplateSelectionExpression,*string)

	// Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
	// The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
	// +kubebuilder:validation:Optional
	timeoutMilliseconds?: null | float64 @go(TimeoutMilliseconds,*float64)
}

#ResponseParametersInitParameters: {
	// Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
	// See the Amazon API Gateway Developer Guide for details.
	mappings?: {[string]: null | string} @go(Mappings,map[string]*string)

	// HTTP status code in the range 200-599.
	statusCode?: null | string @go(StatusCode,*string)
}

#ResponseParametersObservation: {
	// Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
	// See the Amazon API Gateway Developer Guide for details.
	mappings?: {[string]: null | string} @go(Mappings,map[string]*string)

	// HTTP status code in the range 200-599.
	statusCode?: null | string @go(StatusCode,*string)
}

#ResponseParametersParameters: {
	// Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
	// See the Amazon API Gateway Developer Guide for details.
	// +kubebuilder:validation:Optional
	mappings: {[string]: null | string} @go(Mappings,map[string]*string)

	// HTTP status code in the range 200-599.
	// +kubebuilder:validation:Optional
	statusCode?: null | string @go(StatusCode,*string)
}

#TLSConfigInitParameters: {
	// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
	serverNameToVerify?: null | string @go(ServerNameToVerify,*string)
}

#TLSConfigObservation: {
	// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
	serverNameToVerify?: null | string @go(ServerNameToVerify,*string)
}

#TLSConfigParameters: {
	// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
	// +kubebuilder:validation:Optional
	serverNameToVerify?: null | string @go(ServerNameToVerify,*string)
}

// IntegrationSpec defines the desired state of Integration
#IntegrationSpec: {
	v1.#ResourceSpec
	forProvider: #IntegrationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #IntegrationInitParameters @go(InitProvider)
}

// IntegrationStatus defines the observed state of Integration.
#IntegrationStatus: {
	v1.#ResourceStatus
	atProvider?: #IntegrationObservation @go(AtProvider)
}

// Integration is the Schema for the Integrations API. Manages an Amazon API Gateway Version 2 integration.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Integration: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.integrationType) || (has(self.initProvider) && has(self.initProvider.integrationType))",message="spec.forProvider.integrationType is a required parameter"
	spec:    #IntegrationSpec   @go(Spec)
	status?: #IntegrationStatus @go(Status)
}

// IntegrationList contains a list of Integrations
#IntegrationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Integration] @go(Items,[]Integration)
}
