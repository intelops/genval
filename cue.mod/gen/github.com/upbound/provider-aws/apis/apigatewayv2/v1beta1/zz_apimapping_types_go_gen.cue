// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigatewayv2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#APIMappingInitParameters: {
	// The API mapping key. Refer to REST API, HTTP API or WebSocket API.
	apiMappingKey?: null | string @go(APIMappingKey,*string)
}

#APIMappingObservation: {
	// API identifier.
	apiId?: null | string @go(APIID,*string)

	// The API mapping key. Refer to REST API, HTTP API or WebSocket API.
	apiMappingKey?: null | string @go(APIMappingKey,*string)

	// Domain name. Use the aws_apigatewayv2_domain_name resource to configure a domain name.
	domainName?: null | string @go(DomainName,*string)

	// API mapping identifier.
	id?: null | string @go(ID,*string)

	// API stage. Use the aws_apigatewayv2_stage resource to configure an API stage.
	stage?: null | string @go(Stage,*string)
}

#APIMappingParameters: {
	// API identifier.
	// +crossplane:generate:reference:type=API
	// +kubebuilder:validation:Optional
	apiId?: null | string @go(APIID,*string)

	// Reference to a API to populate apiId.
	// +kubebuilder:validation:Optional
	apiIdRef?: null | v1.#Reference @go(APIIDRef,*v1.Reference)

	// Selector for a API to populate apiId.
	// +kubebuilder:validation:Optional
	apiIdSelector?: null | v1.#Selector @go(APIIDSelector,*v1.Selector)

	// The API mapping key. Refer to REST API, HTTP API or WebSocket API.
	// +kubebuilder:validation:Optional
	apiMappingKey?: null | string @go(APIMappingKey,*string)

	// Domain name. Use the aws_apigatewayv2_domain_name resource to configure a domain name.
	// +crossplane:generate:reference:type=DomainName
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// Reference to a DomainName to populate domainName.
	// +kubebuilder:validation:Optional
	domainNameRef?: null | v1.#Reference @go(DomainNameRef,*v1.Reference)

	// Selector for a DomainName to populate domainName.
	// +kubebuilder:validation:Optional
	domainNameSelector?: null | v1.#Selector @go(DomainNameSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// API stage. Use the aws_apigatewayv2_stage resource to configure an API stage.
	// +crossplane:generate:reference:type=Stage
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	stage?: null | string @go(Stage,*string)

	// Reference to a Stage to populate stage.
	// +kubebuilder:validation:Optional
	stageRef?: null | v1.#Reference @go(StageRef,*v1.Reference)

	// Selector for a Stage to populate stage.
	// +kubebuilder:validation:Optional
	stageSelector?: null | v1.#Selector @go(StageSelector,*v1.Selector)
}

// APIMappingSpec defines the desired state of APIMapping
#APIMappingSpec: {
	v1.#ResourceSpec
	forProvider: #APIMappingParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #APIMappingInitParameters @go(InitProvider)
}

// APIMappingStatus defines the observed state of APIMapping.
#APIMappingStatus: {
	v1.#ResourceStatus
	atProvider?: #APIMappingObservation @go(AtProvider)
}

// APIMapping is the Schema for the APIMappings API. Manages an Amazon API Gateway Version 2 API mapping.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#APIMapping: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #APIMappingSpec    @go(Spec)
	status?:   #APIMappingStatus  @go(Status)
}

// APIMappingList contains a list of APIMappings
#APIMappingList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#APIMapping] @go(Items,[]APIMapping)
}
