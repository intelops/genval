// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lambda/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AllowedPublishersInitParameters: {
}

#AllowedPublishersObservation: {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	signingProfileVersionArns?: [...null | string] @go(SigningProfileVersionArns,[]*string)
}

#AllowedPublishersParameters: {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/signer/v1beta1.SigningProfile
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	signingProfileVersionArns?: [...null | string] @go(SigningProfileVersionArns,[]*string)

	// References to SigningProfile in signer to populate signingProfileVersionArns.
	// +kubebuilder:validation:Optional
	signingProfileVersionArnsRefs?: [...v1.#Reference] @go(SigningProfileVersionArnsRefs,[]v1.Reference)

	// Selector for a list of SigningProfile in signer to populate signingProfileVersionArns.
	// +kubebuilder:validation:Optional
	signingProfileVersionArnsSelector?: null | v1.#Selector @go(SigningProfileVersionArnsSelector,*v1.Selector)
}

#CodeSigningConfigInitParameters: {
	// A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
	allowedPublishers?: [...#AllowedPublishersInitParameters] @go(AllowedPublishers,[]AllowedPublishersInitParameters)

	// Descriptive name for this code signing configuration.
	description?: null | string @go(Description,*string)

	// A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
	policies?: [...#PoliciesInitParameters] @go(Policies,[]PoliciesInitParameters)
}

#CodeSigningConfigObservation: {
	// A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
	allowedPublishers?: [...#AllowedPublishersObservation] @go(AllowedPublishers,[]AllowedPublishersObservation)

	// The Amazon Resource Name (ARN) of the code signing configuration.
	arn?: null | string @go(Arn,*string)

	// Unique identifier for the code signing configuration.
	configId?: null | string @go(ConfigID,*string)

	// Descriptive name for this code signing configuration.
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)

	// The date and time that the code signing configuration was last modified.
	lastModified?: null | string @go(LastModified,*string)

	// A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
	policies?: [...#PoliciesObservation] @go(Policies,[]PoliciesObservation)
}

#CodeSigningConfigParameters: {
	// A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
	// +kubebuilder:validation:Optional
	allowedPublishers?: [...#AllowedPublishersParameters] @go(AllowedPublishers,[]AllowedPublishersParameters)

	// Descriptive name for this code signing configuration.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
	// +kubebuilder:validation:Optional
	policies?: [...#PoliciesParameters] @go(Policies,[]PoliciesParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#PoliciesInitParameters: {
	// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: Warn, Enforce. Default value: Warn.
	untrustedArtifactOnDeployment?: null | string @go(UntrustedArtifactOnDeployment,*string)
}

#PoliciesObservation: {
	// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: Warn, Enforce. Default value: Warn.
	untrustedArtifactOnDeployment?: null | string @go(UntrustedArtifactOnDeployment,*string)
}

#PoliciesParameters: {
	// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: Warn, Enforce. Default value: Warn.
	// +kubebuilder:validation:Optional
	untrustedArtifactOnDeployment?: null | string @go(UntrustedArtifactOnDeployment,*string)
}

// CodeSigningConfigSpec defines the desired state of CodeSigningConfig
#CodeSigningConfigSpec: {
	v1.#ResourceSpec
	forProvider: #CodeSigningConfigParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #CodeSigningConfigInitParameters @go(InitProvider)
}

// CodeSigningConfigStatus defines the observed state of CodeSigningConfig.
#CodeSigningConfigStatus: {
	v1.#ResourceStatus
	atProvider?: #CodeSigningConfigObservation @go(AtProvider)
}

// CodeSigningConfig is the Schema for the CodeSigningConfigs API. Provides a Lambda Code Signing Config resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CodeSigningConfig: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.allowedPublishers) || (has(self.initProvider) && has(self.initProvider.allowedPublishers))",message="spec.forProvider.allowedPublishers is a required parameter"
	spec:    #CodeSigningConfigSpec   @go(Spec)
	status?: #CodeSigningConfigStatus @go(Status)
}

// CodeSigningConfigList contains a list of CodeSigningConfigs
#CodeSigningConfigList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#CodeSigningConfig] @go(Items,[]CodeSigningConfig)
}
