// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53recoveryreadiness/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#DNSTargetResourceInitParameters: {
	// DNS Name that acts as the ingress point to a portion of application.
	domainName?: null | string @go(DomainName,*string)

	// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
	hostedZoneArn?: null | string @go(HostedZoneArn,*string)

	// Route53 record set id to uniquely identify a record given a domain_name and a record_type.
	recordSetId?: null | string @go(RecordSetID,*string)

	// Type of DNS Record of target resource.
	recordType?: null | string @go(RecordType,*string)

	// Target resource the R53 record specified with the above params points to.
	targetResource?: [...#TargetResourceInitParameters] @go(TargetResource,[]TargetResourceInitParameters)
}

#DNSTargetResourceObservation: {
	// DNS Name that acts as the ingress point to a portion of application.
	domainName?: null | string @go(DomainName,*string)

	// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
	hostedZoneArn?: null | string @go(HostedZoneArn,*string)

	// Route53 record set id to uniquely identify a record given a domain_name and a record_type.
	recordSetId?: null | string @go(RecordSetID,*string)

	// Type of DNS Record of target resource.
	recordType?: null | string @go(RecordType,*string)

	// Target resource the R53 record specified with the above params points to.
	targetResource?: [...#TargetResourceObservation] @go(TargetResource,[]TargetResourceObservation)
}

#DNSTargetResourceParameters: {
	// DNS Name that acts as the ingress point to a portion of application.
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
	// +kubebuilder:validation:Optional
	hostedZoneArn?: null | string @go(HostedZoneArn,*string)

	// Route53 record set id to uniquely identify a record given a domain_name and a record_type.
	// +kubebuilder:validation:Optional
	recordSetId?: null | string @go(RecordSetID,*string)

	// Type of DNS Record of target resource.
	// +kubebuilder:validation:Optional
	recordType?: null | string @go(RecordType,*string)

	// Target resource the R53 record specified with the above params points to.
	// +kubebuilder:validation:Optional
	targetResource?: [...#TargetResourceParameters] @go(TargetResource,[]TargetResourceParameters)
}

#NlbResourceInitParameters: {
	// NLB resource ARN.
	arn?: null | string @go(Arn,*string)
}

#NlbResourceObservation: {
	// NLB resource ARN.
	arn?: null | string @go(Arn,*string)
}

#NlbResourceParameters: {
	// NLB resource ARN.
	// +kubebuilder:validation:Optional
	arn?: null | string @go(Arn,*string)
}

#R53ResourceInitParameters: {
	// Domain name that is targeted.
	domainName?: null | string @go(DomainName,*string)

	// Resource record set ID that is targeted.
	recordSetId?: null | string @go(RecordSetID,*string)
}

#R53ResourceObservation: {
	// Domain name that is targeted.
	domainName?: null | string @go(DomainName,*string)

	// Resource record set ID that is targeted.
	recordSetId?: null | string @go(RecordSetID,*string)
}

#R53ResourceParameters: {
	// Domain name that is targeted.
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// Resource record set ID that is targeted.
	// +kubebuilder:validation:Optional
	recordSetId?: null | string @go(RecordSetID,*string)
}

#ResourceSetInitParameters: {
	// Type of the resources in the resource set.
	resourceSetType?: null | string @go(ResourceSetType,*string)

	// List of resources to add to this resource set. See below.
	resources?: [...#ResourcesInitParameters] @go(Resources,[]ResourcesInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ResourceSetObservation: {
	// ARN of the resource set
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// Type of the resources in the resource set.
	resourceSetType?: null | string @go(ResourceSetType,*string)

	// List of resources to add to this resource set. See below.
	resources?: [...#ResourcesObservation] @go(Resources,[]ResourcesObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ResourceSetParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Type of the resources in the resource set.
	// +kubebuilder:validation:Optional
	resourceSetType?: null | string @go(ResourceSetType,*string)

	// List of resources to add to this resource set. See below.
	// +kubebuilder:validation:Optional
	resources?: [...#ResourcesParameters] @go(Resources,[]ResourcesParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ResourcesInitParameters: {
	// Component for DNS/Routing Control Readiness Checks.
	dnsTargetResource?: [...#DNSTargetResourceInitParameters] @go(DNSTargetResource,[]DNSTargetResourceInitParameters)

	// Recovery group ARN or cell ARN that contains this resource set.
	readinessScopes?: [...null | string] @go(ReadinessScopes,[]*string)
}

#ResourcesObservation: {
	// Unique identified for DNS Target Resources, use for readiness checks.
	componentId?: null | string @go(ComponentID,*string)

	// Component for DNS/Routing Control Readiness Checks.
	dnsTargetResource?: [...#DNSTargetResourceObservation] @go(DNSTargetResource,[]DNSTargetResourceObservation)

	// Recovery group ARN or cell ARN that contains this resource set.
	readinessScopes?: [...null | string] @go(ReadinessScopes,[]*string)

	// ARN of the resource.
	resourceArn?: null | string @go(ResourceArn,*string)
}

#ResourcesParameters: {
	// Component for DNS/Routing Control Readiness Checks.
	// +kubebuilder:validation:Optional
	dnsTargetResource?: [...#DNSTargetResourceParameters] @go(DNSTargetResource,[]DNSTargetResourceParameters)

	// Recovery group ARN or cell ARN that contains this resource set.
	// +kubebuilder:validation:Optional
	readinessScopes?: [...null | string] @go(ReadinessScopes,[]*string)

	// ARN of the resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatch/v1beta1.MetricAlarm
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	resourceArn?: null | string @go(ResourceArn,*string)

	// Reference to a MetricAlarm in cloudwatch to populate resourceArn.
	// +kubebuilder:validation:Optional
	resourceArnRef?: null | v1.#Reference @go(ResourceArnRef,*v1.Reference)

	// Selector for a MetricAlarm in cloudwatch to populate resourceArn.
	// +kubebuilder:validation:Optional
	resourceArnSelector?: null | v1.#Selector @go(ResourceArnSelector,*v1.Selector)
}

#TargetResourceInitParameters: {
	// NLB resource a DNS Target Resource points to. Required if r53_resource is not set.
	nlbResource?: [...#NlbResourceInitParameters] @go(NlbResource,[]NlbResourceInitParameters)

	// Route53 resource a DNS Target Resource record points to.
	r53Resource?: [...#R53ResourceInitParameters] @go(R53Resource,[]R53ResourceInitParameters)
}

#TargetResourceObservation: {
	// NLB resource a DNS Target Resource points to. Required if r53_resource is not set.
	nlbResource?: [...#NlbResourceObservation] @go(NlbResource,[]NlbResourceObservation)

	// Route53 resource a DNS Target Resource record points to.
	r53Resource?: [...#R53ResourceObservation] @go(R53Resource,[]R53ResourceObservation)
}

#TargetResourceParameters: {
	// NLB resource a DNS Target Resource points to. Required if r53_resource is not set.
	// +kubebuilder:validation:Optional
	nlbResource?: [...#NlbResourceParameters] @go(NlbResource,[]NlbResourceParameters)

	// Route53 resource a DNS Target Resource record points to.
	// +kubebuilder:validation:Optional
	r53Resource?: [...#R53ResourceParameters] @go(R53Resource,[]R53ResourceParameters)
}

// ResourceSetSpec defines the desired state of ResourceSet
#ResourceSetSpec: {
	v1.#ResourceSpec
	forProvider: #ResourceSetParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ResourceSetInitParameters @go(InitProvider)
}

// ResourceSetStatus defines the observed state of ResourceSet.
#ResourceSetStatus: {
	v1.#ResourceStatus
	atProvider?: #ResourceSetObservation @go(AtProvider)
}

// ResourceSet is the Schema for the ResourceSets API. Provides an AWS Route 53 Recovery Readiness Resource Set
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ResourceSet: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceSetType) || (has(self.initProvider) && has(self.initProvider.resourceSetType))",message="spec.forProvider.resourceSetType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resources) || (has(self.initProvider) && has(self.initProvider.resources))",message="spec.forProvider.resources is a required parameter"
	spec:    #ResourceSetSpec   @go(Spec)
	status?: #ResourceSetStatus @go(Status)
}

// ResourceSetList contains a list of ResourceSets
#ResourceSetList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ResourceSet] @go(Items,[]ResourceSet)
}
