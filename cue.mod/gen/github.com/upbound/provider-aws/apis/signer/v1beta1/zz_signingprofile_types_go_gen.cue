// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/signer/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#SignatureValidityPeriodInitParameters: {
	type?:  null | string  @go(Type,*string)
	value?: null | float64 @go(Value,*float64)
}

#SignatureValidityPeriodObservation: {
	type?:  null | string  @go(Type,*string)
	value?: null | float64 @go(Value,*float64)
}

#SignatureValidityPeriodParameters: {
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// +kubebuilder:validation:Optional
	value?: null | float64 @go(Value,*float64)
}

#SigningProfileInitParameters: {
	// The ID of the platform that is used by the target signing profile.
	platformId?: null | string @go(PlatformID,*string)

	// The validity period for a signing job.
	signatureValidityPeriod?: [...#SignatureValidityPeriodInitParameters] @go(SignatureValidityPeriod,[]SignatureValidityPeriodInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SigningProfileObservation: {
	// The Amazon Resource Name (ARN) for the signing profile.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// A human-readable name for the signing platform associated with the signing profile.
	platformDisplayName?: null | string @go(PlatformDisplayName,*string)

	// The ID of the platform that is used by the target signing profile.
	platformId?: null | string @go(PlatformID,*string)

	// Revocation information for a signing profile.
	revocationRecord?: [...#SigningProfileRevocationRecordObservation] @go(RevocationRecord,[]SigningProfileRevocationRecordObservation)

	// The validity period for a signing job.
	signatureValidityPeriod?: [...#SignatureValidityPeriodObservation] @go(SignatureValidityPeriod,[]SignatureValidityPeriodObservation)

	// The status of the target signing profile.
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The current version of the signing profile.
	version?: null | string @go(Version,*string)

	// The signing profile ARN, including the profile version.
	versionArn?: null | string @go(VersionArn,*string)
}

#SigningProfileParameters: {
	// The ID of the platform that is used by the target signing profile.
	// +kubebuilder:validation:Optional
	platformId?: null | string @go(PlatformID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The validity period for a signing job.
	// +kubebuilder:validation:Optional
	signatureValidityPeriod?: [...#SignatureValidityPeriodParameters] @go(SignatureValidityPeriod,[]SignatureValidityPeriodParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SigningProfileRevocationRecordInitParameters: {
}

#SigningProfileRevocationRecordObservation: {
	revocationEffectiveFrom?: null | string @go(RevocationEffectiveFrom,*string)
	revokedAt?:               null | string @go(RevokedAt,*string)
	revokedBy?:               null | string @go(RevokedBy,*string)
}

#SigningProfileRevocationRecordParameters: {
}

// SigningProfileSpec defines the desired state of SigningProfile
#SigningProfileSpec: {
	v1.#ResourceSpec
	forProvider: #SigningProfileParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SigningProfileInitParameters @go(InitProvider)
}

// SigningProfileStatus defines the observed state of SigningProfile.
#SigningProfileStatus: {
	v1.#ResourceStatus
	atProvider?: #SigningProfileObservation @go(AtProvider)
}

// SigningProfile is the Schema for the SigningProfiles API. Creates a Signer Signing Profile.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SigningProfile: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.platformId) || (has(self.initProvider) && has(self.initProvider.platformId))",message="spec.forProvider.platformId is a required parameter"
	spec:    #SigningProfileSpec   @go(Spec)
	status?: #SigningProfileStatus @go(Status)
}

// SigningProfileList contains a list of SigningProfiles
#SigningProfileList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#SigningProfile] @go(Items,[]SigningProfile)
}
