// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#CustomerGatewayAssociationInitParameters: {
	// The ID of the link.
	linkId?: null | string @go(LinkID,*string)
}

#CustomerGatewayAssociationObservation: {
	// The Amazon Resource Name (ARN) of the customer gateway.
	customerGatewayArn?: null | string @go(CustomerGatewayArn,*string)

	// The ID of the device.
	deviceId?: null | string @go(DeviceID,*string)

	// The ID of the global network.
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)
	id?:              null | string @go(ID,*string)

	// The ID of the link.
	linkId?: null | string @go(LinkID,*string)
}

#CustomerGatewayAssociationParameters: {
	// The Amazon Resource Name (ARN) of the customer gateway.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.CustomerGateway
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	customerGatewayArn?: null | string @go(CustomerGatewayArn,*string)

	// Reference to a CustomerGateway in ec2 to populate customerGatewayArn.
	// +kubebuilder:validation:Optional
	customerGatewayArnRef?: null | v1.#Reference @go(CustomerGatewayArnRef,*v1.Reference)

	// Selector for a CustomerGateway in ec2 to populate customerGatewayArn.
	// +kubebuilder:validation:Optional
	customerGatewayArnSelector?: null | v1.#Selector @go(CustomerGatewayArnSelector,*v1.Selector)

	// The ID of the device.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.Device
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	deviceId?: null | string @go(DeviceID,*string)

	// Reference to a Device in networkmanager to populate deviceId.
	// +kubebuilder:validation:Optional
	deviceIdRef?: null | v1.#Reference @go(DeviceIDRef,*v1.Reference)

	// Selector for a Device in networkmanager to populate deviceId.
	// +kubebuilder:validation:Optional
	deviceIdSelector?: null | v1.#Selector @go(DeviceIDSelector,*v1.Selector)

	// The ID of the global network.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.GlobalNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// Reference to a GlobalNetwork in networkmanager to populate globalNetworkId.
	// +kubebuilder:validation:Optional
	globalNetworkIdRef?: null | v1.#Reference @go(GlobalNetworkIDRef,*v1.Reference)

	// Selector for a GlobalNetwork in networkmanager to populate globalNetworkId.
	// +kubebuilder:validation:Optional
	globalNetworkIdSelector?: null | v1.#Selector @go(GlobalNetworkIDSelector,*v1.Selector)

	// The ID of the link.
	// +kubebuilder:validation:Optional
	linkId?: null | string @go(LinkID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// CustomerGatewayAssociationSpec defines the desired state of CustomerGatewayAssociation
#CustomerGatewayAssociationSpec: {
	v1.#ResourceSpec
	forProvider: #CustomerGatewayAssociationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #CustomerGatewayAssociationInitParameters @go(InitProvider)
}

// CustomerGatewayAssociationStatus defines the observed state of CustomerGatewayAssociation.
#CustomerGatewayAssociationStatus: {
	v1.#ResourceStatus
	atProvider?: #CustomerGatewayAssociationObservation @go(AtProvider)
}

// CustomerGatewayAssociation is the Schema for the CustomerGatewayAssociations API. Associates a customer gateway with a device and optionally, with a link.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CustomerGatewayAssociation: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta                @go(ObjectMeta)
	spec:      #CustomerGatewayAssociationSpec   @go(Spec)
	status?:   #CustomerGatewayAssociationStatus @go(Status)
}

// CustomerGatewayAssociationList contains a list of CustomerGatewayAssociations
#CustomerGatewayAssociationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#CustomerGatewayAssociation] @go(Items,[]CustomerGatewayAssociation)
}
