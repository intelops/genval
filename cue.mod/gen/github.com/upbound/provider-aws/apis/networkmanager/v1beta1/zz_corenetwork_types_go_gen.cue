// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#CoreNetworkInitParameters: {
	// The base policy created by setting the create_base_policy argument to true requires a region to be set in the edge-locations, location key. If base_policy_region is not specified, the region used in the base policy defaults to the region specified in the provider block.
	basePolicyRegion?: null | string @go(BasePolicyRegion,*string)

	// A list of regions to add to the base policy. The base policy created by setting the create_base_policy argument to true requires one or more regions to be set in the edge-locations, location key. If base_policy_regions is not specified, the region used in the base policy defaults to the region specified in the provider block.
	basePolicyRegions?: [...null | string] @go(BasePolicyRegions,[]*string)

	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to LIVE to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the aws_networkmanager_core_network_policy_attachment resource. This base policy is needed if your core network does not have any LIVE policies (e.g. a core network resource created without the policy_document argument) and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are true or false. Conflicts with policy_document. An example base policy is shown below. This base policy is overridden with the policy that you specify in the aws_networkmanager_core_network_policy_attachment resource.
	createBasePolicy?: null | bool @go(CreateBasePolicy,*bool)

	// Description of the Core Network.
	description?: null | string @go(Description,*string)

	// Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the LATEST and LIVE policy document. Refer to the Core network policies documentation for more information. Conflicts with create_base_policy.
	policyDocument?: null | string @go(PolicyDocument,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#CoreNetworkObservation: {
	// Core Network Amazon Resource Name (ARN).
	arn?: null | string @go(Arn,*string)

	// The base policy created by setting the create_base_policy argument to true requires a region to be set in the edge-locations, location key. If base_policy_region is not specified, the region used in the base policy defaults to the region specified in the provider block.
	basePolicyRegion?: null | string @go(BasePolicyRegion,*string)

	// A list of regions to add to the base policy. The base policy created by setting the create_base_policy argument to true requires one or more regions to be set in the edge-locations, location key. If base_policy_regions is not specified, the region used in the base policy defaults to the region specified in the provider block.
	basePolicyRegions?: [...null | string] @go(BasePolicyRegions,[]*string)

	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to LIVE to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the aws_networkmanager_core_network_policy_attachment resource. This base policy is needed if your core network does not have any LIVE policies (e.g. a core network resource created without the policy_document argument) and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are true or false. Conflicts with policy_document. An example base policy is shown below. This base policy is overridden with the policy that you specify in the aws_networkmanager_core_network_policy_attachment resource.
	createBasePolicy?: null | bool @go(CreateBasePolicy,*bool)

	// Timestamp when a core network was created.
	createdAt?: null | string @go(CreatedAt,*string)

	// Description of the Core Network.
	description?: null | string @go(Description,*string)

	// One or more blocks detailing the edges within a core network. Detailed below.
	edges?: [...#EdgesObservation] @go(Edges,[]EdgesObservation)

	// The ID of the global network that a core network will be a part of.
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// Core Network ID.
	id?: null | string @go(ID,*string)

	// Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the LATEST and LIVE policy document. Refer to the Core network policies documentation for more information. Conflicts with create_base_policy.
	policyDocument?: null | string @go(PolicyDocument,*string)

	// One or more blocks detailing the segments within a core network. Detailed below.
	segments?: [...#SegmentsObservation] @go(Segments,[]SegmentsObservation)

	// Current state of a core network.
	state?: null | string @go(State,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#CoreNetworkParameters: {
	// The base policy created by setting the create_base_policy argument to true requires a region to be set in the edge-locations, location key. If base_policy_region is not specified, the region used in the base policy defaults to the region specified in the provider block.
	// +kubebuilder:validation:Optional
	basePolicyRegion?: null | string @go(BasePolicyRegion,*string)

	// A list of regions to add to the base policy. The base policy created by setting the create_base_policy argument to true requires one or more regions to be set in the edge-locations, location key. If base_policy_regions is not specified, the region used in the base policy defaults to the region specified in the provider block.
	// +kubebuilder:validation:Optional
	basePolicyRegions?: [...null | string] @go(BasePolicyRegions,[]*string)

	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to LIVE to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the aws_networkmanager_core_network_policy_attachment resource. This base policy is needed if your core network does not have any LIVE policies (e.g. a core network resource created without the policy_document argument) and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are true or false. Conflicts with policy_document. An example base policy is shown below. This base policy is overridden with the policy that you specify in the aws_networkmanager_core_network_policy_attachment resource.
	// +kubebuilder:validation:Optional
	createBasePolicy?: null | bool @go(CreateBasePolicy,*bool)

	// Description of the Core Network.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The ID of the global network that a core network will be a part of.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.GlobalNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// Reference to a GlobalNetwork in networkmanager to populate globalNetworkId.
	// +kubebuilder:validation:Optional
	globalNetworkIdRef?: null | v1.#Reference @go(GlobalNetworkIDRef,*v1.Reference)

	// Selector for a GlobalNetwork in networkmanager to populate globalNetworkId.
	// +kubebuilder:validation:Optional
	globalNetworkIdSelector?: null | v1.#Selector @go(GlobalNetworkIDSelector,*v1.Selector)

	// Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the LATEST and LIVE policy document. Refer to the Core network policies documentation for more information. Conflicts with create_base_policy.
	// +kubebuilder:validation:Optional
	policyDocument?: null | string @go(PolicyDocument,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EdgesInitParameters: {
}

#EdgesObservation: {
	// ASN of a core network edge.
	asn?: null | float64 @go(Asn,*float64)

	// Region where a core network edge is located.
	edgeLocation?: null | string @go(EdgeLocation,*string)

	// Inside IP addresses used for core network edges.
	insideCidrBlocks?: [...null | string] @go(InsideCidrBlocks,[]*string)
}

#EdgesParameters: {
}

#SegmentsInitParameters: {
}

#SegmentsObservation: {
	// Regions where the edges are located.
	edgeLocations?: [...null | string] @go(EdgeLocations,[]*string)

	// Name of a core network segment.
	name?: null | string @go(Name,*string)

	// Shared segments of a core network.
	sharedSegments?: [...null | string] @go(SharedSegments,[]*string)
}

#SegmentsParameters: {
}

// CoreNetworkSpec defines the desired state of CoreNetwork
#CoreNetworkSpec: {
	v1.#ResourceSpec
	forProvider: #CoreNetworkParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #CoreNetworkInitParameters @go(InitProvider)
}

// CoreNetworkStatus defines the observed state of CoreNetwork.
#CoreNetworkStatus: {
	v1.#ResourceStatus
	atProvider?: #CoreNetworkObservation @go(AtProvider)
}

// CoreNetwork is the Schema for the CoreNetworks API. Provides a core network resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CoreNetwork: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #CoreNetworkSpec   @go(Spec)
	status?:   #CoreNetworkStatus @go(Status)
}

// CoreNetworkList contains a list of CoreNetworks
#CoreNetworkList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#CoreNetwork] @go(Items,[]CoreNetwork)
}
