// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ConnectAttachmentInitParameters: {
	// Options for creating an attachment.
	options?: [...#OptionsInitParameters] @go(Options,[]OptionsInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ConnectAttachmentObservation: {
	// The ARN of the attachment.
	arn?: null | string @go(Arn,*string)

	// The ID of the attachment.
	attachmentId?: null | string @go(AttachmentID,*string)

	// The policy rule number associated with the attachment.
	attachmentPolicyRuleNumber?: null | float64 @go(AttachmentPolicyRuleNumber,*float64)

	// The type of attachment.
	attachmentType?: null | string @go(AttachmentType,*string)

	// The ARN of a core network.
	coreNetworkArn?: null | string @go(CoreNetworkArn,*string)

	// The ID of a core network where you want to create the attachment.
	coreNetworkId?: null | string @go(CoreNetworkID,*string)

	// The Region where the edge is located.
	edgeLocation?: null | string @go(EdgeLocation,*string)

	// The ID of the attachment.
	id?: null | string @go(ID,*string)

	// Options for creating an attachment.
	options?: [...#OptionsObservation] @go(Options,[]OptionsObservation)

	// The ID of the attachment account owner.
	ownerAccountId?: null | string @go(OwnerAccountID,*string)

	// The attachment resource ARN.
	resourceArn?: null | string @go(ResourceArn,*string)

	// The name of the segment attachment.
	segmentName?: null | string @go(SegmentName,*string)

	// The state of the attachment.
	state?: null | string @go(State,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The ID of the attachment between the two connections.
	transportAttachmentId?: null | string @go(TransportAttachmentID,*string)
}

#ConnectAttachmentParameters: {
	// The ID of a core network where you want to create the attachment.
	// +crossplane:generate:reference:type=CoreNetwork
	// +kubebuilder:validation:Optional
	coreNetworkId?: null | string @go(CoreNetworkID,*string)

	// Reference to a CoreNetwork to populate coreNetworkId.
	// +kubebuilder:validation:Optional
	coreNetworkIdRef?: null | v1.#Reference @go(CoreNetworkIDRef,*v1.Reference)

	// Selector for a CoreNetwork to populate coreNetworkId.
	// +kubebuilder:validation:Optional
	coreNetworkIdSelector?: null | v1.#Selector @go(CoreNetworkIDSelector,*v1.Selector)

	// The Region where the edge is located.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.VPCAttachment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("edge_location",true)
	// +kubebuilder:validation:Optional
	edgeLocation?: null | string @go(EdgeLocation,*string)

	// Reference to a VPCAttachment in networkmanager to populate edgeLocation.
	// +kubebuilder:validation:Optional
	edgeLocationRef?: null | v1.#Reference @go(EdgeLocationRef,*v1.Reference)

	// Selector for a VPCAttachment in networkmanager to populate edgeLocation.
	// +kubebuilder:validation:Optional
	edgeLocationSelector?: null | v1.#Selector @go(EdgeLocationSelector,*v1.Selector)

	// Options for creating an attachment.
	// +kubebuilder:validation:Optional
	options?: [...#OptionsParameters] @go(Options,[]OptionsParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the attachment between the two connections.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.VPCAttachment
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	transportAttachmentId?: null | string @go(TransportAttachmentID,*string)

	// Reference to a VPCAttachment in networkmanager to populate transportAttachmentId.
	// +kubebuilder:validation:Optional
	transportAttachmentIdRef?: null | v1.#Reference @go(TransportAttachmentIDRef,*v1.Reference)

	// Selector for a VPCAttachment in networkmanager to populate transportAttachmentId.
	// +kubebuilder:validation:Optional
	transportAttachmentIdSelector?: null | v1.#Selector @go(TransportAttachmentIDSelector,*v1.Selector)
}

#OptionsInitParameters: {
	protocol?: null | string @go(Protocol,*string)
}

#OptionsObservation: {
	protocol?: null | string @go(Protocol,*string)
}

#OptionsParameters: {
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)
}

// ConnectAttachmentSpec defines the desired state of ConnectAttachment
#ConnectAttachmentSpec: {
	v1.#ResourceSpec
	forProvider: #ConnectAttachmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ConnectAttachmentInitParameters @go(InitProvider)
}

// ConnectAttachmentStatus defines the observed state of ConnectAttachment.
#ConnectAttachmentStatus: {
	v1.#ResourceStatus
	atProvider?: #ConnectAttachmentObservation @go(AtProvider)
}

// ConnectAttachment is the Schema for the ConnectAttachments API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConnectAttachment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.options) || (has(self.initProvider) && has(self.initProvider.options))",message="spec.forProvider.options is a required parameter"
	spec:    #ConnectAttachmentSpec   @go(Spec)
	status?: #ConnectAttachmentStatus @go(Status)
}

// ConnectAttachmentList contains a list of ConnectAttachments
#ConnectAttachmentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ConnectAttachment] @go(Items,[]ConnectAttachment)
}
