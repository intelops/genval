// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kendra/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ContentSourceConfigurationInitParameters: {
	// The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	dataSourceIds?: [...null | string] @go(DataSourceIds,[]*string)

	// Whether to use documents you indexed directly using the BatchPutDocument API. Defaults to false.
	directPutContent?: null | bool @go(DirectPutContent,*bool)

	// The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	faqIds?: [...null | string] @go(FaqIds,[]*string)
}

#ContentSourceConfigurationObservation: {
	// The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	dataSourceIds?: [...null | string] @go(DataSourceIds,[]*string)

	// Whether to use documents you indexed directly using the BatchPutDocument API. Defaults to false.
	directPutContent?: null | bool @go(DirectPutContent,*bool)

	// The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	faqIds?: [...null | string] @go(FaqIds,[]*string)
}

#ContentSourceConfigurationParameters: {
	// The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	// +kubebuilder:validation:Optional
	dataSourceIds?: [...null | string] @go(DataSourceIds,[]*string)

	// Whether to use documents you indexed directly using the BatchPutDocument API. Defaults to false.
	// +kubebuilder:validation:Optional
	directPutContent?: null | bool @go(DirectPutContent,*bool)

	// The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	// +kubebuilder:validation:Optional
	faqIds?: [...null | string] @go(FaqIds,[]*string)
}

#EndpointsInitParameters: {
}

#EndpointsObservation: {
	// The endpoint of your Amazon Kendra experience.
	endpoint?: null | string @go(Endpoint,*string)

	// The type of endpoint for your Amazon Kendra experience.
	endpointType?: null | string @go(EndpointType,*string)
}

#EndpointsParameters: {
}

#ExperienceConfigurationInitParameters: {
	// The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the BatchPutDocument API. Detailed below.
	contentSourceConfiguration?: [...#ContentSourceConfigurationInitParameters] @go(ContentSourceConfiguration,[]ContentSourceConfigurationInitParameters)

	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
	userIdentityConfiguration?: [...#UserIdentityConfigurationInitParameters] @go(UserIdentityConfiguration,[]UserIdentityConfigurationInitParameters)
}

#ExperienceConfigurationObservation: {
	// The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the BatchPutDocument API. Detailed below.
	contentSourceConfiguration?: [...#ContentSourceConfigurationObservation] @go(ContentSourceConfiguration,[]ContentSourceConfigurationObservation)

	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
	userIdentityConfiguration?: [...#UserIdentityConfigurationObservation] @go(UserIdentityConfiguration,[]UserIdentityConfigurationObservation)
}

#ExperienceConfigurationParameters: {
	// The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the BatchPutDocument API. Detailed below.
	// +kubebuilder:validation:Optional
	contentSourceConfiguration?: [...#ContentSourceConfigurationParameters] @go(ContentSourceConfiguration,[]ContentSourceConfigurationParameters)

	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
	// +kubebuilder:validation:Optional
	userIdentityConfiguration?: [...#UserIdentityConfigurationParameters] @go(UserIdentityConfiguration,[]UserIdentityConfigurationParameters)
}

#ExperienceInitParameters: {
	// Configuration information for your Amazon Kendra experience. Detailed below.
	configuration?: [...#ExperienceConfigurationInitParameters] @go(Configuration,[]ExperienceConfigurationInitParameters)

	// A description for your Amazon Kendra experience.
	description?: null | string @go(Description,*string)

	// A name for your Amazon Kendra experience.
	name?: null | string @go(Name,*string)
}

#ExperienceObservation: {
	// ARN of the Experience.
	arn?: null | string @go(Arn,*string)

	// Configuration information for your Amazon Kendra experience. Detailed below.
	configuration?: [...#ExperienceConfigurationObservation] @go(Configuration,[]ExperienceConfigurationObservation)

	// A description for your Amazon Kendra experience.
	description?: null | string @go(Description,*string)

	// Shows the endpoint URLs for your Amazon Kendra experiences. The URLs are unique and fully hosted by AWS.
	endpoints?: [...#EndpointsObservation] @go(Endpoints,[]EndpointsObservation)

	// The unique identifier of the experience.
	experienceId?: null | string @go(ExperienceID,*string)

	// The unique identifiers of the experience and index separated by a slash (/).
	id?: null | string @go(ID,*string)

	// The identifier of the index for your Amazon Kendra experience.
	indexId?: null | string @go(IndexID,*string)

	// A name for your Amazon Kendra experience.
	name?: null | string @go(Name,*string)

	// The Amazon Resource Name (ARN) of a role with permission to access Query API, QuerySuggestions API, SubmitFeedback API, and AWS SSO that stores your user and group information. For more information, see IAM roles for Amazon Kendra.
	roleArn?: null | string @go(RoleArn,*string)

	// The current processing status of your Amazon Kendra experience.
	status?: null | string @go(Status,*string)
}

#ExperienceParameters: {
	// Configuration information for your Amazon Kendra experience. Detailed below.
	// +kubebuilder:validation:Optional
	configuration?: [...#ExperienceConfigurationParameters] @go(Configuration,[]ExperienceConfigurationParameters)

	// A description for your Amazon Kendra experience.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The identifier of the index for your Amazon Kendra experience.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kendra/v1beta1.Index
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	indexId?: null | string @go(IndexID,*string)

	// Reference to a Index in kendra to populate indexId.
	// +kubebuilder:validation:Optional
	indexIdRef?: null | v1.#Reference @go(IndexIDRef,*v1.Reference)

	// Selector for a Index in kendra to populate indexId.
	// +kubebuilder:validation:Optional
	indexIdSelector?: null | v1.#Selector @go(IndexIDSelector,*v1.Selector)

	// A name for your Amazon Kendra experience.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of a role with permission to access Query API, QuerySuggestions API, SubmitFeedback API, and AWS SSO that stores your user and group information. For more information, see IAM roles for Amazon Kendra.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	roleArnRef?: null | v1.#Reference @go(RoleArnRef,*v1.Reference)

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	roleArnSelector?: null | v1.#Selector @go(RoleArnSelector,*v1.Selector)
}

#UserIdentityConfigurationInitParameters: {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	identityAttributeName?: null | string @go(IdentityAttributeName,*string)
}

#UserIdentityConfigurationObservation: {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	identityAttributeName?: null | string @go(IdentityAttributeName,*string)
}

#UserIdentityConfigurationParameters: {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	// +kubebuilder:validation:Optional
	identityAttributeName?: null | string @go(IdentityAttributeName,*string)
}

// ExperienceSpec defines the desired state of Experience
#ExperienceSpec: {
	v1.#ResourceSpec
	forProvider: #ExperienceParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ExperienceInitParameters @go(InitProvider)
}

// ExperienceStatus defines the observed state of Experience.
#ExperienceStatus: {
	v1.#ResourceStatus
	atProvider?: #ExperienceObservation @go(AtProvider)
}

// Experience is the Schema for the Experiences API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Experience: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #ExperienceSpec   @go(Spec)
	status?: #ExperienceStatus @go(Status)
}

// ExperienceList contains a list of Experiences
#ExperienceList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Experience] @go(Items,[]Experience)
}
