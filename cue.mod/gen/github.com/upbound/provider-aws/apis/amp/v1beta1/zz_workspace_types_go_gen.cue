// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/amp/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#LoggingConfigurationInitParameters: {
	// The ARN of the CloudWatch log group to which the vended log data will be published. This log group must exist.
	logGroupArn?: null | string @go(LogGroupArn,*string)
}

#LoggingConfigurationObservation: {
	// The ARN of the CloudWatch log group to which the vended log data will be published. This log group must exist.
	logGroupArn?: null | string @go(LogGroupArn,*string)
}

#LoggingConfigurationParameters: {
	// The ARN of the CloudWatch log group to which the vended log data will be published. This log group must exist.
	// +kubebuilder:validation:Optional
	logGroupArn?: null | string @go(LogGroupArn,*string)
}

#WorkspaceInitParameters: {
	// The alias of the prometheus workspace. See more in AWS Docs.
	alias?: null | string @go(Alias,*string)

	// Logging configuration for the workspace. See Logging Configuration below for details.
	loggingConfiguration?: [...#LoggingConfigurationInitParameters] @go(LoggingConfiguration,[]LoggingConfigurationInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#WorkspaceObservation: {
	// The alias of the prometheus workspace. See more in AWS Docs.
	alias?: null | string @go(Alias,*string)

	// Amazon Resource Name (ARN) of the workspace.
	arn?: null | string @go(Arn,*string)

	// Identifier of the workspace
	id?: null | string @go(ID,*string)

	// Logging configuration for the workspace. See Logging Configuration below for details.
	loggingConfiguration?: [...#LoggingConfigurationObservation] @go(LoggingConfiguration,[]LoggingConfigurationObservation)

	// Prometheus endpoint available for this workspace.
	prometheusEndpoint?: null | string @go(PrometheusEndpoint,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#WorkspaceParameters: {
	// The alias of the prometheus workspace. See more in AWS Docs.
	// +kubebuilder:validation:Optional
	alias?: null | string @go(Alias,*string)

	// Logging configuration for the workspace. See Logging Configuration below for details.
	// +kubebuilder:validation:Optional
	loggingConfiguration?: [...#LoggingConfigurationParameters] @go(LoggingConfiguration,[]LoggingConfigurationParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// WorkspaceSpec defines the desired state of Workspace
#WorkspaceSpec: {
	v1.#ResourceSpec
	forProvider: #WorkspaceParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #WorkspaceInitParameters @go(InitProvider)
}

// WorkspaceStatus defines the observed state of Workspace.
#WorkspaceStatus: {
	v1.#ResourceStatus
	atProvider?: #WorkspaceObservation @go(AtProvider)
}

// Workspace is the Schema for the Workspaces API. Manages an Amazon Managed Service for Prometheus (AMP) Workspace
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Workspace: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #WorkspaceSpec     @go(Spec)
	status?:   #WorkspaceStatus   @go(Status)
}

// WorkspaceList contains a list of Workspaces
#WorkspaceList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Workspace] @go(Items,[]Workspace)
}
