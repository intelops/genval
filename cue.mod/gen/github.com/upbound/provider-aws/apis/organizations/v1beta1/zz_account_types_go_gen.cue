// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/organizations/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AccountInitParameters: {
	// If true, a deletion event will close the account. Otherwise, it will only remove from the organization. This is not supported for GovCloud accounts.
	closeOnDeletion?: null | bool @go(CloseOnDeletion,*bool)

	// Whether to also create a GovCloud account. The GovCloud account is tied to the main (commercial) account this resource creates. If true, the GovCloud account ID is available in the govcloud_id attribute.
	createGovcloud?: null | bool @go(CreateGovcloud,*bool)

	// Email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account.
	email?: null | string @go(Email,*string)

	// If set to ALLOW, the new account enables IAM users and roles to access account billing information if they have the required permissions. If set to DENY, then only the root user (and no roles) of the new account can access account billing information. If this is unset, the AWS API will default this to ALLOW. If the resource is created and this option is changed, it will try to recreate the account.
	iamUserAccessToBilling?: null | string @go(IAMUserAccessToBilling,*string)

	// Friendly name for the member account.
	name?: null | string @go(Name,*string)

	// Parent Organizational Unit ID or Root ID for the account. Defaults to the Organization default Root ID. A configuration must be present for this argument to perform drift detection.
	parentId?: null | string @go(ParentID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#AccountObservation: {
	// The ARN for this account.
	arn?: null | string @go(Arn,*string)

	// If true, a deletion event will close the account. Otherwise, it will only remove from the organization. This is not supported for GovCloud accounts.
	closeOnDeletion?: null | bool @go(CloseOnDeletion,*bool)

	// Whether to also create a GovCloud account. The GovCloud account is tied to the main (commercial) account this resource creates. If true, the GovCloud account ID is available in the govcloud_id attribute.
	createGovcloud?: null | bool @go(CreateGovcloud,*bool)

	// Email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account.
	email?: null | string @go(Email,*string)

	// ID for a GovCloud account created with the account.
	govcloudId?: null | string @go(GovcloudID,*string)

	// If set to ALLOW, the new account enables IAM users and roles to access account billing information if they have the required permissions. If set to DENY, then only the root user (and no roles) of the new account can access account billing information. If this is unset, the AWS API will default this to ALLOW. If the resource is created and this option is changed, it will try to recreate the account.
	iamUserAccessToBilling?: null | string @go(IAMUserAccessToBilling,*string)

	// The AWS account id
	id?:              null | string @go(ID,*string)
	joinedMethod?:    null | string @go(JoinedMethod,*string)
	joinedTimestamp?: null | string @go(JoinedTimestamp,*string)

	// Friendly name for the member account.
	name?: null | string @go(Name,*string)

	// Parent Organizational Unit ID or Root ID for the account. Defaults to the Organization default Root ID. A configuration must be present for this argument to perform drift detection.
	parentId?: null | string @go(ParentID,*string)
	status?:   null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AccountParameters: {
	// If true, a deletion event will close the account. Otherwise, it will only remove from the organization. This is not supported for GovCloud accounts.
	// +kubebuilder:validation:Optional
	closeOnDeletion?: null | bool @go(CloseOnDeletion,*bool)

	// Whether to also create a GovCloud account. The GovCloud account is tied to the main (commercial) account this resource creates. If true, the GovCloud account ID is available in the govcloud_id attribute.
	// +kubebuilder:validation:Optional
	createGovcloud?: null | bool @go(CreateGovcloud,*bool)

	// Email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// If set to ALLOW, the new account enables IAM users and roles to access account billing information if they have the required permissions. If set to DENY, then only the root user (and no roles) of the new account can access account billing information. If this is unset, the AWS API will default this to ALLOW. If the resource is created and this option is changed, it will try to recreate the account.
	// +kubebuilder:validation:Optional
	iamUserAccessToBilling?: null | string @go(IAMUserAccessToBilling,*string)

	// Friendly name for the member account.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Parent Organizational Unit ID or Root ID for the account. Defaults to the Organization default Root ID. A configuration must be present for this argument to perform drift detection.
	// +kubebuilder:validation:Optional
	parentId?: null | string @go(ParentID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// AccountSpec defines the desired state of Account
#AccountSpec: {
	v1.#ResourceSpec
	forProvider: #AccountParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AccountInitParameters @go(InitProvider)
}

// AccountStatus defines the observed state of Account.
#AccountStatus: {
	v1.#ResourceStatus
	atProvider?: #AccountObservation @go(AtProvider)
}

// Account is the Schema for the Accounts API. Provides a resource to create a member account in the current AWS Organization.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Account: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.email) || (has(self.initProvider) && has(self.initProvider.email))",message="spec.forProvider.email is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #AccountSpec   @go(Spec)
	status?: #AccountStatus @go(Status)
}

// AccountList contains a list of Accounts
#AccountList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Account] @go(Items,[]Account)
}
