// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/detective/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#InvitationAccepterInitParameters: {
}

#InvitationAccepterObservation: {
	// ARN of the behavior graph that the member account is accepting the invitation for.
	graphArn?: null | string @go(GraphArn,*string)

	// Unique identifier (ID) of the Detective invitation accepter.
	id?: null | string @go(ID,*string)
}

#InvitationAccepterParameters: {
	// ARN of the behavior graph that the member account is accepting the invitation for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/detective/v1beta1.Graph
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("graph_arn",true)
	// +kubebuilder:validation:Optional
	graphArn?: null | string @go(GraphArn,*string)

	// Reference to a Graph in detective to populate graphArn.
	// +kubebuilder:validation:Optional
	graphArnRef?: null | v1.#Reference @go(GraphArnRef,*v1.Reference)

	// Selector for a Graph in detective to populate graphArn.
	// +kubebuilder:validation:Optional
	graphArnSelector?: null | v1.#Selector @go(GraphArnSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// InvitationAccepterSpec defines the desired state of InvitationAccepter
#InvitationAccepterSpec: {
	v1.#ResourceSpec
	forProvider: #InvitationAccepterParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #InvitationAccepterInitParameters @go(InitProvider)
}

// InvitationAccepterStatus defines the observed state of InvitationAccepter.
#InvitationAccepterStatus: {
	v1.#ResourceStatus
	atProvider?: #InvitationAccepterObservation @go(AtProvider)
}

// InvitationAccepter is the Schema for the InvitationAccepters API. Provides a resource to manage an Amazon Detective member invitation accepter.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#InvitationAccepter: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta        @go(ObjectMeta)
	spec:      #InvitationAccepterSpec   @go(Spec)
	status?:   #InvitationAccepterStatus @go(Status)
}

// InvitationAccepterList contains a list of InvitationAccepters
#InvitationAccepterList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#InvitationAccepter] @go(Items,[]InvitationAccepter)
}
