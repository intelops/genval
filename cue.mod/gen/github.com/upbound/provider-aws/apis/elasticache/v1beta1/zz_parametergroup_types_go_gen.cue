// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/elasticache/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ParameterGroupInitParameters: {
	// The description of the ElastiCache parameter group.
	description?: null | string @go(Description,*string)

	// The family of the ElastiCache parameter group.
	family?: null | string @go(Family,*string)

	// The name of the ElastiCache parameter group.
	name?: null | string @go(Name,*string)

	// A list of ElastiCache parameters to apply.
	parameter?: [...#ParameterInitParameters] @go(Parameter,[]ParameterInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ParameterGroupObservation: {
	// The AWS ARN associated with the parameter group.
	arn?: null | string @go(Arn,*string)

	// The description of the ElastiCache parameter group.
	description?: null | string @go(Description,*string)

	// The family of the ElastiCache parameter group.
	family?: null | string @go(Family,*string)

	// The ElastiCache parameter group name.
	id?: null | string @go(ID,*string)

	// The name of the ElastiCache parameter group.
	name?: null | string @go(Name,*string)

	// A list of ElastiCache parameters to apply.
	parameter?: [...#ParameterObservation] @go(Parameter,[]ParameterObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ParameterGroupParameters: {
	// The description of the ElastiCache parameter group.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The family of the ElastiCache parameter group.
	// +kubebuilder:validation:Optional
	family?: null | string @go(Family,*string)

	// The name of the ElastiCache parameter group.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A list of ElastiCache parameters to apply.
	// +kubebuilder:validation:Optional
	parameter?: [...#ParameterParameters] @go(Parameter,[]ParameterParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ParameterInitParameters: {
	// The name of the ElastiCache parameter group.
	name?: null | string @go(Name,*string)

	// The value of the ElastiCache parameter.
	value?: null | string @go(Value,*string)
}

#ParameterObservation: {
	// The name of the ElastiCache parameter group.
	name?: null | string @go(Name,*string)

	// The value of the ElastiCache parameter.
	value?: null | string @go(Value,*string)
}

#ParameterParameters: {
	// The name of the ElastiCache parameter group.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The value of the ElastiCache parameter.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

// ParameterGroupSpec defines the desired state of ParameterGroup
#ParameterGroupSpec: {
	v1.#ResourceSpec
	forProvider: #ParameterGroupParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ParameterGroupInitParameters @go(InitProvider)
}

// ParameterGroupStatus defines the observed state of ParameterGroup.
#ParameterGroupStatus: {
	v1.#ResourceStatus
	atProvider?: #ParameterGroupObservation @go(AtProvider)
}

// ParameterGroup is the Schema for the ParameterGroups API. Provides an ElastiCache parameter group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ParameterGroup: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.family) || (has(self.initProvider) && has(self.initProvider.family))",message="spec.forProvider.family is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #ParameterGroupSpec   @go(Spec)
	status?: #ParameterGroupStatus @go(Status)
}

// ParameterGroupList contains a list of ParameterGroups
#ParameterGroupList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ParameterGroup] @go(Items,[]ParameterGroup)
}
