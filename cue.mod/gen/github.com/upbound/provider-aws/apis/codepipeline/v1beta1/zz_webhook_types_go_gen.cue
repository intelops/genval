// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/codepipeline/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AuthenticationConfigurationInitParameters: {
	// A valid CIDR block for IP filtering. Required for IP.
	allowedIpRange?: null | string @go(AllowedIPRange,*string)
}

#AuthenticationConfigurationObservation: {
	// A valid CIDR block for IP filtering. Required for IP.
	allowedIpRange?: null | string @go(AllowedIPRange,*string)
}

#AuthenticationConfigurationParameters: {
	// A valid CIDR block for IP filtering. Required for IP.
	// +kubebuilder:validation:Optional
	allowedIpRange?: null | string @go(AllowedIPRange,*string)

	// The shared secret for the GitHub repository webhook. Set this as secret in your github_repository_webhook's configuration block. Required for GITHUB_HMAC.
	// +kubebuilder:validation:Optional
	secretTokenSecretRef?: null | v1.#SecretKeySelector @go(SecretTokenSecretRef,*v1.SecretKeySelector)
}

#FilterInitParameters: {
	// The JSON path to filter on.
	jsonPath?: null | string @go(JSONPath,*string)

	// The value to match on (e.g., refs/heads/{Branch}). See AWS docs for details.
	matchEquals?: null | string @go(MatchEquals,*string)
}

#FilterObservation: {
	// The JSON path to filter on.
	jsonPath?: null | string @go(JSONPath,*string)

	// The value to match on (e.g., refs/heads/{Branch}). See AWS docs for details.
	matchEquals?: null | string @go(MatchEquals,*string)
}

#FilterParameters: {
	// The JSON path to filter on.
	// +kubebuilder:validation:Optional
	jsonPath?: null | string @go(JSONPath,*string)

	// The value to match on (e.g., refs/heads/{Branch}). See AWS docs for details.
	// +kubebuilder:validation:Optional
	matchEquals?: null | string @go(MatchEquals,*string)
}

#WebhookInitParameters: {
	// The type of authentication  to use. One of IP, GITHUB_HMAC, or UNAUTHENTICATED.
	authentication?: null | string @go(Authentication,*string)

	// An auth block. Required for IP and GITHUB_HMAC. Auth blocks are documented below.
	authenticationConfiguration?: [...#AuthenticationConfigurationInitParameters] @go(AuthenticationConfiguration,[]AuthenticationConfigurationInitParameters)

	// One or more filter blocks. Filter blocks are documented below.
	filter?: [...#FilterInitParameters] @go(Filter,[]FilterInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	targetAction?: null | string @go(TargetAction,*string)
}

#WebhookObservation: {
	// The CodePipeline webhook's ARN.
	arn?: null | string @go(Arn,*string)

	// The type of authentication  to use. One of IP, GITHUB_HMAC, or UNAUTHENTICATED.
	authentication?: null | string @go(Authentication,*string)

	// An auth block. Required for IP and GITHUB_HMAC. Auth blocks are documented below.
	authenticationConfiguration?: [...#AuthenticationConfigurationObservation] @go(AuthenticationConfiguration,[]AuthenticationConfigurationObservation)

	// One or more filter blocks. Filter blocks are documented below.
	filter?: [...#FilterObservation] @go(Filter,[]FilterObservation)

	// The CodePipeline webhook's ARN.
	id?: null | string @go(ID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	targetAction?: null | string @go(TargetAction,*string)

	// The name of the pipeline.
	targetPipeline?: null | string @go(TargetPipeline,*string)

	// The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
	url?: null | string @go(URL,*string)
}

#WebhookParameters: {
	// The type of authentication  to use. One of IP, GITHUB_HMAC, or UNAUTHENTICATED.
	// +kubebuilder:validation:Optional
	authentication?: null | string @go(Authentication,*string)

	// An auth block. Required for IP and GITHUB_HMAC. Auth blocks are documented below.
	// +kubebuilder:validation:Optional
	authenticationConfiguration?: [...#AuthenticationConfigurationParameters] @go(AuthenticationConfiguration,[]AuthenticationConfigurationParameters)

	// One or more filter blocks. Filter blocks are documented below.
	// +kubebuilder:validation:Optional
	filter?: [...#FilterParameters] @go(Filter,[]FilterParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	// +kubebuilder:validation:Optional
	targetAction?: null | string @go(TargetAction,*string)

	// The name of the pipeline.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/codepipeline/v1beta1.Codepipeline
	// +kubebuilder:validation:Optional
	targetPipeline?: null | string @go(TargetPipeline,*string)

	// Reference to a Codepipeline in codepipeline to populate targetPipeline.
	// +kubebuilder:validation:Optional
	targetPipelineRef?: null | v1.#Reference @go(TargetPipelineRef,*v1.Reference)

	// Selector for a Codepipeline in codepipeline to populate targetPipeline.
	// +kubebuilder:validation:Optional
	targetPipelineSelector?: null | v1.#Selector @go(TargetPipelineSelector,*v1.Selector)
}

// WebhookSpec defines the desired state of Webhook
#WebhookSpec: {
	v1.#ResourceSpec
	forProvider: #WebhookParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #WebhookInitParameters @go(InitProvider)
}

// WebhookStatus defines the observed state of Webhook.
#WebhookStatus: {
	v1.#ResourceStatus
	atProvider?: #WebhookObservation @go(AtProvider)
}

// Webhook is the Schema for the Webhooks API. Provides a CodePipeline Webhook
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Webhook: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authentication) || (has(self.initProvider) && has(self.initProvider.authentication))",message="spec.forProvider.authentication is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.filter) || (has(self.initProvider) && has(self.initProvider.filter))",message="spec.forProvider.filter is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetAction) || (has(self.initProvider) && has(self.initProvider.targetAction))",message="spec.forProvider.targetAction is a required parameter"
	spec:    #WebhookSpec   @go(Spec)
	status?: #WebhookStatus @go(Status)
}

// WebhookList contains a list of Webhooks
#WebhookList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Webhook] @go(Items,[]Webhook)
}
