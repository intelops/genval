// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/opsworks/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#CloudwatchConfigurationInitParameters: {
	enabled?: null | bool @go(Enabled,*bool)

	// A block the specifies how an opsworks logs look like. See Log Streams.
	logStreams?: [...#LogStreamsInitParameters] @go(LogStreams,[]LogStreamsInitParameters)
}

#CloudwatchConfigurationObservation: {
	enabled?: null | bool @go(Enabled,*bool)

	// A block the specifies how an opsworks logs look like. See Log Streams.
	logStreams?: [...#LogStreamsObservation] @go(LogStreams,[]LogStreamsObservation)
}

#CloudwatchConfigurationParameters: {
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// A block the specifies how an opsworks logs look like. See Log Streams.
	// +kubebuilder:validation:Optional
	logStreams?: [...#LogStreamsParameters] @go(LogStreams,[]LogStreamsParameters)
}

#CustomLayerInitParameters: {
	// Whether to automatically assign an elastic IP address to the layer's instances.
	autoAssignElasticIps?: null | bool @go(AutoAssignElasticIps,*bool)

	// For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
	autoAssignPublicIps?: null | bool @go(AutoAssignPublicIps,*bool)

	// Whether to enable auto-healing for the layer.
	autoHealing?: null | bool @go(AutoHealing,*bool)

	// Will create an EBS volume and connect it to the layer's instances. See Cloudwatch Configuration.
	cloudwatchConfiguration?: [...#CloudwatchConfigurationInitParameters] @go(CloudwatchConfiguration,[]CloudwatchConfigurationInitParameters)
	customConfigureRecipes?: [...null | string] @go(CustomConfigureRecipes,[]*string)
	customDeployRecipes?: [...null | string] @go(CustomDeployRecipes,[]*string)

	// The ARN of an IAM profile that will be used for the layer's instances.
	customInstanceProfileArn?: null | string @go(CustomInstanceProfileArn,*string)

	// Custom JSON attributes to apply to the layer.
	customJson?: null | string @go(CustomJSON,*string)
	customSetupRecipes?: [...null | string] @go(CustomSetupRecipes,[]*string)
	customShutdownRecipes?: [...null | string] @go(CustomShutdownRecipes,[]*string)
	customUndeployRecipes?: [...null | string] @go(CustomUndeployRecipes,[]*string)

	// Whether to enable Elastic Load Balancing connection draining.
	drainElbOnShutdown?: null | bool @go(DrainELBOnShutdown,*bool)

	// Will create an EBS volume and connect it to the layer's instances. See EBS Volume.
	ebsVolume?: [...#EBSVolumeInitParameters] @go(EBSVolume,[]EBSVolumeInitParameters)

	// Name of an Elastic Load Balancer to attach to this layer
	elasticLoadBalancer?: null | string @go(ElasticLoadBalancer,*string)

	// Whether to install OS and package updates on each instance when it boots.
	installUpdatesOnBoot?: null | bool @go(InstallUpdatesOnBoot,*bool)

	// The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
	instanceShutdownTimeout?: null | float64 @go(InstanceShutdownTimeout,*float64)

	// Load-based auto scaling configuration. See Load Based AutoScaling
	loadBasedAutoScaling?: [...#LoadBasedAutoScalingInitParameters] @go(LoadBasedAutoScaling,[]LoadBasedAutoScalingInitParameters)

	// A human-readable name for the layer.
	name?: null | string @go(Name,*string)

	// A short, machine-readable name for the layer, which will be used to identify it in the Chef node JSON.
	shortName?: null | string @go(ShortName,*string)

	// Names of a set of system packages to install on the layer's instances.
	systemPackages?: [...null | string] @go(SystemPackages,[]*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Whether to use EBS-optimized instances.
	useEbsOptimizedInstances?: null | bool @go(UseEBSOptimizedInstances,*bool)
}

#CustomLayerObservation: {
	// The Amazon Resource Name(ARN) of the layer.
	arn?: null | string @go(Arn,*string)

	// Whether to automatically assign an elastic IP address to the layer's instances.
	autoAssignElasticIps?: null | bool @go(AutoAssignElasticIps,*bool)

	// For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
	autoAssignPublicIps?: null | bool @go(AutoAssignPublicIps,*bool)

	// Whether to enable auto-healing for the layer.
	autoHealing?: null | bool @go(AutoHealing,*bool)

	// Will create an EBS volume and connect it to the layer's instances. See Cloudwatch Configuration.
	cloudwatchConfiguration?: [...#CloudwatchConfigurationObservation] @go(CloudwatchConfiguration,[]CloudwatchConfigurationObservation)
	customConfigureRecipes?: [...null | string] @go(CustomConfigureRecipes,[]*string)
	customDeployRecipes?: [...null | string] @go(CustomDeployRecipes,[]*string)

	// The ARN of an IAM profile that will be used for the layer's instances.
	customInstanceProfileArn?: null | string @go(CustomInstanceProfileArn,*string)

	// Custom JSON attributes to apply to the layer.
	customJson?: null | string @go(CustomJSON,*string)

	// Ids for a set of security groups to apply to the layer's instances.
	customSecurityGroupIds?: [...null | string] @go(CustomSecurityGroupIds,[]*string)
	customSetupRecipes?: [...null | string] @go(CustomSetupRecipes,[]*string)
	customShutdownRecipes?: [...null | string] @go(CustomShutdownRecipes,[]*string)
	customUndeployRecipes?: [...null | string] @go(CustomUndeployRecipes,[]*string)

	// Whether to enable Elastic Load Balancing connection draining.
	drainElbOnShutdown?: null | bool @go(DrainELBOnShutdown,*bool)

	// Will create an EBS volume and connect it to the layer's instances. See EBS Volume.
	ebsVolume?: [...#EBSVolumeObservation] @go(EBSVolume,[]EBSVolumeObservation)

	// Name of an Elastic Load Balancer to attach to this layer
	elasticLoadBalancer?: null | string @go(ElasticLoadBalancer,*string)

	// The id of the layer.
	id?: null | string @go(ID,*string)

	// Whether to install OS and package updates on each instance when it boots.
	installUpdatesOnBoot?: null | bool @go(InstallUpdatesOnBoot,*bool)

	// The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
	instanceShutdownTimeout?: null | float64 @go(InstanceShutdownTimeout,*float64)

	// Load-based auto scaling configuration. See Load Based AutoScaling
	loadBasedAutoScaling?: [...#LoadBasedAutoScalingObservation] @go(LoadBasedAutoScaling,[]LoadBasedAutoScalingObservation)

	// A human-readable name for the layer.
	name?: null | string @go(Name,*string)

	// A short, machine-readable name for the layer, which will be used to identify it in the Chef node JSON.
	shortName?: null | string @go(ShortName,*string)

	// ID of the stack the layer will belong to.
	stackId?: null | string @go(StackID,*string)

	// Names of a set of system packages to install on the layer's instances.
	systemPackages?: [...null | string] @go(SystemPackages,[]*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// Whether to use EBS-optimized instances.
	useEbsOptimizedInstances?: null | bool @go(UseEBSOptimizedInstances,*bool)
}

#CustomLayerParameters: {
	// Whether to automatically assign an elastic IP address to the layer's instances.
	// +kubebuilder:validation:Optional
	autoAssignElasticIps?: null | bool @go(AutoAssignElasticIps,*bool)

	// For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
	// +kubebuilder:validation:Optional
	autoAssignPublicIps?: null | bool @go(AutoAssignPublicIps,*bool)

	// Whether to enable auto-healing for the layer.
	// +kubebuilder:validation:Optional
	autoHealing?: null | bool @go(AutoHealing,*bool)

	// Will create an EBS volume and connect it to the layer's instances. See Cloudwatch Configuration.
	// +kubebuilder:validation:Optional
	cloudwatchConfiguration?: [...#CloudwatchConfigurationParameters] @go(CloudwatchConfiguration,[]CloudwatchConfigurationParameters)

	// +kubebuilder:validation:Optional
	customConfigureRecipes?: [...null | string] @go(CustomConfigureRecipes,[]*string)

	// +kubebuilder:validation:Optional
	customDeployRecipes?: [...null | string] @go(CustomDeployRecipes,[]*string)

	// The ARN of an IAM profile that will be used for the layer's instances.
	// +kubebuilder:validation:Optional
	customInstanceProfileArn?: null | string @go(CustomInstanceProfileArn,*string)

	// Custom JSON attributes to apply to the layer.
	// +kubebuilder:validation:Optional
	customJson?: null | string @go(CustomJSON,*string)

	// References to SecurityGroup in ec2 to populate customSecurityGroupIds.
	// +kubebuilder:validation:Optional
	customSecurityGroupIdRefs?: [...v1.#Reference] @go(CustomSecurityGroupIDRefs,[]v1.Reference)

	// Selector for a list of SecurityGroup in ec2 to populate customSecurityGroupIds.
	// +kubebuilder:validation:Optional
	customSecurityGroupIdSelector?: null | v1.#Selector @go(CustomSecurityGroupIDSelector,*v1.Selector)

	// Ids for a set of security groups to apply to the layer's instances.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=CustomSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=CustomSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	customSecurityGroupIds?: [...null | string] @go(CustomSecurityGroupIds,[]*string)

	// +kubebuilder:validation:Optional
	customSetupRecipes?: [...null | string] @go(CustomSetupRecipes,[]*string)

	// +kubebuilder:validation:Optional
	customShutdownRecipes?: [...null | string] @go(CustomShutdownRecipes,[]*string)

	// +kubebuilder:validation:Optional
	customUndeployRecipes?: [...null | string] @go(CustomUndeployRecipes,[]*string)

	// Whether to enable Elastic Load Balancing connection draining.
	// +kubebuilder:validation:Optional
	drainElbOnShutdown?: null | bool @go(DrainELBOnShutdown,*bool)

	// Will create an EBS volume and connect it to the layer's instances. See EBS Volume.
	// +kubebuilder:validation:Optional
	ebsVolume?: [...#EBSVolumeParameters] @go(EBSVolume,[]EBSVolumeParameters)

	// Name of an Elastic Load Balancer to attach to this layer
	// +kubebuilder:validation:Optional
	elasticLoadBalancer?: null | string @go(ElasticLoadBalancer,*string)

	// Whether to install OS and package updates on each instance when it boots.
	// +kubebuilder:validation:Optional
	installUpdatesOnBoot?: null | bool @go(InstallUpdatesOnBoot,*bool)

	// The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
	// +kubebuilder:validation:Optional
	instanceShutdownTimeout?: null | float64 @go(InstanceShutdownTimeout,*float64)

	// Load-based auto scaling configuration. See Load Based AutoScaling
	// +kubebuilder:validation:Optional
	loadBasedAutoScaling?: [...#LoadBasedAutoScalingParameters] @go(LoadBasedAutoScaling,[]LoadBasedAutoScalingParameters)

	// A human-readable name for the layer.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A short, machine-readable name for the layer, which will be used to identify it in the Chef node JSON.
	// +kubebuilder:validation:Optional
	shortName?: null | string @go(ShortName,*string)

	// ID of the stack the layer will belong to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/opsworks/v1beta1.Stack
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	stackId?: null | string @go(StackID,*string)

	// Reference to a Stack in opsworks to populate stackId.
	// +kubebuilder:validation:Optional
	stackIdRef?: null | v1.#Reference @go(StackIDRef,*v1.Reference)

	// Selector for a Stack in opsworks to populate stackId.
	// +kubebuilder:validation:Optional
	stackIdSelector?: null | v1.#Selector @go(StackIDSelector,*v1.Selector)

	// Names of a set of system packages to install on the layer's instances.
	// +kubebuilder:validation:Optional
	systemPackages?: [...null | string] @go(SystemPackages,[]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Whether to use EBS-optimized instances.
	// +kubebuilder:validation:Optional
	useEbsOptimizedInstances?: null | bool @go(UseEBSOptimizedInstances,*bool)
}

#DownscalingInitParameters: {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
	alarms?: [...null | string] @go(Alarms,[]*string)

	// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
	cpuThreshold?: null | float64 @go(CPUThreshold,*float64)

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
	ignoreMetricsTime?: null | float64 @go(IgnoreMetricsTime,*float64)

	// The number of instances to add or remove when the load exceeds a threshold.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The load threshold. A value of -1 disables the threshold.
	loadThreshold?: null | float64 @go(LoadThreshold,*float64)

	// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
	memoryThreshold?: null | float64 @go(MemoryThreshold,*float64)

	// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
	thresholdsWaitTime?: null | float64 @go(ThresholdsWaitTime,*float64)
}

#DownscalingObservation: {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
	alarms?: [...null | string] @go(Alarms,[]*string)

	// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
	cpuThreshold?: null | float64 @go(CPUThreshold,*float64)

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
	ignoreMetricsTime?: null | float64 @go(IgnoreMetricsTime,*float64)

	// The number of instances to add or remove when the load exceeds a threshold.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The load threshold. A value of -1 disables the threshold.
	loadThreshold?: null | float64 @go(LoadThreshold,*float64)

	// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
	memoryThreshold?: null | float64 @go(MemoryThreshold,*float64)

	// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
	thresholdsWaitTime?: null | float64 @go(ThresholdsWaitTime,*float64)
}

#DownscalingParameters: {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
	// +kubebuilder:validation:Optional
	alarms?: [...null | string] @go(Alarms,[]*string)

	// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
	// +kubebuilder:validation:Optional
	cpuThreshold?: null | float64 @go(CPUThreshold,*float64)

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
	// +kubebuilder:validation:Optional
	ignoreMetricsTime?: null | float64 @go(IgnoreMetricsTime,*float64)

	// The number of instances to add or remove when the load exceeds a threshold.
	// +kubebuilder:validation:Optional
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The load threshold. A value of -1 disables the threshold.
	// +kubebuilder:validation:Optional
	loadThreshold?: null | float64 @go(LoadThreshold,*float64)

	// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
	// +kubebuilder:validation:Optional
	memoryThreshold?: null | float64 @go(MemoryThreshold,*float64)

	// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
	// +kubebuilder:validation:Optional
	thresholdsWaitTime?: null | float64 @go(ThresholdsWaitTime,*float64)
}

#EBSVolumeInitParameters: {
	// Encrypt the volume.
	encrypted?: null | bool @go(Encrypted,*bool)

	// For PIOPS volumes, the IOPS per disk.
	iops?: null | float64 @go(Iops,*float64)

	// The path to mount the EBS volume on the layer's instances.
	mountPoint?: null | string @go(MountPoint,*string)

	// The number of disks to use for the EBS volume.
	numberOfDisks?: null | float64 @go(NumberOfDisks,*float64)

	// The RAID level to use for the volume.
	raidLevel?: null | string @go(RaidLevel,*string)

	// The size of the volume in gigabytes.
	size?: null | float64 @go(Size,*float64)

	// The type of volume to create. This may be standard (the default), io1 or gp2.
	type?: null | string @go(Type,*string)
}

#EBSVolumeObservation: {
	// Encrypt the volume.
	encrypted?: null | bool @go(Encrypted,*bool)

	// For PIOPS volumes, the IOPS per disk.
	iops?: null | float64 @go(Iops,*float64)

	// The path to mount the EBS volume on the layer's instances.
	mountPoint?: null | string @go(MountPoint,*string)

	// The number of disks to use for the EBS volume.
	numberOfDisks?: null | float64 @go(NumberOfDisks,*float64)

	// The RAID level to use for the volume.
	raidLevel?: null | string @go(RaidLevel,*string)

	// The size of the volume in gigabytes.
	size?: null | float64 @go(Size,*float64)

	// The type of volume to create. This may be standard (the default), io1 or gp2.
	type?: null | string @go(Type,*string)
}

#EBSVolumeParameters: {
	// Encrypt the volume.
	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// For PIOPS volumes, the IOPS per disk.
	// +kubebuilder:validation:Optional
	iops?: null | float64 @go(Iops,*float64)

	// The path to mount the EBS volume on the layer's instances.
	// +kubebuilder:validation:Optional
	mountPoint?: null | string @go(MountPoint,*string)

	// The number of disks to use for the EBS volume.
	// +kubebuilder:validation:Optional
	numberOfDisks?: null | float64 @go(NumberOfDisks,*float64)

	// The RAID level to use for the volume.
	// +kubebuilder:validation:Optional
	raidLevel?: null | string @go(RaidLevel,*string)

	// The size of the volume in gigabytes.
	// +kubebuilder:validation:Optional
	size?: null | float64 @go(Size,*float64)

	// The type of volume to create. This may be standard (the default), io1 or gp2.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#LoadBasedAutoScalingInitParameters: {
	// The downscaling settings, as defined below, used for load-based autoscaling
	downscaling?: [...#DownscalingInitParameters] @go(Downscaling,[]DownscalingInitParameters)

	// Whether load-based auto scaling is enabled for the layer.
	enable?: null | bool @go(Enable,*bool)

	// The upscaling settings, as defined below, used for load-based autoscaling
	upscaling?: [...#UpscalingInitParameters] @go(Upscaling,[]UpscalingInitParameters)
}

#LoadBasedAutoScalingObservation: {
	// The downscaling settings, as defined below, used for load-based autoscaling
	downscaling?: [...#DownscalingObservation] @go(Downscaling,[]DownscalingObservation)

	// Whether load-based auto scaling is enabled for the layer.
	enable?: null | bool @go(Enable,*bool)

	// The upscaling settings, as defined below, used for load-based autoscaling
	upscaling?: [...#UpscalingObservation] @go(Upscaling,[]UpscalingObservation)
}

#LoadBasedAutoScalingParameters: {
	// The downscaling settings, as defined below, used for load-based autoscaling
	// +kubebuilder:validation:Optional
	downscaling?: [...#DownscalingParameters] @go(Downscaling,[]DownscalingParameters)

	// Whether load-based auto scaling is enabled for the layer.
	// +kubebuilder:validation:Optional
	enable?: null | bool @go(Enable,*bool)

	// The upscaling settings, as defined below, used for load-based autoscaling
	// +kubebuilder:validation:Optional
	upscaling?: [...#UpscalingParameters] @go(Upscaling,[]UpscalingParameters)
}

#LogStreamsInitParameters: {
	// Specifies the max number of log events in a batch, up to 10000. The default value is 1000.
	batchCount?: null | float64 @go(BatchCount,*float64)

	// Specifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes.
	batchSize?: null | float64 @go(BatchSize,*float64)

	// Specifies the time duration for the batching of log events. The minimum value is 5000 and default value is 5000.
	bufferDuration?: null | float64 @go(BufferDuration,*float64)

	// Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
	datetimeFormat?: null | string @go(DatetimeFormat,*string)

	// Specifies the encoding of the log file so that the file can be read correctly. The default is utf_8.
	encoding?: null | string @go(Encoding,*string)

	// Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
	file?: null | string @go(File,*string)

	// Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as 1, 2-5. The default value is 1.
	fileFingerprintLines?: null | string @go(FileFingerprintLines,*string)

	// Specifies where to start to read data (start_of_file or end_of_file). The default is start_of_file.
	initialPosition?: null | string @go(InitialPosition,*string)

	// Specifies the destination log group. A log group is created automatically if it doesn't already exist.
	logGroupName?: null | string @go(LogGroupName,*string)

	// Specifies the pattern for identifying the start of a log message.
	multilineStartPattern?: null | string @go(MultilineStartPattern,*string)

	// Specifies the time zone of log event time stamps.
	timeZone?: null | string @go(TimeZone,*string)
}

#LogStreamsObservation: {
	// Specifies the max number of log events in a batch, up to 10000. The default value is 1000.
	batchCount?: null | float64 @go(BatchCount,*float64)

	// Specifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes.
	batchSize?: null | float64 @go(BatchSize,*float64)

	// Specifies the time duration for the batching of log events. The minimum value is 5000 and default value is 5000.
	bufferDuration?: null | float64 @go(BufferDuration,*float64)

	// Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
	datetimeFormat?: null | string @go(DatetimeFormat,*string)

	// Specifies the encoding of the log file so that the file can be read correctly. The default is utf_8.
	encoding?: null | string @go(Encoding,*string)

	// Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
	file?: null | string @go(File,*string)

	// Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as 1, 2-5. The default value is 1.
	fileFingerprintLines?: null | string @go(FileFingerprintLines,*string)

	// Specifies where to start to read data (start_of_file or end_of_file). The default is start_of_file.
	initialPosition?: null | string @go(InitialPosition,*string)

	// Specifies the destination log group. A log group is created automatically if it doesn't already exist.
	logGroupName?: null | string @go(LogGroupName,*string)

	// Specifies the pattern for identifying the start of a log message.
	multilineStartPattern?: null | string @go(MultilineStartPattern,*string)

	// Specifies the time zone of log event time stamps.
	timeZone?: null | string @go(TimeZone,*string)
}

#LogStreamsParameters: {
	// Specifies the max number of log events in a batch, up to 10000. The default value is 1000.
	// +kubebuilder:validation:Optional
	batchCount?: null | float64 @go(BatchCount,*float64)

	// Specifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes.
	// +kubebuilder:validation:Optional
	batchSize?: null | float64 @go(BatchSize,*float64)

	// Specifies the time duration for the batching of log events. The minimum value is 5000 and default value is 5000.
	// +kubebuilder:validation:Optional
	bufferDuration?: null | float64 @go(BufferDuration,*float64)

	// Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
	// +kubebuilder:validation:Optional
	datetimeFormat?: null | string @go(DatetimeFormat,*string)

	// Specifies the encoding of the log file so that the file can be read correctly. The default is utf_8.
	// +kubebuilder:validation:Optional
	encoding?: null | string @go(Encoding,*string)

	// Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
	// +kubebuilder:validation:Optional
	file?: null | string @go(File,*string)

	// Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as 1, 2-5. The default value is 1.
	// +kubebuilder:validation:Optional
	fileFingerprintLines?: null | string @go(FileFingerprintLines,*string)

	// Specifies where to start to read data (start_of_file or end_of_file). The default is start_of_file.
	// +kubebuilder:validation:Optional
	initialPosition?: null | string @go(InitialPosition,*string)

	// Specifies the destination log group. A log group is created automatically if it doesn't already exist.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// Specifies the pattern for identifying the start of a log message.
	// +kubebuilder:validation:Optional
	multilineStartPattern?: null | string @go(MultilineStartPattern,*string)

	// Specifies the time zone of log event time stamps.
	// +kubebuilder:validation:Optional
	timeZone?: null | string @go(TimeZone,*string)
}

#UpscalingInitParameters: {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
	alarms?: [...null | string] @go(Alarms,[]*string)

	// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
	cpuThreshold?: null | float64 @go(CPUThreshold,*float64)

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
	ignoreMetricsTime?: null | float64 @go(IgnoreMetricsTime,*float64)

	// The number of instances to add or remove when the load exceeds a threshold.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The load threshold. A value of -1 disables the threshold.
	loadThreshold?: null | float64 @go(LoadThreshold,*float64)

	// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
	memoryThreshold?: null | float64 @go(MemoryThreshold,*float64)

	// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
	thresholdsWaitTime?: null | float64 @go(ThresholdsWaitTime,*float64)
}

#UpscalingObservation: {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
	alarms?: [...null | string] @go(Alarms,[]*string)

	// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
	cpuThreshold?: null | float64 @go(CPUThreshold,*float64)

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
	ignoreMetricsTime?: null | float64 @go(IgnoreMetricsTime,*float64)

	// The number of instances to add or remove when the load exceeds a threshold.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The load threshold. A value of -1 disables the threshold.
	loadThreshold?: null | float64 @go(LoadThreshold,*float64)

	// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
	memoryThreshold?: null | float64 @go(MemoryThreshold,*float64)

	// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
	thresholdsWaitTime?: null | float64 @go(ThresholdsWaitTime,*float64)
}

#UpscalingParameters: {
	// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
	// +kubebuilder:validation:Optional
	alarms?: [...null | string] @go(Alarms,[]*string)

	// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
	// +kubebuilder:validation:Optional
	cpuThreshold?: null | float64 @go(CPUThreshold,*float64)

	// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
	// +kubebuilder:validation:Optional
	ignoreMetricsTime?: null | float64 @go(IgnoreMetricsTime,*float64)

	// The number of instances to add or remove when the load exceeds a threshold.
	// +kubebuilder:validation:Optional
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The load threshold. A value of -1 disables the threshold.
	// +kubebuilder:validation:Optional
	loadThreshold?: null | float64 @go(LoadThreshold,*float64)

	// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
	// +kubebuilder:validation:Optional
	memoryThreshold?: null | float64 @go(MemoryThreshold,*float64)

	// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
	// +kubebuilder:validation:Optional
	thresholdsWaitTime?: null | float64 @go(ThresholdsWaitTime,*float64)
}

// CustomLayerSpec defines the desired state of CustomLayer
#CustomLayerSpec: {
	v1.#ResourceSpec
	forProvider: #CustomLayerParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #CustomLayerInitParameters @go(InitProvider)
}

// CustomLayerStatus defines the observed state of CustomLayer.
#CustomLayerStatus: {
	v1.#ResourceStatus
	atProvider?: #CustomLayerObservation @go(AtProvider)
}

// CustomLayer is the Schema for the CustomLayers API. Provides an OpsWorks custom layer resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CustomLayer: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.shortName) || (has(self.initProvider) && has(self.initProvider.shortName))",message="spec.forProvider.shortName is a required parameter"
	spec:    #CustomLayerSpec   @go(Spec)
	status?: #CustomLayerStatus @go(Status)
}

// CustomLayerList contains a list of CustomLayers
#CustomLayerList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#CustomLayer] @go(Items,[]CustomLayer)
}
