// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3control/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#MultiRegionAccessPointPolicyDetailsInitParameters: {
	// The name of the Multi-Region Access Point.
	name?: null | string @go(Name,*string)

	// A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on Multi-Region Access Point Permissions.
	policy?: null | string @go(Policy,*string)
}

#MultiRegionAccessPointPolicyDetailsObservation: {
	// The name of the Multi-Region Access Point.
	name?: null | string @go(Name,*string)

	// A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on Multi-Region Access Point Permissions.
	policy?: null | string @go(Policy,*string)
}

#MultiRegionAccessPointPolicyDetailsParameters: {
	// The name of the Multi-Region Access Point.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on Multi-Region Access Point Permissions.
	// +kubebuilder:validation:Optional
	policy?: null | string @go(Policy,*string)
}

#MultiRegionAccessPointPolicyInitParameters: {
	// The AWS account ID for the owner of the Multi-Region Access Point.
	accountId?: null | string @go(AccountID,*string)

	// A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
	details?: [...#MultiRegionAccessPointPolicyDetailsInitParameters] @go(Details,[]MultiRegionAccessPointPolicyDetailsInitParameters)
}

#MultiRegionAccessPointPolicyObservation: {
	// The AWS account ID for the owner of the Multi-Region Access Point.
	accountId?: null | string @go(AccountID,*string)

	// A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
	details?: [...#MultiRegionAccessPointPolicyDetailsObservation] @go(Details,[]MultiRegionAccessPointPolicyDetailsObservation)

	// The last established policy for the Multi-Region Access Point.
	established?: null | string @go(Established,*string)

	// The AWS account ID and access point name separated by a colon (:).
	id?: null | string @go(ID,*string)

	// The proposed policy for the Multi-Region Access Point.
	proposed?: null | string @go(Proposed,*string)
}

#MultiRegionAccessPointPolicyParameters: {
	// The AWS account ID for the owner of the Multi-Region Access Point.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
	// +kubebuilder:validation:Optional
	details?: [...#MultiRegionAccessPointPolicyDetailsParameters] @go(Details,[]MultiRegionAccessPointPolicyDetailsParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// MultiRegionAccessPointPolicySpec defines the desired state of MultiRegionAccessPointPolicy
#MultiRegionAccessPointPolicySpec: {
	v1.#ResourceSpec
	forProvider: #MultiRegionAccessPointPolicyParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MultiRegionAccessPointPolicyInitParameters @go(InitProvider)
}

// MultiRegionAccessPointPolicyStatus defines the observed state of MultiRegionAccessPointPolicy.
#MultiRegionAccessPointPolicyStatus: {
	v1.#ResourceStatus
	atProvider?: #MultiRegionAccessPointPolicyObservation @go(AtProvider)
}

// MultiRegionAccessPointPolicy is the Schema for the MultiRegionAccessPointPolicys API. Provides a resource to manage an S3 Multi-Region Access Point access control policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#MultiRegionAccessPointPolicy: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.details) || (has(self.initProvider) && has(self.initProvider.details))",message="spec.forProvider.details is a required parameter"
	spec:    #MultiRegionAccessPointPolicySpec   @go(Spec)
	status?: #MultiRegionAccessPointPolicyStatus @go(Status)
}

// MultiRegionAccessPointPolicyList contains a list of MultiRegionAccessPointPolicys
#MultiRegionAccessPointPolicyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#MultiRegionAccessPointPolicy] @go(Items,[]MultiRegionAccessPointPolicy)
}
