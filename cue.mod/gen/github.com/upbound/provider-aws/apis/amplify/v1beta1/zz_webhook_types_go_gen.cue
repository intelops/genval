// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/amplify/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#WebhookInitParameters: {
	// Description for a webhook.
	description?: null | string @go(Description,*string)
}

#WebhookObservation: {
	// Unique ID for an Amplify app.
	appId?: null | string @go(AppID,*string)

	// ARN for the webhook.
	arn?: null | string @go(Arn,*string)

	// Name for a branch that is part of the Amplify app.
	branchName?: null | string @go(BranchName,*string)

	// Description for a webhook.
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)

	// URL of the webhook.
	url?: null | string @go(URL,*string)
}

#WebhookParameters: {
	// Unique ID for an Amplify app.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/amplify/v1beta1.App
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	appId?: null | string @go(AppID,*string)

	// Reference to a App in amplify to populate appId.
	// +kubebuilder:validation:Optional
	appIdRef?: null | v1.#Reference @go(AppIDRef,*v1.Reference)

	// Selector for a App in amplify to populate appId.
	// +kubebuilder:validation:Optional
	appIdSelector?: null | v1.#Selector @go(AppIDSelector,*v1.Selector)

	// Name for a branch that is part of the Amplify app.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/amplify/v1beta1.Branch
	// +kubebuilder:validation:Optional
	branchName?: null | string @go(BranchName,*string)

	// Reference to a Branch in amplify to populate branchName.
	// +kubebuilder:validation:Optional
	branchNameRef?: null | v1.#Reference @go(BranchNameRef,*v1.Reference)

	// Selector for a Branch in amplify to populate branchName.
	// +kubebuilder:validation:Optional
	branchNameSelector?: null | v1.#Selector @go(BranchNameSelector,*v1.Selector)

	// Description for a webhook.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// WebhookSpec defines the desired state of Webhook
#WebhookSpec: {
	v1.#ResourceSpec
	forProvider: #WebhookParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #WebhookInitParameters @go(InitProvider)
}

// WebhookStatus defines the observed state of Webhook.
#WebhookStatus: {
	v1.#ResourceStatus
	atProvider?: #WebhookObservation @go(AtProvider)
}

// Webhook is the Schema for the Webhooks API. Provides an Amplify Webhook resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Webhook: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #WebhookSpec       @go(Spec)
	status?:   #WebhookStatus     @go(Status)
}

// WebhookList contains a list of Webhooks
#WebhookList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Webhook] @go(Items,[]Webhook)
}
