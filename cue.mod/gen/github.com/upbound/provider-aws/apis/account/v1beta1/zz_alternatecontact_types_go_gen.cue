// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/account/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AlternateContactInitParameters: {
	// ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	accountId?: null | string @go(AccountID,*string)

	// An email address for the alternate contact.
	emailAddress?: null | string @go(EmailAddress,*string)

	// Name of the alternate contact.
	name?: null | string @go(Name,*string)

	// Phone number for the alternate contact.
	phoneNumber?: null | string @go(PhoneNumber,*string)

	// Title for the alternate contact.
	title?: null | string @go(Title,*string)
}

#AlternateContactObservation: {
	// ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	accountId?: null | string @go(AccountID,*string)

	// Type of the alternate contact. Allowed values are: BILLING, OPERATIONS, SECURITY.
	alternateContactType?: null | string @go(AlternateContactType,*string)

	// An email address for the alternate contact.
	emailAddress?: null | string @go(EmailAddress,*string)
	id?:           null | string @go(ID,*string)

	// Name of the alternate contact.
	name?: null | string @go(Name,*string)

	// Phone number for the alternate contact.
	phoneNumber?: null | string @go(PhoneNumber,*string)

	// Title for the alternate contact.
	title?: null | string @go(Title,*string)
}

#AlternateContactParameters: {
	// ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// Type of the alternate contact. Allowed values are: BILLING, OPERATIONS, SECURITY.
	// +kubebuilder:validation:Required
	alternateContactType?: null | string @go(AlternateContactType,*string)

	// An email address for the alternate contact.
	// +kubebuilder:validation:Optional
	emailAddress?: null | string @go(EmailAddress,*string)

	// Name of the alternate contact.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Phone number for the alternate contact.
	// +kubebuilder:validation:Optional
	phoneNumber?: null | string @go(PhoneNumber,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Title for the alternate contact.
	// +kubebuilder:validation:Optional
	title?: null | string @go(Title,*string)
}

// AlternateContactSpec defines the desired state of AlternateContact
#AlternateContactSpec: {
	v1.#ResourceSpec
	forProvider: #AlternateContactParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AlternateContactInitParameters @go(InitProvider)
}

// AlternateContactStatus defines the observed state of AlternateContact.
#AlternateContactStatus: {
	v1.#ResourceStatus
	atProvider?: #AlternateContactObservation @go(AtProvider)
}

// AlternateContact is the Schema for the AlternateContacts API. Manages the specified alternate contact attached to an AWS Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AlternateContact: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.emailAddress) || (has(self.initProvider) && has(self.initProvider.emailAddress))",message="spec.forProvider.emailAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.phoneNumber) || (has(self.initProvider) && has(self.initProvider.phoneNumber))",message="spec.forProvider.phoneNumber is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || (has(self.initProvider) && has(self.initProvider.title))",message="spec.forProvider.title is a required parameter"
	spec:    #AlternateContactSpec   @go(Spec)
	status?: #AlternateContactStatus @go(Status)
}

// AlternateContactList contains a list of AlternateContacts
#AlternateContactList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#AlternateContact] @go(Items,[]AlternateContact)
}
