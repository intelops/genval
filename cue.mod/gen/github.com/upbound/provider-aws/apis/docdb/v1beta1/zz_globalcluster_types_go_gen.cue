// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/docdb/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#GlobalClusterInitParameters: {
	// Name for an automatically created database on cluster creation.
	databaseName?: null | string @go(DatabaseName,*string)

	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// Name of the database engine to be used for this DB cluster. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.
	engine?: null | string @go(Engine,*string)

	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	engineVersion?: null | string @go(EngineVersion,*string)

	// The global cluster identifier.
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted.
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)
}

#GlobalClusterMembersInitParameters: {
}

#GlobalClusterMembersObservation: {
	// Amazon Resource Name (ARN) of member DB Cluster.
	dbClusterArn?: null | string @go(DBClusterArn,*string)

	// Whether the member is the primary DB Cluster.
	isWriter?: null | bool @go(IsWriter,*bool)
}

#GlobalClusterMembersParameters: {
}

#GlobalClusterObservation: {
	// Global Cluster Amazon Resource Name (ARN)
	arn?: null | string @go(Arn,*string)

	// Name for an automatically created database on cluster creation.
	databaseName?: null | string @go(DatabaseName,*string)

	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// Name of the database engine to be used for this DB cluster. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.
	engine?: null | string @go(Engine,*string)

	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	engineVersion?: null | string @go(EngineVersion,*string)

	// The global cluster identifier.
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// Set of objects containing Global Cluster members.
	globalClusterMembers?: [...#GlobalClusterMembersObservation] @go(GlobalClusterMembers,[]GlobalClusterMembersObservation)

	// AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
	globalClusterResourceId?: null | string @go(GlobalClusterResourceID,*string)

	// DocumentDB Global Cluster ID.
	id?: null | string @go(ID,*string)

	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation.
	sourceDbClusterIdentifier?: null | string @go(SourceDBClusterIdentifier,*string)
	status?:                    null | string @go(Status,*string)

	// Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted.
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)
}

#GlobalClusterParameters: {
	// Name for an automatically created database on cluster creation.
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
	// +kubebuilder:validation:Optional
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// Name of the database engine to be used for this DB cluster. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.
	// +kubebuilder:validation:Optional
	engine?: null | string @go(Engine,*string)

	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	// +kubebuilder:validation:Optional
	engineVersion?: null | string @go(EngineVersion,*string)

	// The global cluster identifier.
	// +kubebuilder:validation:Optional
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/docdb/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	sourceDbClusterIdentifier?: null | string @go(SourceDBClusterIdentifier,*string)

	// Reference to a Cluster in docdb to populate sourceDbClusterIdentifier.
	// +kubebuilder:validation:Optional
	sourceDbClusterIdentifierRef?: null | v1.#Reference @go(SourceDBClusterIdentifierRef,*v1.Reference)

	// Selector for a Cluster in docdb to populate sourceDbClusterIdentifier.
	// +kubebuilder:validation:Optional
	sourceDbClusterIdentifierSelector?: null | v1.#Selector @go(SourceDBClusterIdentifierSelector,*v1.Selector)

	// Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted.
	// +kubebuilder:validation:Optional
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)
}

// GlobalClusterSpec defines the desired state of GlobalCluster
#GlobalClusterSpec: {
	v1.#ResourceSpec
	forProvider: #GlobalClusterParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #GlobalClusterInitParameters @go(InitProvider)
}

// GlobalClusterStatus defines the observed state of GlobalCluster.
#GlobalClusterStatus: {
	v1.#ResourceStatus
	atProvider?: #GlobalClusterObservation @go(AtProvider)
}

// GlobalCluster is the Schema for the GlobalClusters API. Manages a DocumentDB Global Cluster
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GlobalCluster: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.globalClusterIdentifier) || (has(self.initProvider) && has(self.initProvider.globalClusterIdentifier))",message="spec.forProvider.globalClusterIdentifier is a required parameter"
	spec:    #GlobalClusterSpec   @go(Spec)
	status?: #GlobalClusterStatus @go(Status)
}

// GlobalClusterList contains a list of GlobalClusters
#GlobalClusterList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#GlobalCluster] @go(Items,[]GlobalCluster)
}
