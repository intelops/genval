// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudtrail/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AdvancedEventSelectorInitParameters: {
	// Specifies the selector statements in an advanced event selector. Fields documented below.
	fieldSelector?: [...#FieldSelectorInitParameters] @go(FieldSelector,[]FieldSelectorInitParameters)

	// Name of the trail.
	name?: null | string @go(Name,*string)
}

#AdvancedEventSelectorObservation: {
	// Specifies the selector statements in an advanced event selector. Fields documented below.
	fieldSelector?: [...#FieldSelectorObservation] @go(FieldSelector,[]FieldSelectorObservation)

	// Name of the trail.
	name?: null | string @go(Name,*string)
}

#AdvancedEventSelectorParameters: {
	// Specifies the selector statements in an advanced event selector. Fields documented below.
	// +kubebuilder:validation:Optional
	fieldSelector: [...#FieldSelectorParameters] @go(FieldSelector,[]FieldSelectorParameters)

	// Name of the trail.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#DataResourceInitParameters: {
	// Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".
	type?: null | string @go(Type,*string)

	// List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.
	values?: [...null | string] @go(Values,[]*string)
}

#DataResourceObservation: {
	// Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".
	type?: null | string @go(Type,*string)

	// List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.
	values?: [...null | string] @go(Values,[]*string)
}

#DataResourceParameters: {
	// Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#EventSelectorInitParameters: {
	// Configuration block for data events. See details below.
	dataResource?: [...#DataResourceInitParameters] @go(DataResource,[]DataResourceInitParameters)

	// A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.
	excludeManagementEventSources?: [...null | string] @go(ExcludeManagementEventSources,[]*string)

	// Whether to include management events for your trail. Defaults to true.
	includeManagementEvents?: null | bool @go(IncludeManagementEvents,*bool)

	// Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.
	readWriteType?: null | string @go(ReadWriteType,*string)
}

#EventSelectorObservation: {
	// Configuration block for data events. See details below.
	dataResource?: [...#DataResourceObservation] @go(DataResource,[]DataResourceObservation)

	// A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.
	excludeManagementEventSources?: [...null | string] @go(ExcludeManagementEventSources,[]*string)

	// Whether to include management events for your trail. Defaults to true.
	includeManagementEvents?: null | bool @go(IncludeManagementEvents,*bool)

	// Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.
	readWriteType?: null | string @go(ReadWriteType,*string)
}

#EventSelectorParameters: {
	// Configuration block for data events. See details below.
	// +kubebuilder:validation:Optional
	dataResource?: [...#DataResourceParameters] @go(DataResource,[]DataResourceParameters)

	// A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.
	// +kubebuilder:validation:Optional
	excludeManagementEventSources?: [...null | string] @go(ExcludeManagementEventSources,[]*string)

	// Whether to include management events for your trail. Defaults to true.
	// +kubebuilder:validation:Optional
	includeManagementEvents?: null | bool @go(IncludeManagementEvents,*bool)

	// Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.
	// +kubebuilder:validation:Optional
	readWriteType?: null | string @go(ReadWriteType,*string)
}

#FieldSelectorInitParameters: {
	// A list of values that includes events that match the last few characters of the event record field specified as the value of field.
	endsWith?: [...null | string] @go(EndsWith,[]*string)

	// A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
	equals?: [...null | string] @go(Equals,[]*string)

	// Field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.
	field?: null | string @go(Field,*string)

	// A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
	notEndsWith?: [...null | string] @go(NotEndsWith,[]*string)

	// A list of values that excludes events that match the exact value of the event record field specified as the value of field.
	notEquals?: [...null | string] @go(NotEquals,[]*string)

	// A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
	notStartsWith?: [...null | string] @go(NotStartsWith,[]*string)

	// A list of values that includes events that match the first few characters of the event record field specified as the value of field.
	startsWith?: [...null | string] @go(StartsWith,[]*string)
}

#FieldSelectorObservation: {
	// A list of values that includes events that match the last few characters of the event record field specified as the value of field.
	endsWith?: [...null | string] @go(EndsWith,[]*string)

	// A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
	equals?: [...null | string] @go(Equals,[]*string)

	// Field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.
	field?: null | string @go(Field,*string)

	// A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
	notEndsWith?: [...null | string] @go(NotEndsWith,[]*string)

	// A list of values that excludes events that match the exact value of the event record field specified as the value of field.
	notEquals?: [...null | string] @go(NotEquals,[]*string)

	// A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
	notStartsWith?: [...null | string] @go(NotStartsWith,[]*string)

	// A list of values that includes events that match the first few characters of the event record field specified as the value of field.
	startsWith?: [...null | string] @go(StartsWith,[]*string)
}

#FieldSelectorParameters: {
	// A list of values that includes events that match the last few characters of the event record field specified as the value of field.
	// +kubebuilder:validation:Optional
	endsWith?: [...null | string] @go(EndsWith,[]*string)

	// A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
	// +kubebuilder:validation:Optional
	equals?: [...null | string] @go(Equals,[]*string)

	// Field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.
	// +kubebuilder:validation:Optional
	field?: null | string @go(Field,*string)

	// A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
	// +kubebuilder:validation:Optional
	notEndsWith?: [...null | string] @go(NotEndsWith,[]*string)

	// A list of values that excludes events that match the exact value of the event record field specified as the value of field.
	// +kubebuilder:validation:Optional
	notEquals?: [...null | string] @go(NotEquals,[]*string)

	// A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
	// +kubebuilder:validation:Optional
	notStartsWith?: [...null | string] @go(NotStartsWith,[]*string)

	// A list of values that includes events that match the first few characters of the event record field specified as the value of field.
	// +kubebuilder:validation:Optional
	startsWith?: [...null | string] @go(StartsWith,[]*string)
}

#InsightSelectorInitParameters: {
	// Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.
	insightType?: null | string @go(InsightType,*string)
}

#InsightSelectorObservation: {
	// Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.
	insightType?: null | string @go(InsightType,*string)
}

#InsightSelectorParameters: {
	// Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.
	// +kubebuilder:validation:Optional
	insightType?: null | string @go(InsightType,*string)
}

#TrailInitParameters: {
	// Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.
	advancedEventSelector?: [...#AdvancedEventSelectorInitParameters] @go(AdvancedEventSelector,[]AdvancedEventSelectorInitParameters)

	// Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.
	cloudWatchLogsGroupArn?: null | string @go(CloudWatchLogsGroupArn,*string)

	// Whether log file integrity validation is enabled. Defaults to false.
	enableLogFileValidation?: null | bool @go(EnableLogFileValidation,*bool)

	// Enables logging for the trail. Defaults to true. Setting this to false will pause logging.
	enableLogging?: null | bool @go(EnableLogging,*bool)

	// Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.
	eventSelector?: [...#EventSelectorInitParameters] @go(EventSelector,[]EventSelectorInitParameters)

	// Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.
	includeGlobalServiceEvents?: null | bool @go(IncludeGlobalServiceEvents,*bool)

	// Configuration block for identifying unusual operational activity. See details below.
	insightSelector?: [...#InsightSelectorInitParameters] @go(InsightSelector,[]InsightSelectorInitParameters)

	// Whether the trail is created in the current region or in all regions. Defaults to false.
	isMultiRegionTrail?: null | bool @go(IsMultiRegionTrail,*bool)

	// Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.
	isOrganizationTrail?: null | bool @go(IsOrganizationTrail,*bool)

	// S3 key prefix that follows the name of the bucket you have designated for log file delivery.
	s3KeyPrefix?: null | string @go(S3KeyPrefix,*string)

	// Name of the Amazon SNS topic defined for notification of log file delivery.
	snsTopicName?: null | string @go(SnsTopicName,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#TrailObservation: {
	// Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.
	advancedEventSelector?: [...#AdvancedEventSelectorObservation] @go(AdvancedEventSelector,[]AdvancedEventSelectorObservation)

	// ARN of the trail.
	arn?: null | string @go(Arn,*string)

	// Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.
	cloudWatchLogsGroupArn?: null | string @go(CloudWatchLogsGroupArn,*string)

	// Role for the CloudWatch Logs endpoint to assume to write to a user’s log group.
	cloudWatchLogsRoleArn?: null | string @go(CloudWatchLogsRoleArn,*string)

	// Whether log file integrity validation is enabled. Defaults to false.
	enableLogFileValidation?: null | bool @go(EnableLogFileValidation,*bool)

	// Enables logging for the trail. Defaults to true. Setting this to false will pause logging.
	enableLogging?: null | bool @go(EnableLogging,*bool)

	// Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.
	eventSelector?: [...#EventSelectorObservation] @go(EventSelector,[]EventSelectorObservation)

	// Region in which the trail was created.
	homeRegion?: null | string @go(HomeRegion,*string)

	// Name of the trail.
	id?: null | string @go(ID,*string)

	// Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.
	includeGlobalServiceEvents?: null | bool @go(IncludeGlobalServiceEvents,*bool)

	// Configuration block for identifying unusual operational activity. See details below.
	insightSelector?: [...#InsightSelectorObservation] @go(InsightSelector,[]InsightSelectorObservation)

	// Whether the trail is created in the current region or in all regions. Defaults to false.
	isMultiRegionTrail?: null | bool @go(IsMultiRegionTrail,*bool)

	// Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.
	isOrganizationTrail?: null | bool @go(IsOrganizationTrail,*bool)

	// KMS key ARN to use to encrypt the logs delivered by CloudTrail.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Name of the S3 bucket designated for publishing log files.
	s3BucketName?: null | string @go(S3BucketName,*string)

	// S3 key prefix that follows the name of the bucket you have designated for log file delivery.
	s3KeyPrefix?: null | string @go(S3KeyPrefix,*string)

	// Name of the Amazon SNS topic defined for notification of log file delivery.
	snsTopicName?: null | string @go(SnsTopicName,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#TrailParameters: {
	// Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.
	// +kubebuilder:validation:Optional
	advancedEventSelector?: [...#AdvancedEventSelectorParameters] @go(AdvancedEventSelector,[]AdvancedEventSelectorParameters)

	// Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.
	// +kubebuilder:validation:Optional
	cloudWatchLogsGroupArn?: null | string @go(CloudWatchLogsGroupArn,*string)

	// Role for the CloudWatch Logs endpoint to assume to write to a user’s log group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	cloudWatchLogsRoleArn?: null | string @go(CloudWatchLogsRoleArn,*string)

	// Reference to a Role in iam to populate cloudWatchLogsRoleArn.
	// +kubebuilder:validation:Optional
	cloudWatchLogsRoleArnRef?: null | v1.#Reference @go(CloudWatchLogsRoleArnRef,*v1.Reference)

	// Selector for a Role in iam to populate cloudWatchLogsRoleArn.
	// +kubebuilder:validation:Optional
	cloudWatchLogsRoleArnSelector?: null | v1.#Selector @go(CloudWatchLogsRoleArnSelector,*v1.Selector)

	// Whether log file integrity validation is enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	enableLogFileValidation?: null | bool @go(EnableLogFileValidation,*bool)

	// Enables logging for the trail. Defaults to true. Setting this to false will pause logging.
	// +kubebuilder:validation:Optional
	enableLogging?: null | bool @go(EnableLogging,*bool)

	// Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.
	// +kubebuilder:validation:Optional
	eventSelector?: [...#EventSelectorParameters] @go(EventSelector,[]EventSelectorParameters)

	// Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.
	// +kubebuilder:validation:Optional
	includeGlobalServiceEvents?: null | bool @go(IncludeGlobalServiceEvents,*bool)

	// Configuration block for identifying unusual operational activity. See details below.
	// +kubebuilder:validation:Optional
	insightSelector?: [...#InsightSelectorParameters] @go(InsightSelector,[]InsightSelectorParameters)

	// Whether the trail is created in the current region or in all regions. Defaults to false.
	// +kubebuilder:validation:Optional
	isMultiRegionTrail?: null | bool @go(IsMultiRegionTrail,*bool)

	// Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.
	// +kubebuilder:validation:Optional
	isOrganizationTrail?: null | bool @go(IsOrganizationTrail,*bool)

	// KMS key ARN to use to encrypt the logs delivered by CloudTrail.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Reference to a Key in kms to populate kmsKeyId.
	// +kubebuilder:validation:Optional
	kmsKeyIdRef?: null | v1.#Reference @go(KMSKeyIDRef,*v1.Reference)

	// Selector for a Key in kms to populate kmsKeyId.
	// +kubebuilder:validation:Optional
	kmsKeyIdSelector?: null | v1.#Selector @go(KMSKeyIDSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Name of the S3 bucket designated for publishing log files.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	s3BucketName?: null | string @go(S3BucketName,*string)

	// Reference to a Bucket in s3 to populate s3BucketName.
	// +kubebuilder:validation:Optional
	s3BucketNameRef?: null | v1.#Reference @go(S3BucketNameRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate s3BucketName.
	// +kubebuilder:validation:Optional
	s3BucketNameSelector?: null | v1.#Selector @go(S3BucketNameSelector,*v1.Selector)

	// S3 key prefix that follows the name of the bucket you have designated for log file delivery.
	// +kubebuilder:validation:Optional
	s3KeyPrefix?: null | string @go(S3KeyPrefix,*string)

	// Name of the Amazon SNS topic defined for notification of log file delivery.
	// +kubebuilder:validation:Optional
	snsTopicName?: null | string @go(SnsTopicName,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// TrailSpec defines the desired state of Trail
#TrailSpec: {
	v1.#ResourceSpec
	forProvider: #TrailParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TrailInitParameters @go(InitProvider)
}

// TrailStatus defines the observed state of Trail.
#TrailStatus: {
	v1.#ResourceStatus
	atProvider?: #TrailObservation @go(AtProvider)
}

// Trail is the Schema for the Trails API. Provides a CloudTrail resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Trail: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #TrailSpec         @go(Spec)
	status?:   #TrailStatus       @go(Status)
}

// TrailList contains a list of Trails
#TrailList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Trail] @go(Items,[]Trail)
}
