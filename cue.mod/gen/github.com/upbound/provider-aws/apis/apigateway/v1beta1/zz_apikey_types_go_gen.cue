// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigateway/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#APIKeyInitParameters: {
	// API key description.
	description?: null | string @go(Description,*string)

	// Whether the API key can be used by callers. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// Name of the API key.
	name?: null | string @go(Name,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#APIKeyObservation: {
	// ARN
	arn?: null | string @go(Arn,*string)

	// Creation date of the API key
	createdDate?: null | string @go(CreatedDate,*string)

	// API key description.
	description?: null | string @go(Description,*string)

	// Whether the API key can be used by callers. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// ID of the API key
	id?: null | string @go(ID,*string)

	// Last update date of the API key
	lastUpdatedDate?: null | string @go(LastUpdatedDate,*string)

	// Name of the API key.
	name?: null | string @go(Name,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#APIKeyParameters: {
	// API key description.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether the API key can be used by callers. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Name of the API key.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
	// +kubebuilder:validation:Optional
	valueSecretRef?: null | v1.#SecretKeySelector @go(ValueSecretRef,*v1.SecretKeySelector)
}

// APIKeySpec defines the desired state of APIKey
#APIKeySpec: {
	v1.#ResourceSpec
	forProvider: #APIKeyParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #APIKeyInitParameters @go(InitProvider)
}

// APIKeyStatus defines the observed state of APIKey.
#APIKeyStatus: {
	v1.#ResourceStatus
	atProvider?: #APIKeyObservation @go(AtProvider)
}

// APIKey is the Schema for the APIKeys API. Provides an API Gateway API Key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#APIKey: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #APIKeySpec   @go(Spec)
	status?: #APIKeyStatus @go(Status)
}

// APIKeyList contains a list of APIKeys
#APIKeyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#APIKey] @go(Items,[]APIKey)
}
