// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lightsail/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#LBAttachmentInitParameters: {
}

#LBAttachmentObservation: {
	// A combination of attributes to create a unique id: lb_name,instance_name
	id?: null | string @go(ID,*string)

	// The name of the instance to attach to the load balancer.
	instanceName?: null | string @go(InstanceName,*string)

	// The name of the Lightsail load balancer.
	lbName?: null | string @go(LBName,*string)
}

#LBAttachmentParameters: {
	// The name of the instance to attach to the load balancer.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lightsail/v1beta1.Instance
	// +kubebuilder:validation:Optional
	instanceName?: null | string @go(InstanceName,*string)

	// Reference to a Instance in lightsail to populate instanceName.
	// +kubebuilder:validation:Optional
	instanceNameRef?: null | v1.#Reference @go(InstanceNameRef,*v1.Reference)

	// Selector for a Instance in lightsail to populate instanceName.
	// +kubebuilder:validation:Optional
	instanceNameSelector?: null | v1.#Selector @go(InstanceNameSelector,*v1.Selector)

	// The name of the Lightsail load balancer.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lightsail/v1beta1.LB
	// +kubebuilder:validation:Optional
	lbName?: null | string @go(LBName,*string)

	// Reference to a LB in lightsail to populate lbName.
	// +kubebuilder:validation:Optional
	lbNameRef?: null | v1.#Reference @go(LBNameRef,*v1.Reference)

	// Selector for a LB in lightsail to populate lbName.
	// +kubebuilder:validation:Optional
	lbNameSelector?: null | v1.#Selector @go(LBNameSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// LBAttachmentSpec defines the desired state of LBAttachment
#LBAttachmentSpec: {
	v1.#ResourceSpec
	forProvider: #LBAttachmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #LBAttachmentInitParameters @go(InitProvider)
}

// LBAttachmentStatus defines the observed state of LBAttachment.
#LBAttachmentStatus: {
	v1.#ResourceStatus
	atProvider?: #LBAttachmentObservation @go(AtProvider)
}

// LBAttachment is the Schema for the LBAttachments API. Attaches a Lightsail Instance to a Lightsail Load Balancer
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#LBAttachment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta  @go(ObjectMeta)
	spec:      #LBAttachmentSpec   @go(Spec)
	status?:   #LBAttachmentStatus @go(Status)
}

// LBAttachmentList contains a list of LBAttachments
#LBAttachmentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#LBAttachment] @go(Items,[]LBAttachment)
}
