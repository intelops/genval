// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PrincipalPortfolioAssociationInitParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Principal type. Setting this argument empty (e.g., principal_type = "") will result in an error. Valid value is IAM. Default is IAM.
	principalType?: null | string @go(PrincipalType,*string)
}

#PrincipalPortfolioAssociationObservation: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Identifier of the association.
	id?: null | string @go(ID,*string)

	// Portfolio identifier.
	portfolioId?: null | string @go(PortfolioID,*string)

	// Principal ARN.
	principalArn?: null | string @go(PrincipalArn,*string)

	// Principal type. Setting this argument empty (e.g., principal_type = "") will result in an error. Valid value is IAM. Default is IAM.
	principalType?: null | string @go(PrincipalType,*string)
}

#PrincipalPortfolioAssociationParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	// +kubebuilder:validation:Optional
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Portfolio identifier.
	// +crossplane:generate:reference:type=Portfolio
	// +kubebuilder:validation:Optional
	portfolioId?: null | string @go(PortfolioID,*string)

	// Reference to a Portfolio to populate portfolioId.
	// +kubebuilder:validation:Optional
	portfolioIdRef?: null | v1.#Reference @go(PortfolioIDRef,*v1.Reference)

	// Selector for a Portfolio to populate portfolioId.
	// +kubebuilder:validation:Optional
	portfolioIdSelector?: null | v1.#Selector @go(PortfolioIDSelector,*v1.Selector)

	// Principal ARN.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.User
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	principalArn?: null | string @go(PrincipalArn,*string)

	// Reference to a User in iam to populate principalArn.
	// +kubebuilder:validation:Optional
	principalArnRef?: null | v1.#Reference @go(PrincipalArnRef,*v1.Reference)

	// Selector for a User in iam to populate principalArn.
	// +kubebuilder:validation:Optional
	principalArnSelector?: null | v1.#Selector @go(PrincipalArnSelector,*v1.Selector)

	// Principal type. Setting this argument empty (e.g., principal_type = "") will result in an error. Valid value is IAM. Default is IAM.
	// +kubebuilder:validation:Optional
	principalType?: null | string @go(PrincipalType,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// PrincipalPortfolioAssociationSpec defines the desired state of PrincipalPortfolioAssociation
#PrincipalPortfolioAssociationSpec: {
	v1.#ResourceSpec
	forProvider: #PrincipalPortfolioAssociationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PrincipalPortfolioAssociationInitParameters @go(InitProvider)
}

// PrincipalPortfolioAssociationStatus defines the observed state of PrincipalPortfolioAssociation.
#PrincipalPortfolioAssociationStatus: {
	v1.#ResourceStatus
	atProvider?: #PrincipalPortfolioAssociationObservation @go(AtProvider)
}

// PrincipalPortfolioAssociation is the Schema for the PrincipalPortfolioAssociations API. Manages a Service Catalog Principal Portfolio Association
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PrincipalPortfolioAssociation: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.acceptLanguage) || (has(self.initProvider) && has(self.initProvider.acceptLanguage))",message="spec.forProvider.acceptLanguage is a required parameter"
	spec:    #PrincipalPortfolioAssociationSpec   @go(Spec)
	status?: #PrincipalPortfolioAssociationStatus @go(Status)
}

// PrincipalPortfolioAssociationList contains a list of PrincipalPortfolioAssociations
#PrincipalPortfolioAssociationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#PrincipalPortfolioAssociation] @go(Items,[]PrincipalPortfolioAssociation)
}
