// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PortfolioShareInitParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	principalId?: null | string @go(PrincipalID,*string)

	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	sharePrincipals?: null | bool @go(SharePrincipals,*bool)

	// Whether to enable sharing of aws_servicecatalog_tag_option resources when creating the portfolio share.
	shareTagOptions?: null | bool @go(ShareTagOptions,*bool)

	// Type of portfolio share. Valid values are ACCOUNT (an external account), ORGANIZATION (a share to every account in an organization), ORGANIZATIONAL_UNIT, ORGANIZATION_MEMBER_ACCOUNT (a share to an account in an organization).
	type?: null | string @go(Type,*string)

	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	waitForAcceptance?: null | bool @go(WaitForAcceptance,*bool)
}

#PortfolioShareObservation: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Whether the shared portfolio is imported by the recipient account. If the recipient is organizational, the share is automatically imported, and the field is always set to true.
	accepted?: null | bool   @go(Accepted,*bool)
	id?:       null | string @go(ID,*string)

	// Portfolio identifier.
	portfolioId?: null | string @go(PortfolioID,*string)

	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	principalId?: null | string @go(PrincipalID,*string)

	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	sharePrincipals?: null | bool @go(SharePrincipals,*bool)

	// Whether to enable sharing of aws_servicecatalog_tag_option resources when creating the portfolio share.
	shareTagOptions?: null | bool @go(ShareTagOptions,*bool)

	// Type of portfolio share. Valid values are ACCOUNT (an external account), ORGANIZATION (a share to every account in an organization), ORGANIZATIONAL_UNIT, ORGANIZATION_MEMBER_ACCOUNT (a share to an account in an organization).
	type?: null | string @go(Type,*string)

	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	waitForAcceptance?: null | bool @go(WaitForAcceptance,*bool)
}

#PortfolioShareParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	// +kubebuilder:validation:Optional
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Portfolio identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/servicecatalog/v1beta1.Portfolio
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	portfolioId?: null | string @go(PortfolioID,*string)

	// Reference to a Portfolio in servicecatalog to populate portfolioId.
	// +kubebuilder:validation:Optional
	portfolioIdRef?: null | v1.#Reference @go(PortfolioIDRef,*v1.Reference)

	// Selector for a Portfolio in servicecatalog to populate portfolioId.
	// +kubebuilder:validation:Optional
	portfolioIdSelector?: null | v1.#Selector @go(PortfolioIDSelector,*v1.Selector)

	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	// +kubebuilder:validation:Optional
	principalId?: null | string @go(PrincipalID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	// +kubebuilder:validation:Optional
	sharePrincipals?: null | bool @go(SharePrincipals,*bool)

	// Whether to enable sharing of aws_servicecatalog_tag_option resources when creating the portfolio share.
	// +kubebuilder:validation:Optional
	shareTagOptions?: null | bool @go(ShareTagOptions,*bool)

	// Type of portfolio share. Valid values are ACCOUNT (an external account), ORGANIZATION (a share to every account in an organization), ORGANIZATIONAL_UNIT, ORGANIZATION_MEMBER_ACCOUNT (a share to an account in an organization).
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	// +kubebuilder:validation:Optional
	waitForAcceptance?: null | bool @go(WaitForAcceptance,*bool)
}

// PortfolioShareSpec defines the desired state of PortfolioShare
#PortfolioShareSpec: {
	v1.#ResourceSpec
	forProvider: #PortfolioShareParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PortfolioShareInitParameters @go(InitProvider)
}

// PortfolioShareStatus defines the observed state of PortfolioShare.
#PortfolioShareStatus: {
	v1.#ResourceStatus
	atProvider?: #PortfolioShareObservation @go(AtProvider)
}

// PortfolioShare is the Schema for the PortfolioShares API. Manages a Service Catalog Portfolio Share
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PortfolioShare: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principalId) || (has(self.initProvider) && has(self.initProvider.principalId))",message="spec.forProvider.principalId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	spec:    #PortfolioShareSpec   @go(Spec)
	status?: #PortfolioShareStatus @go(Status)
}

// PortfolioShareList contains a list of PortfolioShares
#PortfolioShareList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#PortfolioShare] @go(Items,[]PortfolioShare)
}
