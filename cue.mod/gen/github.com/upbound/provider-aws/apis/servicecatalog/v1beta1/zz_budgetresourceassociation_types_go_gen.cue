// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#BudgetResourceAssociationInitParameters: {
}

#BudgetResourceAssociationObservation: {
	// Budget name.
	budgetName?: null | string @go(BudgetName,*string)

	// Identifier of the association.
	id?: null | string @go(ID,*string)

	// Resource identifier.
	resourceId?: null | string @go(ResourceID,*string)
}

#BudgetResourceAssociationParameters: {
	// Budget name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/budgets/v1beta1.Budget
	// +kubebuilder:validation:Optional
	budgetName?: null | string @go(BudgetName,*string)

	// Reference to a Budget in budgets to populate budgetName.
	// +kubebuilder:validation:Optional
	budgetNameRef?: null | v1.#Reference @go(BudgetNameRef,*v1.Reference)

	// Selector for a Budget in budgets to populate budgetName.
	// +kubebuilder:validation:Optional
	budgetNameSelector?: null | v1.#Selector @go(BudgetNameSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Resource identifier.
	// +crossplane:generate:reference:type=Product
	// +kubebuilder:validation:Optional
	resourceId?: null | string @go(ResourceID,*string)

	// Reference to a Product to populate resourceId.
	// +kubebuilder:validation:Optional
	resourceIdRef?: null | v1.#Reference @go(ResourceIDRef,*v1.Reference)

	// Selector for a Product to populate resourceId.
	// +kubebuilder:validation:Optional
	resourceIdSelector?: null | v1.#Selector @go(ResourceIDSelector,*v1.Selector)
}

// BudgetResourceAssociationSpec defines the desired state of BudgetResourceAssociation
#BudgetResourceAssociationSpec: {
	v1.#ResourceSpec
	forProvider: #BudgetResourceAssociationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BudgetResourceAssociationInitParameters @go(InitProvider)
}

// BudgetResourceAssociationStatus defines the observed state of BudgetResourceAssociation.
#BudgetResourceAssociationStatus: {
	v1.#ResourceStatus
	atProvider?: #BudgetResourceAssociationObservation @go(AtProvider)
}

// BudgetResourceAssociation is the Schema for the BudgetResourceAssociations API. Manages a Service Catalog Budget Resource Association
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BudgetResourceAssociation: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta               @go(ObjectMeta)
	spec:      #BudgetResourceAssociationSpec   @go(Spec)
	status?:   #BudgetResourceAssociationStatus @go(Status)
}

// BudgetResourceAssociationList contains a list of BudgetResourceAssociations
#BudgetResourceAssociationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#BudgetResourceAssociation] @go(Items,[]BudgetResourceAssociation)
}
