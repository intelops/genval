// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/connect/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#OutboundCallerConfigInitParameters: {
	// Specifies the caller ID name.
	outboundCallerIdName?: null | string @go(OutboundCallerIDName,*string)

	// Specifies the caller ID number.
	outboundCallerIdNumberId?: null | string @go(OutboundCallerIDNumberID,*string)

	// Specifies outbound whisper flow to be used during an outbound call.
	outboundFlowId?: null | string @go(OutboundFlowID,*string)
}

#OutboundCallerConfigObservation: {
	// Specifies the caller ID name.
	outboundCallerIdName?: null | string @go(OutboundCallerIDName,*string)

	// Specifies the caller ID number.
	outboundCallerIdNumberId?: null | string @go(OutboundCallerIDNumberID,*string)

	// Specifies outbound whisper flow to be used during an outbound call.
	outboundFlowId?: null | string @go(OutboundFlowID,*string)
}

#OutboundCallerConfigParameters: {
	// Specifies the caller ID name.
	// +kubebuilder:validation:Optional
	outboundCallerIdName?: null | string @go(OutboundCallerIDName,*string)

	// Specifies the caller ID number.
	// +kubebuilder:validation:Optional
	outboundCallerIdNumberId?: null | string @go(OutboundCallerIDNumberID,*string)

	// Specifies outbound whisper flow to be used during an outbound call.
	// +kubebuilder:validation:Optional
	outboundFlowId?: null | string @go(OutboundFlowID,*string)
}

#QueueInitParameters: {
	// Specifies the description of the Queue.
	description?: null | string @go(Description,*string)

	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	maxContacts?: null | float64 @go(MaxContacts,*float64)

	// Specifies the name of the Queue.
	name?: null | string @go(Name,*string)

	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	outboundCallerConfig?: [...#OutboundCallerConfigInitParameters] @go(OutboundCallerConfig,[]OutboundCallerConfigInitParameters)

	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	quickConnectIds?: [...null | string] @go(QuickConnectIds,[]*string)

	// Specifies the description of the Queue. Valid values are ENABLED, DISABLED.
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#QueueObservation: {
	// The Amazon Resource Name (ARN) of the Queue.
	arn?: null | string @go(Arn,*string)

	// Specifies the description of the Queue.
	description?: null | string @go(Description,*string)

	// Specifies the identifier of the Hours of Operation.
	hoursOfOperationId?: null | string @go(HoursOfOperationID,*string)

	// The identifier of the hosting Amazon Connect Instance and identifier of the Queue separated by a colon (:).
	id?: null | string @go(ID,*string)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	instanceId?: null | string @go(InstanceID,*string)

	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	maxContacts?: null | float64 @go(MaxContacts,*float64)

	// Specifies the name of the Queue.
	name?: null | string @go(Name,*string)

	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	outboundCallerConfig?: [...#OutboundCallerConfigObservation] @go(OutboundCallerConfig,[]OutboundCallerConfigObservation)

	// The identifier for the Queue.
	queueId?: null | string @go(QueueID,*string)

	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	quickConnectIds?: [...null | string] @go(QuickConnectIds,[]*string)
	quickConnectIdsAssociated?: [...null | string] @go(QuickConnectIdsAssociated,[]*string)

	// Specifies the description of the Queue. Valid values are ENABLED, DISABLED.
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#QueueParameters: {
	// Specifies the description of the Queue.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies the identifier of the Hours of Operation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.HoursOfOperation
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("hours_of_operation_id",true)
	// +kubebuilder:validation:Optional
	hoursOfOperationId?: null | string @go(HoursOfOperationID,*string)

	// Reference to a HoursOfOperation in connect to populate hoursOfOperationId.
	// +kubebuilder:validation:Optional
	hoursOfOperationIdRef?: null | v1.#Reference @go(HoursOfOperationIDRef,*v1.Reference)

	// Selector for a HoursOfOperation in connect to populate hoursOfOperationId.
	// +kubebuilder:validation:Optional
	hoursOfOperationIdSelector?: null | v1.#Selector @go(HoursOfOperationIDSelector,*v1.Selector)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Reference to a Instance in connect to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdRef?: null | v1.#Reference @go(InstanceIDRef,*v1.Reference)

	// Selector for a Instance in connect to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdSelector?: null | v1.#Selector @go(InstanceIDSelector,*v1.Selector)

	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	// +kubebuilder:validation:Optional
	maxContacts?: null | float64 @go(MaxContacts,*float64)

	// Specifies the name of the Queue.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	// +kubebuilder:validation:Optional
	outboundCallerConfig?: [...#OutboundCallerConfigParameters] @go(OutboundCallerConfig,[]OutboundCallerConfigParameters)

	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	// +kubebuilder:validation:Optional
	quickConnectIds?: [...null | string] @go(QuickConnectIds,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies the description of the Queue. Valid values are ENABLED, DISABLED.
	// +kubebuilder:validation:Optional
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// QueueSpec defines the desired state of Queue
#QueueSpec: {
	v1.#ResourceSpec
	forProvider: #QueueParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #QueueInitParameters @go(InitProvider)
}

// QueueStatus defines the observed state of Queue.
#QueueStatus: {
	v1.#ResourceStatus
	atProvider?: #QueueObservation @go(AtProvider)
}

// Queue is the Schema for the Queues API. Provides details about a specific Amazon Connect Queue
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Queue: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #QueueSpec   @go(Spec)
	status?: #QueueStatus @go(Status)
}

// QueueList contains a list of Queues
#QueueList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Queue] @go(Items,[]Queue)
}
