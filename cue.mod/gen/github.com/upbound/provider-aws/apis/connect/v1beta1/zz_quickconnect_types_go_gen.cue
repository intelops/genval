// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/connect/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PhoneConfigInitParameters: {
	// Specifies the phone number in in E.164 format.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#PhoneConfigObservation: {
	// Specifies the phone number in in E.164 format.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#PhoneConfigParameters: {
	// Specifies the phone number in in E.164 format.
	// +kubebuilder:validation:Optional
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#QueueConfigInitParameters: {
	// Specifies the identifier of the contact flow.
	contactFlowId?: null | string @go(ContactFlowID,*string)

	// Specifies the identifier for the queue.
	queueId?: null | string @go(QueueID,*string)
}

#QueueConfigObservation: {
	// Specifies the identifier of the contact flow.
	contactFlowId?: null | string @go(ContactFlowID,*string)

	// Specifies the identifier for the queue.
	queueId?: null | string @go(QueueID,*string)
}

#QueueConfigParameters: {
	// Specifies the identifier of the contact flow.
	// +kubebuilder:validation:Optional
	contactFlowId?: null | string @go(ContactFlowID,*string)

	// Specifies the identifier for the queue.
	// +kubebuilder:validation:Optional
	queueId?: null | string @go(QueueID,*string)
}

#QuickConnectConfigInitParameters: {
	// Specifies the phone configuration of the Quick Connect. This is required only if quick_connect_type is PHONE_NUMBER. The phone_config block is documented below.
	phoneConfig?: [...#PhoneConfigInitParameters] @go(PhoneConfig,[]PhoneConfigInitParameters)

	// Specifies the queue configuration of the Quick Connect. This is required only if quick_connect_type is QUEUE. The queue_config block is documented below.
	queueConfig?: [...#QueueConfigInitParameters] @go(QueueConfig,[]QueueConfigInitParameters)

	// Specifies the configuration type of the quick connect. valid values are PHONE_NUMBER, QUEUE, USER.
	quickConnectType?: null | string @go(QuickConnectType,*string)

	// Specifies the user configuration of the Quick Connect. This is required only if quick_connect_type is USER. The user_config block is documented below.
	userConfig?: [...#UserConfigInitParameters] @go(UserConfig,[]UserConfigInitParameters)
}

#QuickConnectConfigObservation: {
	// Specifies the phone configuration of the Quick Connect. This is required only if quick_connect_type is PHONE_NUMBER. The phone_config block is documented below.
	phoneConfig?: [...#PhoneConfigObservation] @go(PhoneConfig,[]PhoneConfigObservation)

	// Specifies the queue configuration of the Quick Connect. This is required only if quick_connect_type is QUEUE. The queue_config block is documented below.
	queueConfig?: [...#QueueConfigObservation] @go(QueueConfig,[]QueueConfigObservation)

	// Specifies the configuration type of the quick connect. valid values are PHONE_NUMBER, QUEUE, USER.
	quickConnectType?: null | string @go(QuickConnectType,*string)

	// Specifies the user configuration of the Quick Connect. This is required only if quick_connect_type is USER. The user_config block is documented below.
	userConfig?: [...#UserConfigObservation] @go(UserConfig,[]UserConfigObservation)
}

#QuickConnectConfigParameters: {
	// Specifies the phone configuration of the Quick Connect. This is required only if quick_connect_type is PHONE_NUMBER. The phone_config block is documented below.
	// +kubebuilder:validation:Optional
	phoneConfig?: [...#PhoneConfigParameters] @go(PhoneConfig,[]PhoneConfigParameters)

	// Specifies the queue configuration of the Quick Connect. This is required only if quick_connect_type is QUEUE. The queue_config block is documented below.
	// +kubebuilder:validation:Optional
	queueConfig?: [...#QueueConfigParameters] @go(QueueConfig,[]QueueConfigParameters)

	// Specifies the configuration type of the quick connect. valid values are PHONE_NUMBER, QUEUE, USER.
	// +kubebuilder:validation:Optional
	quickConnectType?: null | string @go(QuickConnectType,*string)

	// Specifies the user configuration of the Quick Connect. This is required only if quick_connect_type is USER. The user_config block is documented below.
	// +kubebuilder:validation:Optional
	userConfig?: [...#UserConfigParameters] @go(UserConfig,[]UserConfigParameters)
}

#QuickConnectInitParameters: {
	// Specifies the description of the Quick Connect.
	description?: null | string @go(Description,*string)

	// Specifies the name of the Quick Connect.
	name?: null | string @go(Name,*string)

	// A block that defines the configuration information for the Quick Connect: quick_connect_type and one of phone_config, queue_config, user_config . The Quick Connect Config block is documented below.
	quickConnectConfig?: [...#QuickConnectConfigInitParameters] @go(QuickConnectConfig,[]QuickConnectConfigInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#QuickConnectObservation: {
	// The Amazon Resource Name (ARN) of the Quick Connect.
	arn?: null | string @go(Arn,*string)

	// Specifies the description of the Quick Connect.
	description?: null | string @go(Description,*string)

	// The identifier of the hosting Amazon Connect Instance and identifier of the Quick Connect separated by a colon (:).
	id?: null | string @go(ID,*string)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	instanceId?: null | string @go(InstanceID,*string)

	// Specifies the name of the Quick Connect.
	name?: null | string @go(Name,*string)

	// A block that defines the configuration information for the Quick Connect: quick_connect_type and one of phone_config, queue_config, user_config . The Quick Connect Config block is documented below.
	quickConnectConfig?: [...#QuickConnectConfigObservation] @go(QuickConnectConfig,[]QuickConnectConfigObservation)

	// The identifier for the Quick Connect.
	quickConnectId?: null | string @go(QuickConnectID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#QuickConnectParameters: {
	// Specifies the description of the Quick Connect.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Reference to a Instance in connect to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdRef?: null | v1.#Reference @go(InstanceIDRef,*v1.Reference)

	// Selector for a Instance in connect to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdSelector?: null | v1.#Selector @go(InstanceIDSelector,*v1.Selector)

	// Specifies the name of the Quick Connect.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A block that defines the configuration information for the Quick Connect: quick_connect_type and one of phone_config, queue_config, user_config . The Quick Connect Config block is documented below.
	// +kubebuilder:validation:Optional
	quickConnectConfig?: [...#QuickConnectConfigParameters] @go(QuickConnectConfig,[]QuickConnectConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#UserConfigInitParameters: {
	// Specifies the identifier of the contact flow.
	contactFlowId?: null | string @go(ContactFlowID,*string)

	// Specifies the identifier for the user.
	userId?: null | string @go(UserID,*string)
}

#UserConfigObservation: {
	// Specifies the identifier of the contact flow.
	contactFlowId?: null | string @go(ContactFlowID,*string)

	// Specifies the identifier for the user.
	userId?: null | string @go(UserID,*string)
}

#UserConfigParameters: {
	// Specifies the identifier of the contact flow.
	// +kubebuilder:validation:Optional
	contactFlowId?: null | string @go(ContactFlowID,*string)

	// Specifies the identifier for the user.
	// +kubebuilder:validation:Optional
	userId?: null | string @go(UserID,*string)
}

// QuickConnectSpec defines the desired state of QuickConnect
#QuickConnectSpec: {
	v1.#ResourceSpec
	forProvider: #QuickConnectParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #QuickConnectInitParameters @go(InitProvider)
}

// QuickConnectStatus defines the observed state of QuickConnect.
#QuickConnectStatus: {
	v1.#ResourceStatus
	atProvider?: #QuickConnectObservation @go(AtProvider)
}

// QuickConnect is the Schema for the QuickConnects API. Provides details about a specific Amazon Quick Connect
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#QuickConnect: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.quickConnectConfig) || (has(self.initProvider) && has(self.initProvider.quickConnectConfig))",message="spec.forProvider.quickConnectConfig is a required parameter"
	spec:    #QuickConnectSpec   @go(Spec)
	status?: #QuickConnectStatus @go(Status)
}

// QuickConnectList contains a list of QuickConnects
#QuickConnectList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#QuickConnect] @go(Items,[]QuickConnect)
}
