// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/connect/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#EncryptionConfigInitParameters: {
	// The type of encryption. Valid Values: KMS.
	encryptionType?: null | string @go(EncryptionType,*string)
}

#EncryptionConfigObservation: {
	// The type of encryption. Valid Values: KMS.
	encryptionType?: null | string @go(EncryptionType,*string)

	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	keyId?: null | string @go(KeyID,*string)
}

#EncryptionConfigParameters: {
	// The type of encryption. Valid Values: KMS.
	// +kubebuilder:validation:Optional
	encryptionType?: null | string @go(EncryptionType,*string)

	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)

	// Reference to a Key in kms to populate keyId.
	// +kubebuilder:validation:Optional
	keyIdRef?: null | v1.#Reference @go(KeyIDRef,*v1.Reference)

	// Selector for a Key in kms to populate keyId.
	// +kubebuilder:validation:Optional
	keyIdSelector?: null | v1.#Selector @go(KeyIDSelector,*v1.Selector)
}

#InstanceStorageConfigInitParameters: {
	// A valid resource type. Valid Values: CHAT_TRANSCRIPTS | CALL_RECORDINGS | SCHEDULED_REPORTS | MEDIA_STREAMS | CONTACT_TRACE_RECORDS | AGENT_EVENTS | REAL_TIME_CONTACT_ANALYSIS_SEGMENTS.
	resourceType?: null | string @go(ResourceType,*string)

	// Specifies the storage configuration options for the Connect Instance. Documented below.
	storageConfig?: [...#StorageConfigInitParameters] @go(StorageConfig,[]StorageConfigInitParameters)
}

#InstanceStorageConfigObservation: {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	associationId?: null | string @go(AssociationID,*string)

	// The identifier of the hosting Amazon Connect Instance, association_id, and resource_type separated by a colon (:).
	id?: null | string @go(ID,*string)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	instanceId?: null | string @go(InstanceID,*string)

	// A valid resource type. Valid Values: CHAT_TRANSCRIPTS | CALL_RECORDINGS | SCHEDULED_REPORTS | MEDIA_STREAMS | CONTACT_TRACE_RECORDS | AGENT_EVENTS | REAL_TIME_CONTACT_ANALYSIS_SEGMENTS.
	resourceType?: null | string @go(ResourceType,*string)

	// Specifies the storage configuration options for the Connect Instance. Documented below.
	storageConfig?: [...#StorageConfigObservation] @go(StorageConfig,[]StorageConfigObservation)
}

#InstanceStorageConfigParameters: {
	// Specifies the identifier of the hosting Amazon Connect Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Reference to a Instance in connect to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdRef?: null | v1.#Reference @go(InstanceIDRef,*v1.Reference)

	// Selector for a Instance in connect to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdSelector?: null | v1.#Selector @go(InstanceIDSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// A valid resource type. Valid Values: CHAT_TRANSCRIPTS | CALL_RECORDINGS | SCHEDULED_REPORTS | MEDIA_STREAMS | CONTACT_TRACE_RECORDS | AGENT_EVENTS | REAL_TIME_CONTACT_ANALYSIS_SEGMENTS.
	// +kubebuilder:validation:Optional
	resourceType?: null | string @go(ResourceType,*string)

	// Specifies the storage configuration options for the Connect Instance. Documented below.
	// +kubebuilder:validation:Optional
	storageConfig?: [...#StorageConfigParameters] @go(StorageConfig,[]StorageConfigParameters)
}

#KinesisFirehoseConfigInitParameters: {
}

#KinesisFirehoseConfigObservation: {
	// The Amazon Resource Name (ARN) of the delivery stream.
	firehoseArn?: null | string @go(FirehoseArn,*string)
}

#KinesisFirehoseConfigParameters: {
	// The Amazon Resource Name (ARN) of the delivery stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",false)
	// +kubebuilder:validation:Optional
	firehoseArn?: null | string @go(FirehoseArn,*string)

	// Reference to a DeliveryStream in firehose to populate firehoseArn.
	// +kubebuilder:validation:Optional
	firehoseArnRef?: null | v1.#Reference @go(FirehoseArnRef,*v1.Reference)

	// Selector for a DeliveryStream in firehose to populate firehoseArn.
	// +kubebuilder:validation:Optional
	firehoseArnSelector?: null | v1.#Selector @go(FirehoseArnSelector,*v1.Selector)
}

#KinesisStreamConfigInitParameters: {
}

#KinesisStreamConfigObservation: {
	// The Amazon Resource Name (ARN) of the data stream.
	streamArn?: null | string @go(StreamArn,*string)
}

#KinesisStreamConfigParameters: {
	// The Amazon Resource Name (ARN) of the data stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",false)
	// +kubebuilder:validation:Optional
	streamArn?: null | string @go(StreamArn,*string)

	// Reference to a Stream in kinesis to populate streamArn.
	// +kubebuilder:validation:Optional
	streamArnRef?: null | v1.#Reference @go(StreamArnRef,*v1.Reference)

	// Selector for a Stream in kinesis to populate streamArn.
	// +kubebuilder:validation:Optional
	streamArnSelector?: null | v1.#Selector @go(StreamArnSelector,*v1.Selector)
}

#KinesisVideoStreamConfigInitParameters: {
	// The encryption configuration. Documented below.
	encryptionConfig?: [...#EncryptionConfigInitParameters] @go(EncryptionConfig,[]EncryptionConfigInitParameters)

	// The prefix of the video stream. Minimum length of 1. Maximum length of 128. When read from the state, the value returned is <prefix>-connect-<connect_instance_alias>-contact- since the API appends additional details to the prefix.
	prefix?: null | string @go(Prefix,*string)

	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of 0. Maximum value of 87600. A value of 0, indicates that the stream does not persist data.
	retentionPeriodHours?: null | float64 @go(RetentionPeriodHours,*float64)
}

#KinesisVideoStreamConfigObservation: {
	// The encryption configuration. Documented below.
	encryptionConfig?: [...#EncryptionConfigObservation] @go(EncryptionConfig,[]EncryptionConfigObservation)

	// The prefix of the video stream. Minimum length of 1. Maximum length of 128. When read from the state, the value returned is <prefix>-connect-<connect_instance_alias>-contact- since the API appends additional details to the prefix.
	prefix?: null | string @go(Prefix,*string)

	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of 0. Maximum value of 87600. A value of 0, indicates that the stream does not persist data.
	retentionPeriodHours?: null | float64 @go(RetentionPeriodHours,*float64)
}

#KinesisVideoStreamConfigParameters: {
	// The encryption configuration. Documented below.
	// +kubebuilder:validation:Optional
	encryptionConfig: [...#EncryptionConfigParameters] @go(EncryptionConfig,[]EncryptionConfigParameters)

	// The prefix of the video stream. Minimum length of 1. Maximum length of 128. When read from the state, the value returned is <prefix>-connect-<connect_instance_alias>-contact- since the API appends additional details to the prefix.
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of 0. Maximum value of 87600. A value of 0, indicates that the stream does not persist data.
	// +kubebuilder:validation:Optional
	retentionPeriodHours?: null | float64 @go(RetentionPeriodHours,*float64)
}

#S3ConfigEncryptionConfigInitParameters: {
	// The type of encryption. Valid Values: KMS.
	encryptionType?: null | string @go(EncryptionType,*string)
}

#S3ConfigEncryptionConfigObservation: {
	// The type of encryption. Valid Values: KMS.
	encryptionType?: null | string @go(EncryptionType,*string)

	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	keyId?: null | string @go(KeyID,*string)
}

#S3ConfigEncryptionConfigParameters: {
	// The type of encryption. Valid Values: KMS.
	// +kubebuilder:validation:Optional
	encryptionType?: null | string @go(EncryptionType,*string)

	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)

	// Reference to a Key in kms to populate keyId.
	// +kubebuilder:validation:Optional
	keyIdRef?: null | v1.#Reference @go(KeyIDRef,*v1.Reference)

	// Selector for a Key in kms to populate keyId.
	// +kubebuilder:validation:Optional
	keyIdSelector?: null | v1.#Selector @go(KeyIDSelector,*v1.Selector)
}

#S3ConfigInitParameters: {
	// The S3 bucket prefix.
	bucketPrefix?: null | string @go(BucketPrefix,*string)

	// The encryption configuration. Documented below.
	encryptionConfig?: [...#S3ConfigEncryptionConfigInitParameters] @go(EncryptionConfig,[]S3ConfigEncryptionConfigInitParameters)
}

#S3ConfigObservation: {
	// The S3 bucket name.
	bucketName?: null | string @go(BucketName,*string)

	// The S3 bucket prefix.
	bucketPrefix?: null | string @go(BucketPrefix,*string)

	// The encryption configuration. Documented below.
	encryptionConfig?: [...#S3ConfigEncryptionConfigObservation] @go(EncryptionConfig,[]S3ConfigEncryptionConfigObservation)
}

#S3ConfigParameters: {
	// The S3 bucket name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucketName?: null | string @go(BucketName,*string)

	// Reference to a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	bucketNameRef?: null | v1.#Reference @go(BucketNameRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucketName.
	// +kubebuilder:validation:Optional
	bucketNameSelector?: null | v1.#Selector @go(BucketNameSelector,*v1.Selector)

	// The S3 bucket prefix.
	// +kubebuilder:validation:Optional
	bucketPrefix?: null | string @go(BucketPrefix,*string)

	// The encryption configuration. Documented below.
	// +kubebuilder:validation:Optional
	encryptionConfig?: [...#S3ConfigEncryptionConfigParameters] @go(EncryptionConfig,[]S3ConfigEncryptionConfigParameters)
}

#StorageConfigInitParameters: {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	kinesisFirehoseConfig?: [...#KinesisFirehoseConfigInitParameters] @go(KinesisFirehoseConfig,[]KinesisFirehoseConfigInitParameters)

	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	kinesisStreamConfig?: [...#KinesisStreamConfigInitParameters] @go(KinesisStreamConfig,[]KinesisStreamConfigInitParameters)

	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	kinesisVideoStreamConfig?: [...#KinesisVideoStreamConfigInitParameters] @go(KinesisVideoStreamConfig,[]KinesisVideoStreamConfigInitParameters)

	// A block that specifies the configuration of S3 Bucket. Documented below.
	s3Config?: [...#S3ConfigInitParameters] @go(S3Config,[]S3ConfigInitParameters)

	// A valid storage type. Valid Values: S3 | KINESIS_VIDEO_STREAM | KINESIS_STREAM | KINESIS_FIREHOSE.
	storageType?: null | string @go(StorageType,*string)
}

#StorageConfigObservation: {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	kinesisFirehoseConfig?: [...#KinesisFirehoseConfigObservation] @go(KinesisFirehoseConfig,[]KinesisFirehoseConfigObservation)

	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	kinesisStreamConfig?: [...#KinesisStreamConfigObservation] @go(KinesisStreamConfig,[]KinesisStreamConfigObservation)

	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	kinesisVideoStreamConfig?: [...#KinesisVideoStreamConfigObservation] @go(KinesisVideoStreamConfig,[]KinesisVideoStreamConfigObservation)

	// A block that specifies the configuration of S3 Bucket. Documented below.
	s3Config?: [...#S3ConfigObservation] @go(S3Config,[]S3ConfigObservation)

	// A valid storage type. Valid Values: S3 | KINESIS_VIDEO_STREAM | KINESIS_STREAM | KINESIS_FIREHOSE.
	storageType?: null | string @go(StorageType,*string)
}

#StorageConfigParameters: {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	// +kubebuilder:validation:Optional
	kinesisFirehoseConfig?: [...#KinesisFirehoseConfigParameters] @go(KinesisFirehoseConfig,[]KinesisFirehoseConfigParameters)

	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	// +kubebuilder:validation:Optional
	kinesisStreamConfig?: [...#KinesisStreamConfigParameters] @go(KinesisStreamConfig,[]KinesisStreamConfigParameters)

	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	// +kubebuilder:validation:Optional
	kinesisVideoStreamConfig?: [...#KinesisVideoStreamConfigParameters] @go(KinesisVideoStreamConfig,[]KinesisVideoStreamConfigParameters)

	// A block that specifies the configuration of S3 Bucket. Documented below.
	// +kubebuilder:validation:Optional
	s3Config?: [...#S3ConfigParameters] @go(S3Config,[]S3ConfigParameters)

	// A valid storage type. Valid Values: S3 | KINESIS_VIDEO_STREAM | KINESIS_STREAM | KINESIS_FIREHOSE.
	// +kubebuilder:validation:Optional
	storageType?: null | string @go(StorageType,*string)
}

// InstanceStorageConfigSpec defines the desired state of InstanceStorageConfig
#InstanceStorageConfigSpec: {
	v1.#ResourceSpec
	forProvider: #InstanceStorageConfigParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #InstanceStorageConfigInitParameters @go(InitProvider)
}

// InstanceStorageConfigStatus defines the observed state of InstanceStorageConfig.
#InstanceStorageConfigStatus: {
	v1.#ResourceStatus
	atProvider?: #InstanceStorageConfigObservation @go(AtProvider)
}

// InstanceStorageConfig is the Schema for the InstanceStorageConfigs API. Provides details about a specific Amazon Connect Instance Storage Config.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#InstanceStorageConfig: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceType) || (has(self.initProvider) && has(self.initProvider.resourceType))",message="spec.forProvider.resourceType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageConfig) || (has(self.initProvider) && has(self.initProvider.storageConfig))",message="spec.forProvider.storageConfig is a required parameter"
	spec:    #InstanceStorageConfigSpec   @go(Spec)
	status?: #InstanceStorageConfigStatus @go(Status)
}

// InstanceStorageConfigList contains a list of InstanceStorageConfigs
#InstanceStorageConfigList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#InstanceStorageConfig] @go(Items,[]InstanceStorageConfig)
}
