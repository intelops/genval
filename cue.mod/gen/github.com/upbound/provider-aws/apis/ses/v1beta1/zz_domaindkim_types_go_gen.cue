// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ses/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#DomainDKIMInitParameters: {
}

#DomainDKIMObservation: {
	// DKIM tokens generated by SES.
	// These tokens should be used to create CNAME records used to verify SES Easy DKIM.
	// Find out more about verifying domains in Amazon SES
	// in the AWS SES docs.
	dkimTokens?: [...null | string] @go(DKIMTokens,[]*string)
	id?: null | string @go(ID,*string)
}

#DomainDKIMParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// DomainDKIMSpec defines the desired state of DomainDKIM
#DomainDKIMSpec: {
	v1.#ResourceSpec
	forProvider: #DomainDKIMParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DomainDKIMInitParameters @go(InitProvider)
}

// DomainDKIMStatus defines the observed state of DomainDKIM.
#DomainDKIMStatus: {
	v1.#ResourceStatus
	atProvider?: #DomainDKIMObservation @go(AtProvider)
}

// DomainDKIM is the Schema for the DomainDKIMs API. Provides an SES domain DKIM generation resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DomainDKIM: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #DomainDKIMSpec    @go(Spec)
	status?:   #DomainDKIMStatus  @go(Status)
}

// DomainDKIMList contains a list of DomainDKIMs
#DomainDKIMList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#DomainDKIM] @go(Items,[]DomainDKIM)
}
