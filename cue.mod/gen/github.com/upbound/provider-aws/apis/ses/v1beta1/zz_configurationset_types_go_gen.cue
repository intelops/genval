// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ses/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ConfigurationSetInitParameters: {
	// Whether messages that use the configuration set are required to use TLS. See below.
	deliveryOptions?: [...#DeliveryOptionsInitParameters] @go(DeliveryOptions,[]DeliveryOptionsInitParameters)

	// Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is false.
	reputationMetricsEnabled?: null | bool @go(ReputationMetricsEnabled,*bool)

	// Whether email sending is enabled or disabled for the configuration set. The default value is true.
	sendingEnabled?: null | bool @go(SendingEnabled,*bool)

	// Domain that is used to redirect email recipients to an Amazon SES-operated domain. See below. NOTE: This functionality is best effort.
	trackingOptions?: [...#TrackingOptionsInitParameters] @go(TrackingOptions,[]TrackingOptionsInitParameters)
}

#ConfigurationSetObservation: {
	// SES configuration set ARN.
	arn?: null | string @go(Arn,*string)

	// Whether messages that use the configuration set are required to use TLS. See below.
	deliveryOptions?: [...#DeliveryOptionsObservation] @go(DeliveryOptions,[]DeliveryOptionsObservation)

	// SES configuration set name.
	id?: null | string @go(ID,*string)

	// Date and time at which the reputation metrics for the configuration set were last reset. Resetting these metrics is known as a fresh start.
	lastFreshStart?: null | string @go(LastFreshStart,*string)

	// Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is false.
	reputationMetricsEnabled?: null | bool @go(ReputationMetricsEnabled,*bool)

	// Whether email sending is enabled or disabled for the configuration set. The default value is true.
	sendingEnabled?: null | bool @go(SendingEnabled,*bool)

	// Domain that is used to redirect email recipients to an Amazon SES-operated domain. See below. NOTE: This functionality is best effort.
	trackingOptions?: [...#TrackingOptionsObservation] @go(TrackingOptions,[]TrackingOptionsObservation)
}

#ConfigurationSetParameters: {
	// Whether messages that use the configuration set are required to use TLS. See below.
	// +kubebuilder:validation:Optional
	deliveryOptions?: [...#DeliveryOptionsParameters] @go(DeliveryOptions,[]DeliveryOptionsParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Whether or not Amazon SES publishes reputation metrics for the configuration set, such as bounce and complaint rates, to Amazon CloudWatch. The default value is false.
	// +kubebuilder:validation:Optional
	reputationMetricsEnabled?: null | bool @go(ReputationMetricsEnabled,*bool)

	// Whether email sending is enabled or disabled for the configuration set. The default value is true.
	// +kubebuilder:validation:Optional
	sendingEnabled?: null | bool @go(SendingEnabled,*bool)

	// Domain that is used to redirect email recipients to an Amazon SES-operated domain. See below. NOTE: This functionality is best effort.
	// +kubebuilder:validation:Optional
	trackingOptions?: [...#TrackingOptionsParameters] @go(TrackingOptions,[]TrackingOptionsParameters)
}

#DeliveryOptionsInitParameters: {
	// Whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is Require, messages are only delivered if a TLS connection can be established. If the value is Optional, messages can be delivered in plain text if a TLS connection can't be established. Valid values: Require or Optional. Defaults to Optional.
	tlsPolicy?: null | string @go(TLSPolicy,*string)
}

#DeliveryOptionsObservation: {
	// Whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is Require, messages are only delivered if a TLS connection can be established. If the value is Optional, messages can be delivered in plain text if a TLS connection can't be established. Valid values: Require or Optional. Defaults to Optional.
	tlsPolicy?: null | string @go(TLSPolicy,*string)
}

#DeliveryOptionsParameters: {
	// Whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is Require, messages are only delivered if a TLS connection can be established. If the value is Optional, messages can be delivered in plain text if a TLS connection can't be established. Valid values: Require or Optional. Defaults to Optional.
	// +kubebuilder:validation:Optional
	tlsPolicy?: null | string @go(TLSPolicy,*string)
}

#TrackingOptionsInitParameters: {
	// Custom subdomain that is used to redirect email recipients to the Amazon SES event tracking domain.
	customRedirectDomain?: null | string @go(CustomRedirectDomain,*string)
}

#TrackingOptionsObservation: {
	// Custom subdomain that is used to redirect email recipients to the Amazon SES event tracking domain.
	customRedirectDomain?: null | string @go(CustomRedirectDomain,*string)
}

#TrackingOptionsParameters: {
	// Custom subdomain that is used to redirect email recipients to the Amazon SES event tracking domain.
	// +kubebuilder:validation:Optional
	customRedirectDomain?: null | string @go(CustomRedirectDomain,*string)
}

// ConfigurationSetSpec defines the desired state of ConfigurationSet
#ConfigurationSetSpec: {
	v1.#ResourceSpec
	forProvider: #ConfigurationSetParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ConfigurationSetInitParameters @go(InitProvider)
}

// ConfigurationSetStatus defines the observed state of ConfigurationSet.
#ConfigurationSetStatus: {
	v1.#ResourceStatus
	atProvider?: #ConfigurationSetObservation @go(AtProvider)
}

// ConfigurationSet is the Schema for the ConfigurationSets API. Provides an SES configuration set
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConfigurationSet: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta      @go(ObjectMeta)
	spec:      #ConfigurationSetSpec   @go(Spec)
	status?:   #ConfigurationSetStatus @go(Status)
}

// ConfigurationSetList contains a list of ConfigurationSets
#ConfigurationSetList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ConfigurationSet] @go(Items,[]ConfigurationSet)
}
