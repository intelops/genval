// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ssoadmin/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ManagedPolicyAttachmentInitParameters: {
}

#ManagedPolicyAttachmentObservation: {
	// The Amazon Resource Names (ARNs) of the Managed Policy, Permission Set, and SSO Instance, separated by a comma (,).
	id?: null | string @go(ID,*string)

	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	instanceArn?: null | string @go(InstanceArn,*string)

	// The IAM managed policy Amazon Resource Name (ARN) to be attached to the Permission Set.
	managedPolicyArn?: null | string @go(ManagedPolicyArn,*string)

	// The name of the IAM Managed Policy.
	managedPolicyName?: null | string @go(ManagedPolicyName,*string)

	// The Amazon Resource Name (ARN) of the Permission Set.
	permissionSetArn?: null | string @go(PermissionSetArn,*string)
}

#ManagedPolicyAttachmentParameters: {
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	// +kubebuilder:validation:Required
	instanceArn?: null | string @go(InstanceArn,*string)

	// The IAM managed policy Amazon Resource Name (ARN) to be attached to the Permission Set.
	// +kubebuilder:validation:Required
	managedPolicyArn?: null | string @go(ManagedPolicyArn,*string)

	// The Amazon Resource Name (ARN) of the Permission Set.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ssoadmin/v1beta1.PermissionSet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	permissionSetArn?: null | string @go(PermissionSetArn,*string)

	// Reference to a PermissionSet in ssoadmin to populate permissionSetArn.
	// +kubebuilder:validation:Optional
	permissionSetArnRef?: null | v1.#Reference @go(PermissionSetArnRef,*v1.Reference)

	// Selector for a PermissionSet in ssoadmin to populate permissionSetArn.
	// +kubebuilder:validation:Optional
	permissionSetArnSelector?: null | v1.#Selector @go(PermissionSetArnSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ManagedPolicyAttachmentSpec defines the desired state of ManagedPolicyAttachment
#ManagedPolicyAttachmentSpec: {
	v1.#ResourceSpec
	forProvider: #ManagedPolicyAttachmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ManagedPolicyAttachmentInitParameters @go(InitProvider)
}

// ManagedPolicyAttachmentStatus defines the observed state of ManagedPolicyAttachment.
#ManagedPolicyAttachmentStatus: {
	v1.#ResourceStatus
	atProvider?: #ManagedPolicyAttachmentObservation @go(AtProvider)
}

// ManagedPolicyAttachment is the Schema for the ManagedPolicyAttachments API. Manages an IAM managed policy for a Single Sign-On (SSO) Permission Set
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ManagedPolicyAttachment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta             @go(ObjectMeta)
	spec:      #ManagedPolicyAttachmentSpec   @go(Spec)
	status?:   #ManagedPolicyAttachmentStatus @go(Status)
}

// ManagedPolicyAttachmentList contains a list of ManagedPolicyAttachments
#ManagedPolicyAttachmentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ManagedPolicyAttachment] @go(Items,[]ManagedPolicyAttachment)
}
