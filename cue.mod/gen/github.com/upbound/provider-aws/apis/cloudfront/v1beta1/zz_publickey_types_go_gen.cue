// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PublicKeyInitParameters: {
	// An optional comment about the public key.
	comment?: null | string @go(Comment,*string)

	// The name for the public key.
	name?: null | string @go(Name,*string)
}

#PublicKeyObservation: {
	// Internal value used by CloudFront to allow future updates to the public key configuration.
	callerReference?: null | string @go(CallerReference,*string)

	// An optional comment about the public key.
	comment?: null | string @go(Comment,*string)

	// The current version of the public key. For example: E2QWRUHAPOMQZL.
	etag?: null | string @go(Etag,*string)

	// The identifier for the public key. For example: K3D5EWEUDCCXON.
	id?: null | string @go(ID,*string)

	// The name for the public key.
	name?: null | string @go(Name,*string)
}

#PublicKeyParameters: {
	// An optional comment about the public key.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
	// +kubebuilder:validation:Optional
	encodedKeySecretRef: v1.#SecretKeySelector @go(EncodedKeySecretRef)

	// The name for the public key.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// PublicKeySpec defines the desired state of PublicKey
#PublicKeySpec: {
	v1.#ResourceSpec
	forProvider: #PublicKeyParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PublicKeyInitParameters @go(InitProvider)
}

// PublicKeyStatus defines the observed state of PublicKey.
#PublicKeyStatus: {
	v1.#ResourceStatus
	atProvider?: #PublicKeyObservation @go(AtProvider)
}

// PublicKey is the Schema for the PublicKeys API. Provides a CloudFront Public Key which you add to CloudFront to use with features like field-level encryption.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PublicKey: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.encodedKeySecretRef)",message="spec.forProvider.encodedKeySecretRef is a required parameter"
	spec:    #PublicKeySpec   @go(Spec)
	status?: #PublicKeyStatus @go(Status)
}

// PublicKeyList contains a list of PublicKeys
#PublicKeyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#PublicKey] @go(Items,[]PublicKey)
}
