// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ContentTypeProfileConfigInitParameters: {
	// Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
	contentTypeProfiles?: [...#ContentTypeProfilesInitParameters] @go(ContentTypeProfiles,[]ContentTypeProfilesInitParameters)

	// specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
	forwardWhenContentTypeIsUnknown?: null | bool @go(ForwardWhenContentTypeIsUnknown,*bool)
}

#ContentTypeProfileConfigObservation: {
	// Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
	contentTypeProfiles?: [...#ContentTypeProfilesObservation] @go(ContentTypeProfiles,[]ContentTypeProfilesObservation)

	// specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
	forwardWhenContentTypeIsUnknown?: null | bool @go(ForwardWhenContentTypeIsUnknown,*bool)
}

#ContentTypeProfileConfigParameters: {
	// Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
	// +kubebuilder:validation:Optional
	contentTypeProfiles: [...#ContentTypeProfilesParameters] @go(ContentTypeProfiles,[]ContentTypeProfilesParameters)

	// specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
	// +kubebuilder:validation:Optional
	forwardWhenContentTypeIsUnknown?: null | bool @go(ForwardWhenContentTypeIsUnknown,*bool)
}

#ContentTypeProfilesInitParameters: {
	items?: [...#ContentTypeProfilesItemsInitParameters] @go(Items,[]ContentTypeProfilesItemsInitParameters)
}

#ContentTypeProfilesItemsInitParameters: {
	// he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.
	contentType?: null | string @go(ContentType,*string)

	// The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.
	format?: null | string @go(Format,*string)

	// The profile ID for a field-level encryption content type-profile mapping.
	profileId?: null | string @go(ProfileID,*string)
}

#ContentTypeProfilesItemsObservation: {
	// he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.
	contentType?: null | string @go(ContentType,*string)

	// The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.
	format?: null | string @go(Format,*string)

	// The profile ID for a field-level encryption content type-profile mapping.
	profileId?: null | string @go(ProfileID,*string)
}

#ContentTypeProfilesItemsParameters: {
	// he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.
	// +kubebuilder:validation:Optional
	contentType?: null | string @go(ContentType,*string)

	// The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.
	// +kubebuilder:validation:Optional
	format?: null | string @go(Format,*string)

	// The profile ID for a field-level encryption content type-profile mapping.
	// +kubebuilder:validation:Optional
	profileId?: null | string @go(ProfileID,*string)
}

#ContentTypeProfilesObservation: {
	items?: [...#ContentTypeProfilesItemsObservation] @go(Items,[]ContentTypeProfilesItemsObservation)
}

#ContentTypeProfilesParameters: {
	// +kubebuilder:validation:Optional
	items: [...#ContentTypeProfilesItemsParameters] @go(Items,[]ContentTypeProfilesItemsParameters)
}

#FieldLevelEncryptionConfigInitParameters: {
	// An optional comment about the Field Level Encryption Config.
	comment?: null | string @go(Comment,*string)

	// Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
	contentTypeProfileConfig?: [...#ContentTypeProfileConfigInitParameters] @go(ContentTypeProfileConfig,[]ContentTypeProfileConfigInitParameters)

	// Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
	queryArgProfileConfig?: [...#QueryArgProfileConfigInitParameters] @go(QueryArgProfileConfig,[]QueryArgProfileConfigInitParameters)
}

#FieldLevelEncryptionConfigObservation: {
	// Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.
	callerReference?: null | string @go(CallerReference,*string)

	// An optional comment about the Field Level Encryption Config.
	comment?: null | string @go(Comment,*string)

	// Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
	contentTypeProfileConfig?: [...#ContentTypeProfileConfigObservation] @go(ContentTypeProfileConfig,[]ContentTypeProfileConfigObservation)

	// The current version of the Field Level Encryption Config. For example: E2QWRUHAPOMQZL.
	etag?: null | string @go(Etag,*string)

	// The identifier for the Field Level Encryption Config. For example: K3D5EWEUDCCXON.
	id?: null | string @go(ID,*string)

	// Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
	queryArgProfileConfig?: [...#QueryArgProfileConfigObservation] @go(QueryArgProfileConfig,[]QueryArgProfileConfigObservation)
}

#FieldLevelEncryptionConfigParameters: {
	// An optional comment about the Field Level Encryption Config.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
	// +kubebuilder:validation:Optional
	contentTypeProfileConfig?: [...#ContentTypeProfileConfigParameters] @go(ContentTypeProfileConfig,[]ContentTypeProfileConfigParameters)

	// Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
	// +kubebuilder:validation:Optional
	queryArgProfileConfig?: [...#QueryArgProfileConfigParameters] @go(QueryArgProfileConfig,[]QueryArgProfileConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#QueryArgProfileConfigInitParameters: {
	// Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
	forwardWhenQueryArgProfileIsUnknown?: null | bool @go(ForwardWhenQueryArgProfileIsUnknown,*bool)

	// Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
	queryArgProfiles?: [...#QueryArgProfilesInitParameters] @go(QueryArgProfiles,[]QueryArgProfilesInitParameters)
}

#QueryArgProfileConfigObservation: {
	// Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
	forwardWhenQueryArgProfileIsUnknown?: null | bool @go(ForwardWhenQueryArgProfileIsUnknown,*bool)

	// Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
	queryArgProfiles?: [...#QueryArgProfilesObservation] @go(QueryArgProfiles,[]QueryArgProfilesObservation)
}

#QueryArgProfileConfigParameters: {
	// Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
	// +kubebuilder:validation:Optional
	forwardWhenQueryArgProfileIsUnknown?: null | bool @go(ForwardWhenQueryArgProfileIsUnknown,*bool)

	// Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
	// +kubebuilder:validation:Optional
	queryArgProfiles?: [...#QueryArgProfilesParameters] @go(QueryArgProfiles,[]QueryArgProfilesParameters)
}

#QueryArgProfilesInitParameters: {
	items?: [...#QueryArgProfilesItemsInitParameters] @go(Items,[]QueryArgProfilesItemsInitParameters)
}

#QueryArgProfilesItemsInitParameters: {
	// Query argument for field-level encryption query argument-profile mapping.
	queryArg?: null | string @go(QueryArg,*string)
}

#QueryArgProfilesItemsObservation: {
	// The profile ID for a field-level encryption content type-profile mapping.
	profileId?: null | string @go(ProfileID,*string)

	// Query argument for field-level encryption query argument-profile mapping.
	queryArg?: null | string @go(QueryArg,*string)
}

#QueryArgProfilesItemsParameters: {
	// The profile ID for a field-level encryption content type-profile mapping.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudfront/v1beta1.FieldLevelEncryptionProfile
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	profileId?: null | string @go(ProfileID,*string)

	// Reference to a FieldLevelEncryptionProfile in cloudfront to populate profileId.
	// +kubebuilder:validation:Optional
	profileIdRef?: null | v1.#Reference @go(ProfileIDRef,*v1.Reference)

	// Selector for a FieldLevelEncryptionProfile in cloudfront to populate profileId.
	// +kubebuilder:validation:Optional
	profileIdSelector?: null | v1.#Selector @go(ProfileIDSelector,*v1.Selector)

	// Query argument for field-level encryption query argument-profile mapping.
	// +kubebuilder:validation:Optional
	queryArg?: null | string @go(QueryArg,*string)
}

#QueryArgProfilesObservation: {
	items?: [...#QueryArgProfilesItemsObservation] @go(Items,[]QueryArgProfilesItemsObservation)
}

#QueryArgProfilesParameters: {
	// +kubebuilder:validation:Optional
	items?: [...#QueryArgProfilesItemsParameters] @go(Items,[]QueryArgProfilesItemsParameters)
}

// FieldLevelEncryptionConfigSpec defines the desired state of FieldLevelEncryptionConfig
#FieldLevelEncryptionConfigSpec: {
	v1.#ResourceSpec
	forProvider: #FieldLevelEncryptionConfigParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FieldLevelEncryptionConfigInitParameters @go(InitProvider)
}

// FieldLevelEncryptionConfigStatus defines the observed state of FieldLevelEncryptionConfig.
#FieldLevelEncryptionConfigStatus: {
	v1.#ResourceStatus
	atProvider?: #FieldLevelEncryptionConfigObservation @go(AtProvider)
}

// FieldLevelEncryptionConfig is the Schema for the FieldLevelEncryptionConfigs API. Provides a CloudFront Field-level Encryption Config resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#FieldLevelEncryptionConfig: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.contentTypeProfileConfig) || (has(self.initProvider) && has(self.initProvider.contentTypeProfileConfig))",message="spec.forProvider.contentTypeProfileConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.queryArgProfileConfig) || (has(self.initProvider) && has(self.initProvider.queryArgProfileConfig))",message="spec.forProvider.queryArgProfileConfig is a required parameter"
	spec:    #FieldLevelEncryptionConfigSpec   @go(Spec)
	status?: #FieldLevelEncryptionConfigStatus @go(Status)
}

// FieldLevelEncryptionConfigList contains a list of FieldLevelEncryptionConfigs
#FieldLevelEncryptionConfigList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#FieldLevelEncryptionConfig] @go(Items,[]FieldLevelEncryptionConfig)
}
