// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#MonitoringSubscriptionInitParameters: {
	// A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
	monitoringSubscription?: [...#MonitoringSubscriptionMonitoringSubscriptionInitParameters] @go(MonitoringSubscription,[]MonitoringSubscriptionMonitoringSubscriptionInitParameters)
}

#MonitoringSubscriptionMonitoringSubscriptionInitParameters: {
	// A subscription configuration for additional CloudWatch metrics. See below.
	realtimeMetricsSubscriptionConfig?: [...#RealtimeMetricsSubscriptionConfigInitParameters] @go(RealtimeMetricsSubscriptionConfig,[]RealtimeMetricsSubscriptionConfigInitParameters)
}

#MonitoringSubscriptionMonitoringSubscriptionObservation: {
	// A subscription configuration for additional CloudWatch metrics. See below.
	realtimeMetricsSubscriptionConfig?: [...#RealtimeMetricsSubscriptionConfigObservation] @go(RealtimeMetricsSubscriptionConfig,[]RealtimeMetricsSubscriptionConfigObservation)
}

#MonitoringSubscriptionMonitoringSubscriptionParameters: {
	// A subscription configuration for additional CloudWatch metrics. See below.
	// +kubebuilder:validation:Optional
	realtimeMetricsSubscriptionConfig: [...#RealtimeMetricsSubscriptionConfigParameters] @go(RealtimeMetricsSubscriptionConfig,[]RealtimeMetricsSubscriptionConfigParameters)
}

#MonitoringSubscriptionObservation: {
	// The ID of the distribution that you are enabling metrics for.
	distributionId?: null | string @go(DistributionID,*string)

	// The ID of the CloudFront monitoring subscription, which corresponds to the distribution_id.
	id?: null | string @go(ID,*string)

	// A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
	monitoringSubscription?: [...#MonitoringSubscriptionMonitoringSubscriptionObservation] @go(MonitoringSubscription,[]MonitoringSubscriptionMonitoringSubscriptionObservation)
}

#MonitoringSubscriptionParameters: {
	// The ID of the distribution that you are enabling metrics for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudfront/v1beta1.Distribution
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	distributionId?: null | string @go(DistributionID,*string)

	// Reference to a Distribution in cloudfront to populate distributionId.
	// +kubebuilder:validation:Optional
	distributionIdRef?: null | v1.#Reference @go(DistributionIDRef,*v1.Reference)

	// Selector for a Distribution in cloudfront to populate distributionId.
	// +kubebuilder:validation:Optional
	distributionIdSelector?: null | v1.#Selector @go(DistributionIDSelector,*v1.Selector)

	// A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
	// +kubebuilder:validation:Optional
	monitoringSubscription?: [...#MonitoringSubscriptionMonitoringSubscriptionParameters] @go(MonitoringSubscription,[]MonitoringSubscriptionMonitoringSubscriptionParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#RealtimeMetricsSubscriptionConfigInitParameters: {
	// A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are Enabled and Disabled. See below.
	realtimeMetricsSubscriptionStatus?: null | string @go(RealtimeMetricsSubscriptionStatus,*string)
}

#RealtimeMetricsSubscriptionConfigObservation: {
	// A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are Enabled and Disabled. See below.
	realtimeMetricsSubscriptionStatus?: null | string @go(RealtimeMetricsSubscriptionStatus,*string)
}

#RealtimeMetricsSubscriptionConfigParameters: {
	// A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are Enabled and Disabled. See below.
	// +kubebuilder:validation:Optional
	realtimeMetricsSubscriptionStatus?: null | string @go(RealtimeMetricsSubscriptionStatus,*string)
}

// MonitoringSubscriptionSpec defines the desired state of MonitoringSubscription
#MonitoringSubscriptionSpec: {
	v1.#ResourceSpec
	forProvider: #MonitoringSubscriptionParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MonitoringSubscriptionInitParameters @go(InitProvider)
}

// MonitoringSubscriptionStatus defines the observed state of MonitoringSubscription.
#MonitoringSubscriptionStatus: {
	v1.#ResourceStatus
	atProvider?: #MonitoringSubscriptionObservation @go(AtProvider)
}

// MonitoringSubscription is the Schema for the MonitoringSubscriptions API. Provides a CloudFront monitoring subscription resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#MonitoringSubscription: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.monitoringSubscription) || (has(self.initProvider) && has(self.initProvider.monitoringSubscription))",message="spec.forProvider.monitoringSubscription is a required parameter"
	spec:    #MonitoringSubscriptionSpec   @go(Spec)
	status?: #MonitoringSubscriptionStatus @go(Status)
}

// MonitoringSubscriptionList contains a list of MonitoringSubscriptions
#MonitoringSubscriptionList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#MonitoringSubscription] @go(Items,[]MonitoringSubscription)
}
