// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudsearch/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#DomainInitParameters: {
	// Domain endpoint options. Documented below.
	endpointOptions?: [...#EndpointOptionsInitParameters] @go(EndpointOptions,[]EndpointOptionsInitParameters)

	// The index fields for documents added to the domain. Documented below.
	indexField?: [...#IndexFieldInitParameters] @go(IndexField,[]IndexFieldInitParameters)

	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	multiAz?: null | bool @go(MultiAz,*bool)

	// Domain scaling parameters. Documented below.
	scalingParameters?: [...#ScalingParametersInitParameters] @go(ScalingParameters,[]ScalingParametersInitParameters)
}

#DomainObservation: {
	// The domain's ARN.
	arn?: null | string @go(Arn,*string)

	// The service endpoint for updating documents in a search domain.
	documentServiceEndpoint?: null | string @go(DocumentServiceEndpoint,*string)

	// An internally generated unique identifier for the domain.
	domainId?: null | string @go(DomainID,*string)

	// Domain endpoint options. Documented below.
	endpointOptions?: [...#EndpointOptionsObservation] @go(EndpointOptions,[]EndpointOptionsObservation)
	id?: null | string @go(ID,*string)

	// The index fields for documents added to the domain. Documented below.
	indexField?: [...#IndexFieldObservation] @go(IndexField,[]IndexFieldObservation)

	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	multiAz?: null | bool @go(MultiAz,*bool)

	// Domain scaling parameters. Documented below.
	scalingParameters?: [...#ScalingParametersObservation] @go(ScalingParameters,[]ScalingParametersObservation)

	// The service endpoint for requesting search results from a search domain.
	searchServiceEndpoint?: null | string @go(SearchServiceEndpoint,*string)
}

#DomainParameters: {
	// Domain endpoint options. Documented below.
	// +kubebuilder:validation:Optional
	endpointOptions?: [...#EndpointOptionsParameters] @go(EndpointOptions,[]EndpointOptionsParameters)

	// The index fields for documents added to the domain. Documented below.
	// +kubebuilder:validation:Optional
	indexField?: [...#IndexFieldParameters] @go(IndexField,[]IndexFieldParameters)

	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	// +kubebuilder:validation:Optional
	multiAz?: null | bool @go(MultiAz,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Domain scaling parameters. Documented below.
	// +kubebuilder:validation:Optional
	scalingParameters?: [...#ScalingParametersParameters] @go(ScalingParameters,[]ScalingParametersParameters)
}

#EndpointOptionsInitParameters: {
	// Enables or disables the requirement that all requests to the domain arrive over HTTPS.
	enforceHttps?: null | bool @go(EnforceHTTPS,*bool)

	// The minimum required TLS version. See the AWS documentation for valid values.
	tlsSecurityPolicy?: null | string @go(TLSSecurityPolicy,*string)
}

#EndpointOptionsObservation: {
	// Enables or disables the requirement that all requests to the domain arrive over HTTPS.
	enforceHttps?: null | bool @go(EnforceHTTPS,*bool)

	// The minimum required TLS version. See the AWS documentation for valid values.
	tlsSecurityPolicy?: null | string @go(TLSSecurityPolicy,*string)
}

#EndpointOptionsParameters: {
	// Enables or disables the requirement that all requests to the domain arrive over HTTPS.
	// +kubebuilder:validation:Optional
	enforceHttps?: null | bool @go(EnforceHTTPS,*bool)

	// The minimum required TLS version. See the AWS documentation for valid values.
	// +kubebuilder:validation:Optional
	tlsSecurityPolicy?: null | string @go(TLSSecurityPolicy,*string)
}

#IndexFieldInitParameters: {
	// The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
	analysisScheme?: null | string @go(AnalysisScheme,*string)

	// The default value for the field. This value is used when no value is specified for the field in the document data.
	defaultValue?: null | string @go(DefaultValue,*string)

	// You can get facet information by enabling this.
	facet?: null | bool @go(Facet,*bool)

	// You can highlight information.
	highlight?: null | bool @go(Highlight,*bool)

	// The name of the CloudSearch domain.
	name?: null | string @go(Name,*string)

	// You can enable returning the value of all searchable fields.
	return?: null | bool @go(Return,*bool)

	// You can set whether this index should be searchable or not.
	search?: null | bool @go(Search,*bool)

	// You can enable the property to be sortable.
	sort?: null | bool @go(Sort,*bool)

	// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
	sourceFields?: null | string @go(SourceFields,*string)

	// The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.
	type?: null | string @go(Type,*string)
}

#IndexFieldObservation: {
	// The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
	analysisScheme?: null | string @go(AnalysisScheme,*string)

	// The default value for the field. This value is used when no value is specified for the field in the document data.
	defaultValue?: null | string @go(DefaultValue,*string)

	// You can get facet information by enabling this.
	facet?: null | bool @go(Facet,*bool)

	// You can highlight information.
	highlight?: null | bool @go(Highlight,*bool)

	// The name of the CloudSearch domain.
	name?: null | string @go(Name,*string)

	// You can enable returning the value of all searchable fields.
	return?: null | bool @go(Return,*bool)

	// You can set whether this index should be searchable or not.
	search?: null | bool @go(Search,*bool)

	// You can enable the property to be sortable.
	sort?: null | bool @go(Sort,*bool)

	// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
	sourceFields?: null | string @go(SourceFields,*string)

	// The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.
	type?: null | string @go(Type,*string)
}

#IndexFieldParameters: {
	// The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
	// +kubebuilder:validation:Optional
	analysisScheme?: null | string @go(AnalysisScheme,*string)

	// The default value for the field. This value is used when no value is specified for the field in the document data.
	// +kubebuilder:validation:Optional
	defaultValue?: null | string @go(DefaultValue,*string)

	// You can get facet information by enabling this.
	// +kubebuilder:validation:Optional
	facet?: null | bool @go(Facet,*bool)

	// You can highlight information.
	// +kubebuilder:validation:Optional
	highlight?: null | bool @go(Highlight,*bool)

	// The name of the CloudSearch domain.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// You can enable returning the value of all searchable fields.
	// +kubebuilder:validation:Optional
	return?: null | bool @go(Return,*bool)

	// You can set whether this index should be searchable or not.
	// +kubebuilder:validation:Optional
	search?: null | bool @go(Search,*bool)

	// You can enable the property to be sortable.
	// +kubebuilder:validation:Optional
	sort?: null | bool @go(Sort,*bool)

	// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
	// +kubebuilder:validation:Optional
	sourceFields?: null | string @go(SourceFields,*string)

	// The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#ScalingParametersInitParameters: {
	// The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.
	desiredInstanceType?: null | string @go(DesiredInstanceType,*string)

	// The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.
	desiredPartitionCount?: null | float64 @go(DesiredPartitionCount,*float64)

	// The number of replicas you want to preconfigure for each index partition.
	desiredReplicationCount?: null | float64 @go(DesiredReplicationCount,*float64)
}

#ScalingParametersObservation: {
	// The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.
	desiredInstanceType?: null | string @go(DesiredInstanceType,*string)

	// The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.
	desiredPartitionCount?: null | float64 @go(DesiredPartitionCount,*float64)

	// The number of replicas you want to preconfigure for each index partition.
	desiredReplicationCount?: null | float64 @go(DesiredReplicationCount,*float64)
}

#ScalingParametersParameters: {
	// The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.
	// +kubebuilder:validation:Optional
	desiredInstanceType?: null | string @go(DesiredInstanceType,*string)

	// The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.
	// +kubebuilder:validation:Optional
	desiredPartitionCount?: null | float64 @go(DesiredPartitionCount,*float64)

	// The number of replicas you want to preconfigure for each index partition.
	// +kubebuilder:validation:Optional
	desiredReplicationCount?: null | float64 @go(DesiredReplicationCount,*float64)
}

// DomainSpec defines the desired state of Domain
#DomainSpec: {
	v1.#ResourceSpec
	forProvider: #DomainParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DomainInitParameters @go(InitProvider)
}

// DomainStatus defines the observed state of Domain.
#DomainStatus: {
	v1.#ResourceStatus
	atProvider?: #DomainObservation @go(AtProvider)
}

// Domain is the Schema for the Domains API. Provides an CloudSearch domain resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Domain: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #DomainSpec        @go(Spec)
	status?:   #DomainStatus      @go(Status)
}

// DomainList contains a list of Domains
#DomainList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Domain] @go(Items,[]Domain)
}
