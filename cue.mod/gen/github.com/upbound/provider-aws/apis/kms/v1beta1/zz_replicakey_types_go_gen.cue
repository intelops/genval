// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kms/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ReplicaKeyInitParameters: {
	// A flag to indicate whether to bypass the key policy lockout safety check.
	// Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
	// For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
	// The default value is false.
	bypassPolicyLockoutSafetyCheck?: null | bool @go(BypassPolicyLockoutSafetyCheck,*bool)

	// The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
	// If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
	deletionWindowInDays?: null | float64 @go(DeletionWindowInDays,*float64)

	// A description of the KMS key.
	description?: null | string @go(Description,*string)

	// Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is true.
	enabled?: null | bool @go(Enabled,*bool)

	// The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the default key policy to the KMS key.
	policy?: null | string @go(Policy,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ReplicaKeyObservation: {
	// The Amazon Resource Name (ARN) of the replica key. The key ARNs of related multi-Region keys differ only in the Region value.
	arn?: null | string @go(Arn,*string)

	// A flag to indicate whether to bypass the key policy lockout safety check.
	// Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
	// For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
	// The default value is false.
	bypassPolicyLockoutSafetyCheck?: null | bool @go(BypassPolicyLockoutSafetyCheck,*bool)

	// The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
	// If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
	deletionWindowInDays?: null | float64 @go(DeletionWindowInDays,*float64)

	// A description of the KMS key.
	description?: null | string @go(Description,*string)

	// Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is true.
	enabled?: null | bool   @go(Enabled,*bool)
	id?:      null | string @go(ID,*string)

	// The key ID of the replica key. Related multi-Region keys have the same key ID.
	keyId?: null | string @go(KeyID,*string)

	// A Boolean value that specifies whether key rotation is enabled. This is a shared property of multi-Region keys.
	keyRotationEnabled?: null | bool @go(KeyRotationEnabled,*bool)

	// The type of key material in the KMS key. This is a shared property of multi-Region keys.
	keySpec?: null | string @go(KeySpec,*string)

	// The cryptographic operations for which you can use the KMS key. This is a shared property of multi-Region keys.
	keyUsage?: null | string @go(KeyUsage,*string)

	// The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the default key policy to the KMS key.
	policy?: null | string @go(Policy,*string)

	// The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
	primaryKeyArn?: null | string @go(PrimaryKeyArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ReplicaKeyParameters: {
	// A flag to indicate whether to bypass the key policy lockout safety check.
	// Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
	// For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
	// The default value is false.
	// +kubebuilder:validation:Optional
	bypassPolicyLockoutSafetyCheck?: null | bool @go(BypassPolicyLockoutSafetyCheck,*bool)

	// The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
	// If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
	// +kubebuilder:validation:Optional
	deletionWindowInDays?: null | float64 @go(DeletionWindowInDays,*float64)

	// A description of the KMS key.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the default key policy to the KMS key.
	// +kubebuilder:validation:Optional
	policy?: null | string @go(Policy,*string)

	// The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
	// +crossplane:generate:reference:type=Key
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	primaryKeyArn?: null | string @go(PrimaryKeyArn,*string)

	// Reference to a Key to populate primaryKeyArn.
	// +kubebuilder:validation:Optional
	primaryKeyArnRef?: null | v1.#Reference @go(PrimaryKeyArnRef,*v1.Reference)

	// Selector for a Key to populate primaryKeyArn.
	// +kubebuilder:validation:Optional
	primaryKeyArnSelector?: null | v1.#Selector @go(PrimaryKeyArnSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ReplicaKeySpec defines the desired state of ReplicaKey
#ReplicaKeySpec: {
	v1.#ResourceSpec
	forProvider: #ReplicaKeyParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ReplicaKeyInitParameters @go(InitProvider)
}

// ReplicaKeyStatus defines the observed state of ReplicaKey.
#ReplicaKeyStatus: {
	v1.#ResourceStatus
	atProvider?: #ReplicaKeyObservation @go(AtProvider)
}

// ReplicaKey is the Schema for the ReplicaKeys API. Manages a KMS multi-Region replica key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ReplicaKey: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #ReplicaKeySpec    @go(Spec)
	status?:   #ReplicaKeyStatus  @go(Status)
}

// ReplicaKeyList contains a list of ReplicaKeys
#ReplicaKeyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ReplicaKey] @go(Items,[]ReplicaKey)
}
