// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/redshift/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AuthenticationProfileInitParameters: {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	authenticationProfileContent?: null | string @go(AuthenticationProfileContent,*string)
}

#AuthenticationProfileObservation: {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	authenticationProfileContent?: null | string @go(AuthenticationProfileContent,*string)

	// The name of the authentication profile.
	id?: null | string @go(ID,*string)
}

#AuthenticationProfileParameters: {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	// +kubebuilder:validation:Optional
	authenticationProfileContent?: null | string @go(AuthenticationProfileContent,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// AuthenticationProfileSpec defines the desired state of AuthenticationProfile
#AuthenticationProfileSpec: {
	v1.#ResourceSpec
	forProvider: #AuthenticationProfileParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AuthenticationProfileInitParameters @go(InitProvider)
}

// AuthenticationProfileStatus defines the observed state of AuthenticationProfile.
#AuthenticationProfileStatus: {
	v1.#ResourceStatus
	atProvider?: #AuthenticationProfileObservation @go(AtProvider)
}

// AuthenticationProfile is the Schema for the AuthenticationProfiles API. Creates a Redshift authentication profile
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AuthenticationProfile: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authenticationProfileContent) || (has(self.initProvider) && has(self.initProvider.authenticationProfileContent))",message="spec.forProvider.authenticationProfileContent is a required parameter"
	spec:    #AuthenticationProfileSpec   @go(Spec)
	status?: #AuthenticationProfileStatus @go(Status)
}

// AuthenticationProfileList contains a list of AuthenticationProfiles
#AuthenticationProfileList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#AuthenticationProfile] @go(Items,[]AuthenticationProfile)
}
