// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cognitoidp/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AccountTakeoverRiskConfigurationInitParameters: {
	// Account takeover risk configuration actions. See details below.
	actions?: [...#ActionsInitParameters] @go(Actions,[]ActionsInitParameters)

	// The notify configuration used to construct email notifications. See details below.
	notifyConfiguration?: [...#NotifyConfigurationInitParameters] @go(NotifyConfiguration,[]NotifyConfigurationInitParameters)
}

#AccountTakeoverRiskConfigurationObservation: {
	// Account takeover risk configuration actions. See details below.
	actions?: [...#ActionsObservation] @go(Actions,[]ActionsObservation)

	// The notify configuration used to construct email notifications. See details below.
	notifyConfiguration?: [...#NotifyConfigurationObservation] @go(NotifyConfiguration,[]NotifyConfigurationObservation)
}

#AccountTakeoverRiskConfigurationParameters: {
	// Account takeover risk configuration actions. See details below.
	// +kubebuilder:validation:Optional
	actions: [...#ActionsParameters] @go(Actions,[]ActionsParameters)

	// The notify configuration used to construct email notifications. See details below.
	// +kubebuilder:validation:Optional
	notifyConfiguration: [...#NotifyConfigurationParameters] @go(NotifyConfiguration,[]NotifyConfigurationParameters)
}

#ActionsInitParameters: {
	// Action to take for a high risk. See action block below.
	highAction?: [...#HighActionInitParameters] @go(HighAction,[]HighActionInitParameters)

	// Action to take for a low risk. See action block below.
	lowAction?: [...#LowActionInitParameters] @go(LowAction,[]LowActionInitParameters)

	// Action to take for a medium risk. See action block below.
	mediumAction?: [...#MediumActionInitParameters] @go(MediumAction,[]MediumActionInitParameters)
}

#ActionsObservation: {
	// Action to take for a high risk. See action block below.
	highAction?: [...#HighActionObservation] @go(HighAction,[]HighActionObservation)

	// Action to take for a low risk. See action block below.
	lowAction?: [...#LowActionObservation] @go(LowAction,[]LowActionObservation)

	// Action to take for a medium risk. See action block below.
	mediumAction?: [...#MediumActionObservation] @go(MediumAction,[]MediumActionObservation)
}

#ActionsParameters: {
	// Action to take for a high risk. See action block below.
	// +kubebuilder:validation:Optional
	highAction?: [...#HighActionParameters] @go(HighAction,[]HighActionParameters)

	// Action to take for a low risk. See action block below.
	// +kubebuilder:validation:Optional
	lowAction?: [...#LowActionParameters] @go(LowAction,[]LowActionParameters)

	// Action to take for a medium risk. See action block below.
	// +kubebuilder:validation:Optional
	mediumAction?: [...#MediumActionParameters] @go(MediumAction,[]MediumActionParameters)
}

#BlockEmailInitParameters: {
	// The email HTML body.
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	subject?: null | string @go(Subject,*string)

	// The email text body.
	textBody?: null | string @go(TextBody,*string)
}

#BlockEmailObservation: {
	// The email HTML body.
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	subject?: null | string @go(Subject,*string)

	// The email text body.
	textBody?: null | string @go(TextBody,*string)
}

#BlockEmailParameters: {
	// The email HTML body.
	// +kubebuilder:validation:Optional
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	// +kubebuilder:validation:Optional
	subject?: null | string @go(Subject,*string)

	// The email text body.
	// +kubebuilder:validation:Optional
	textBody?: null | string @go(TextBody,*string)
}

#CompromisedCredentialsRiskConfigurationActionsInitParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)
}

#CompromisedCredentialsRiskConfigurationActionsObservation: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)
}

#CompromisedCredentialsRiskConfigurationActionsParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	// +kubebuilder:validation:Optional
	eventAction?: null | string @go(EventAction,*string)
}

#CompromisedCredentialsRiskConfigurationInitParameters: {
	// The compromised credentials risk configuration actions. See details below.
	actions?: [...#CompromisedCredentialsRiskConfigurationActionsInitParameters] @go(Actions,[]CompromisedCredentialsRiskConfigurationActionsInitParameters)

	// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.
	eventFilter?: [...null | string] @go(EventFilter,[]*string)
}

#CompromisedCredentialsRiskConfigurationObservation: {
	// The compromised credentials risk configuration actions. See details below.
	actions?: [...#CompromisedCredentialsRiskConfigurationActionsObservation] @go(Actions,[]CompromisedCredentialsRiskConfigurationActionsObservation)

	// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.
	eventFilter?: [...null | string] @go(EventFilter,[]*string)
}

#CompromisedCredentialsRiskConfigurationParameters: {
	// The compromised credentials risk configuration actions. See details below.
	// +kubebuilder:validation:Optional
	actions: [...#CompromisedCredentialsRiskConfigurationActionsParameters] @go(Actions,[]CompromisedCredentialsRiskConfigurationActionsParameters)

	// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.
	// +kubebuilder:validation:Optional
	eventFilter?: [...null | string] @go(EventFilter,[]*string)
}

#HighActionInitParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	notify?: null | bool @go(Notify,*bool)
}

#HighActionObservation: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	notify?: null | bool @go(Notify,*bool)
}

#HighActionParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	// +kubebuilder:validation:Optional
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	// +kubebuilder:validation:Optional
	notify?: null | bool @go(Notify,*bool)
}

#LowActionInitParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	notify?: null | bool @go(Notify,*bool)
}

#LowActionObservation: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	notify?: null | bool @go(Notify,*bool)
}

#LowActionParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	// +kubebuilder:validation:Optional
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	// +kubebuilder:validation:Optional
	notify?: null | bool @go(Notify,*bool)
}

#MediumActionInitParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	notify?: null | bool @go(Notify,*bool)
}

#MediumActionObservation: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	notify?: null | bool @go(Notify,*bool)
}

#MediumActionParameters: {
	// The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.
	// +kubebuilder:validation:Optional
	eventAction?: null | string @go(EventAction,*string)

	// Whether to send a notification.
	// +kubebuilder:validation:Optional
	notify?: null | bool @go(Notify,*bool)
}

#MfaEmailInitParameters: {
	// The email HTML body.
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	subject?: null | string @go(Subject,*string)

	// The email text body.
	textBody?: null | string @go(TextBody,*string)
}

#MfaEmailObservation: {
	// The email HTML body.
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	subject?: null | string @go(Subject,*string)

	// The email text body.
	textBody?: null | string @go(TextBody,*string)
}

#MfaEmailParameters: {
	// The email HTML body.
	// +kubebuilder:validation:Optional
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	// +kubebuilder:validation:Optional
	subject?: null | string @go(Subject,*string)

	// The email text body.
	// +kubebuilder:validation:Optional
	textBody?: null | string @go(TextBody,*string)
}

#NoActionEmailInitParameters: {
	// The email HTML body.
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	subject?: null | string @go(Subject,*string)

	// The email text body.
	textBody?: null | string @go(TextBody,*string)
}

#NoActionEmailObservation: {
	// The email HTML body.
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	subject?: null | string @go(Subject,*string)

	// The email text body.
	textBody?: null | string @go(TextBody,*string)
}

#NoActionEmailParameters: {
	// The email HTML body.
	// +kubebuilder:validation:Optional
	htmlBody?: null | string @go(HTMLBody,*string)

	// The email subject.
	// +kubebuilder:validation:Optional
	subject?: null | string @go(Subject,*string)

	// The email text body.
	// +kubebuilder:validation:Optional
	textBody?: null | string @go(TextBody,*string)
}

#NotifyConfigurationInitParameters: {
	// Email template used when a detected risk event is blocked. See notify email type below.
	blockEmail?: [...#BlockEmailInitParameters] @go(BlockEmail,[]BlockEmailInitParameters)

	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	from?: null | string @go(From,*string)

	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
	mfaEmail?: [...#MfaEmailInitParameters] @go(MfaEmail,[]MfaEmailInitParameters)

	// The email template used when a detected risk event is allowed. See notify email type below.
	noActionEmail?: [...#NoActionEmailInitParameters] @go(NoActionEmail,[]NoActionEmailInitParameters)

	// The destination to which the receiver of an email should reply to.
	replyTo?: null | string @go(ReplyTo,*string)

	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
	sourceArn?: null | string @go(SourceArn,*string)
}

#NotifyConfigurationObservation: {
	// Email template used when a detected risk event is blocked. See notify email type below.
	blockEmail?: [...#BlockEmailObservation] @go(BlockEmail,[]BlockEmailObservation)

	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	from?: null | string @go(From,*string)

	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
	mfaEmail?: [...#MfaEmailObservation] @go(MfaEmail,[]MfaEmailObservation)

	// The email template used when a detected risk event is allowed. See notify email type below.
	noActionEmail?: [...#NoActionEmailObservation] @go(NoActionEmail,[]NoActionEmailObservation)

	// The destination to which the receiver of an email should reply to.
	replyTo?: null | string @go(ReplyTo,*string)

	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
	sourceArn?: null | string @go(SourceArn,*string)
}

#NotifyConfigurationParameters: {
	// Email template used when a detected risk event is blocked. See notify email type below.
	// +kubebuilder:validation:Optional
	blockEmail?: [...#BlockEmailParameters] @go(BlockEmail,[]BlockEmailParameters)

	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	// +kubebuilder:validation:Optional
	from?: null | string @go(From,*string)

	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
	// +kubebuilder:validation:Optional
	mfaEmail?: [...#MfaEmailParameters] @go(MfaEmail,[]MfaEmailParameters)

	// The email template used when a detected risk event is allowed. See notify email type below.
	// +kubebuilder:validation:Optional
	noActionEmail?: [...#NoActionEmailParameters] @go(NoActionEmail,[]NoActionEmailParameters)

	// The destination to which the receiver of an email should reply to.
	// +kubebuilder:validation:Optional
	replyTo?: null | string @go(ReplyTo,*string)

	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
	// +kubebuilder:validation:Optional
	sourceArn?: null | string @go(SourceArn,*string)
}

#RiskConfigurationInitParameters: {
	// The account takeover risk configuration. See details below.
	accountTakeoverRiskConfiguration?: [...#AccountTakeoverRiskConfigurationInitParameters] @go(AccountTakeoverRiskConfiguration,[]AccountTakeoverRiskConfigurationInitParameters)

	// The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
	clientId?: null | string @go(ClientID,*string)

	// The compromised credentials risk configuration. See details below.
	compromisedCredentialsRiskConfiguration?: [...#CompromisedCredentialsRiskConfigurationInitParameters] @go(CompromisedCredentialsRiskConfiguration,[]CompromisedCredentialsRiskConfigurationInitParameters)

	// The configuration to override the risk decision. See details below.
	riskExceptionConfiguration?: [...#RiskExceptionConfigurationInitParameters] @go(RiskExceptionConfiguration,[]RiskExceptionConfigurationInitParameters)
}

#RiskConfigurationObservation: {
	// The account takeover risk configuration. See details below.
	accountTakeoverRiskConfiguration?: [...#AccountTakeoverRiskConfigurationObservation] @go(AccountTakeoverRiskConfiguration,[]AccountTakeoverRiskConfigurationObservation)

	// The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
	clientId?: null | string @go(ClientID,*string)

	// The compromised credentials risk configuration. See details below.
	compromisedCredentialsRiskConfiguration?: [...#CompromisedCredentialsRiskConfigurationObservation] @go(CompromisedCredentialsRiskConfiguration,[]CompromisedCredentialsRiskConfigurationObservation)

	// The user pool ID. or The user pool ID and Client Id separated by a : if the configuration is client specific.
	id?: null | string @go(ID,*string)

	// The configuration to override the risk decision. See details below.
	riskExceptionConfiguration?: [...#RiskExceptionConfigurationObservation] @go(RiskExceptionConfiguration,[]RiskExceptionConfigurationObservation)

	// The user pool ID.
	userPoolId?: null | string @go(UserPoolID,*string)
}

#RiskConfigurationParameters: {
	// The account takeover risk configuration. See details below.
	// +kubebuilder:validation:Optional
	accountTakeoverRiskConfiguration?: [...#AccountTakeoverRiskConfigurationParameters] @go(AccountTakeoverRiskConfiguration,[]AccountTakeoverRiskConfigurationParameters)

	// The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// The compromised credentials risk configuration. See details below.
	// +kubebuilder:validation:Optional
	compromisedCredentialsRiskConfiguration?: [...#CompromisedCredentialsRiskConfigurationParameters] @go(CompromisedCredentialsRiskConfiguration,[]CompromisedCredentialsRiskConfigurationParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The configuration to override the risk decision. See details below.
	// +kubebuilder:validation:Optional
	riskExceptionConfiguration?: [...#RiskExceptionConfigurationParameters] @go(RiskExceptionConfiguration,[]RiskExceptionConfigurationParameters)

	// The user pool ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserPool
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	userPoolId?: null | string @go(UserPoolID,*string)

	// Reference to a UserPool in cognitoidp to populate userPoolId.
	// +kubebuilder:validation:Optional
	userPoolIdRef?: null | v1.#Reference @go(UserPoolIDRef,*v1.Reference)

	// Selector for a UserPool in cognitoidp to populate userPoolId.
	// +kubebuilder:validation:Optional
	userPoolIdSelector?: null | v1.#Selector @go(UserPoolIDSelector,*v1.Selector)
}

#RiskExceptionConfigurationInitParameters: {
	// Overrides the risk decision to always block the pre-authentication requests.
	// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	// Can contain a maximum of 200 items.
	blockedIpRangeList?: [...null | string] @go(BlockedIPRangeList,[]*string)

	// Risk detection isn't performed on the IP addresses in this range list.
	// The IP range is in CIDR notation.
	// Can contain a maximum of 200 items.
	skippedIpRangeList?: [...null | string] @go(SkippedIPRangeList,[]*string)
}

#RiskExceptionConfigurationObservation: {
	// Overrides the risk decision to always block the pre-authentication requests.
	// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	// Can contain a maximum of 200 items.
	blockedIpRangeList?: [...null | string] @go(BlockedIPRangeList,[]*string)

	// Risk detection isn't performed on the IP addresses in this range list.
	// The IP range is in CIDR notation.
	// Can contain a maximum of 200 items.
	skippedIpRangeList?: [...null | string] @go(SkippedIPRangeList,[]*string)
}

#RiskExceptionConfigurationParameters: {
	// Overrides the risk decision to always block the pre-authentication requests.
	// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	// Can contain a maximum of 200 items.
	// +kubebuilder:validation:Optional
	blockedIpRangeList?: [...null | string] @go(BlockedIPRangeList,[]*string)

	// Risk detection isn't performed on the IP addresses in this range list.
	// The IP range is in CIDR notation.
	// Can contain a maximum of 200 items.
	// +kubebuilder:validation:Optional
	skippedIpRangeList?: [...null | string] @go(SkippedIPRangeList,[]*string)
}

// RiskConfigurationSpec defines the desired state of RiskConfiguration
#RiskConfigurationSpec: {
	v1.#ResourceSpec
	forProvider: #RiskConfigurationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #RiskConfigurationInitParameters @go(InitProvider)
}

// RiskConfigurationStatus defines the observed state of RiskConfiguration.
#RiskConfigurationStatus: {
	v1.#ResourceStatus
	atProvider?: #RiskConfigurationObservation @go(AtProvider)
}

// RiskConfiguration is the Schema for the RiskConfigurations API. Provides a Cognito Risk Configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RiskConfiguration: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta       @go(ObjectMeta)
	spec:      #RiskConfigurationSpec   @go(Spec)
	status?:   #RiskConfigurationStatus @go(Status)
}

// RiskConfigurationList contains a list of RiskConfigurations
#RiskConfigurationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#RiskConfiguration] @go(Items,[]RiskConfiguration)
}
