// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sagemaker/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#CognitoConfigInitParameters: {
}

#CognitoConfigObservation: {
	// The client ID for your Amazon Cognito user pool.
	clientId?: null | string @go(ClientID,*string)

	// ID for your Amazon Cognito user pool.
	userPool?: null | string @go(UserPool,*string)
}

#CognitoConfigParameters: {
	// The client ID for your Amazon Cognito user pool.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserPoolClient
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// Reference to a UserPoolClient in cognitoidp to populate clientId.
	// +kubebuilder:validation:Optional
	clientIdRef?: null | v1.#Reference @go(ClientIDRef,*v1.Reference)

	// Selector for a UserPoolClient in cognitoidp to populate clientId.
	// +kubebuilder:validation:Optional
	clientIdSelector?: null | v1.#Selector @go(ClientIDSelector,*v1.Selector)

	// ID for your Amazon Cognito user pool.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserPoolDomain
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("user_pool_id",false)
	// +kubebuilder:validation:Optional
	userPool?: null | string @go(UserPool,*string)

	// Reference to a UserPoolDomain in cognitoidp to populate userPool.
	// +kubebuilder:validation:Optional
	userPoolRef?: null | v1.#Reference @go(UserPoolRef,*v1.Reference)

	// Selector for a UserPoolDomain in cognitoidp to populate userPool.
	// +kubebuilder:validation:Optional
	userPoolSelector?: null | v1.#Selector @go(UserPoolSelector,*v1.Selector)
}

#OidcConfigInitParameters: {
	// The OIDC IdP authorization endpoint used to configure your private workforce.
	authorizationEndpoint?: null | string @go(AuthorizationEndpoint,*string)

	// The client ID for your Amazon Cognito user pool.
	clientId?: null | string @go(ClientID,*string)

	// The OIDC IdP issuer used to configure your private workforce.
	issuer?: null | string @go(Issuer,*string)

	// The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
	jwksUri?: null | string @go(JwksURI,*string)

	// The OIDC IdP logout endpoint used to configure your private workforce.
	logoutEndpoint?: null | string @go(LogoutEndpoint,*string)

	// The OIDC IdP token endpoint used to configure your private workforce.
	tokenEndpoint?: null | string @go(TokenEndpoint,*string)

	// The OIDC IdP user information endpoint used to configure your private workforce.
	userInfoEndpoint?: null | string @go(UserInfoEndpoint,*string)
}

#OidcConfigObservation: {
	// The OIDC IdP authorization endpoint used to configure your private workforce.
	authorizationEndpoint?: null | string @go(AuthorizationEndpoint,*string)

	// The client ID for your Amazon Cognito user pool.
	clientId?: null | string @go(ClientID,*string)

	// The OIDC IdP issuer used to configure your private workforce.
	issuer?: null | string @go(Issuer,*string)

	// The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
	jwksUri?: null | string @go(JwksURI,*string)

	// The OIDC IdP logout endpoint used to configure your private workforce.
	logoutEndpoint?: null | string @go(LogoutEndpoint,*string)

	// The OIDC IdP token endpoint used to configure your private workforce.
	tokenEndpoint?: null | string @go(TokenEndpoint,*string)

	// The OIDC IdP user information endpoint used to configure your private workforce.
	userInfoEndpoint?: null | string @go(UserInfoEndpoint,*string)
}

#OidcConfigParameters: {
	// The OIDC IdP authorization endpoint used to configure your private workforce.
	// +kubebuilder:validation:Optional
	authorizationEndpoint?: null | string @go(AuthorizationEndpoint,*string)

	// The client ID for your Amazon Cognito user pool.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// The OIDC IdP client secret used to configure your private workforce.
	// +kubebuilder:validation:Required
	clientSecretSecretRef: v1.#SecretKeySelector @go(ClientSecretSecretRef)

	// The OIDC IdP issuer used to configure your private workforce.
	// +kubebuilder:validation:Optional
	issuer?: null | string @go(Issuer,*string)

	// The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
	// +kubebuilder:validation:Optional
	jwksUri?: null | string @go(JwksURI,*string)

	// The OIDC IdP logout endpoint used to configure your private workforce.
	// +kubebuilder:validation:Optional
	logoutEndpoint?: null | string @go(LogoutEndpoint,*string)

	// The OIDC IdP token endpoint used to configure your private workforce.
	// +kubebuilder:validation:Optional
	tokenEndpoint?: null | string @go(TokenEndpoint,*string)

	// The OIDC IdP user information endpoint used to configure your private workforce.
	// +kubebuilder:validation:Optional
	userInfoEndpoint?: null | string @go(UserInfoEndpoint,*string)
}

#SourceIPConfigInitParameters: {
	// A list of up to 10 CIDR values.
	cidrs?: [...null | string] @go(Cidrs,[]*string)
}

#SourceIPConfigObservation: {
	// A list of up to 10 CIDR values.
	cidrs?: [...null | string] @go(Cidrs,[]*string)
}

#SourceIPConfigParameters: {
	// A list of up to 10 CIDR values.
	// +kubebuilder:validation:Optional
	cidrs: [...null | string] @go(Cidrs,[]*string)
}

#WorkforceInitParameters: {
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.
	cognitoConfig?: [...#CognitoConfigInitParameters] @go(CognitoConfig,[]CognitoConfigInitParameters)

	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.
	oidcConfig?: [...#OidcConfigInitParameters] @go(OidcConfig,[]OidcConfigInitParameters)

	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	sourceIpConfig?: [...#SourceIPConfigInitParameters] @go(SourceIPConfig,[]SourceIPConfigInitParameters)

	// configure a workforce using VPC. see Workforce VPC Config details below.
	workforceVpcConfig?: [...#WorkforceVPCConfigInitParameters] @go(WorkforceVPCConfig,[]WorkforceVPCConfigInitParameters)
}

#WorkforceObservation: {
	// The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
	arn?: null | string @go(Arn,*string)

	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.
	cognitoConfig?: [...#CognitoConfigObservation] @go(CognitoConfig,[]CognitoConfigObservation)

	// The name of the Workforce.
	id?: null | string @go(ID,*string)

	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.
	oidcConfig?: [...#OidcConfigObservation] @go(OidcConfig,[]OidcConfigObservation)

	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	sourceIpConfig?: [...#SourceIPConfigObservation] @go(SourceIPConfig,[]SourceIPConfigObservation)

	// The subdomain for your OIDC Identity Provider.
	subdomain?: null | string @go(Subdomain,*string)

	// configure a workforce using VPC. see Workforce VPC Config details below.
	workforceVpcConfig?: [...#WorkforceVPCConfigObservation] @go(WorkforceVPCConfig,[]WorkforceVPCConfigObservation)
}

#WorkforceParameters: {
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.
	// +kubebuilder:validation:Optional
	cognitoConfig?: [...#CognitoConfigParameters] @go(CognitoConfig,[]CognitoConfigParameters)

	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.
	// +kubebuilder:validation:Optional
	oidcConfig?: [...#OidcConfigParameters] @go(OidcConfig,[]OidcConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	// +kubebuilder:validation:Optional
	sourceIpConfig?: [...#SourceIPConfigParameters] @go(SourceIPConfig,[]SourceIPConfigParameters)

	// configure a workforce using VPC. see Workforce VPC Config details below.
	// +kubebuilder:validation:Optional
	workforceVpcConfig?: [...#WorkforceVPCConfigParameters] @go(WorkforceVPCConfig,[]WorkforceVPCConfigParameters)
}

#WorkforceVPCConfigInitParameters: {
	// The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// The ID of the subnets in the VPC that you want to connect.
	subnets?: [...null | string] @go(Subnets,[]*string)

	// The ID of the VPC that the workforce uses for communication.
	vpcId?: null | string @go(VPCID,*string)
}

#WorkforceVPCConfigObservation: {
	// The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// The ID of the subnets in the VPC that you want to connect.
	subnets?: [...null | string] @go(Subnets,[]*string)

	// The IDs for the VPC service endpoints of your VPC workforce.
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)

	// The ID of the VPC that the workforce uses for communication.
	vpcId?: null | string @go(VPCID,*string)
}

#WorkforceVPCConfigParameters: {
	// The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
	// +kubebuilder:validation:Optional
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// The ID of the subnets in the VPC that you want to connect.
	// +kubebuilder:validation:Optional
	subnets?: [...null | string] @go(Subnets,[]*string)

	// The ID of the VPC that the workforce uses for communication.
	// +kubebuilder:validation:Optional
	vpcId?: null | string @go(VPCID,*string)
}

// WorkforceSpec defines the desired state of Workforce
#WorkforceSpec: {
	v1.#ResourceSpec
	forProvider: #WorkforceParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #WorkforceInitParameters @go(InitProvider)
}

// WorkforceStatus defines the observed state of Workforce.
#WorkforceStatus: {
	v1.#ResourceStatus
	atProvider?: #WorkforceObservation @go(AtProvider)
}

// Workforce is the Schema for the Workforces API. Provides a SageMaker Workforce resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Workforce: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #WorkforceSpec     @go(Spec)
	status?:   #WorkforceStatus   @go(Status)
}

// WorkforceList contains a list of Workforces
#WorkforceList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Workforce] @go(Items,[]Workforce)
}
