// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sagemaker/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AppImageConfigInitParameters: {
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	kernelGatewayImageConfig?: [...#KernelGatewayImageConfigInitParameters] @go(KernelGatewayImageConfig,[]KernelGatewayImageConfigInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#AppImageConfigObservation: {
	// The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.
	arn?: null | string @go(Arn,*string)

	// The name of the App Image Config.
	id?: null | string @go(ID,*string)

	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	kernelGatewayImageConfig?: [...#KernelGatewayImageConfigObservation] @go(KernelGatewayImageConfig,[]KernelGatewayImageConfigObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AppImageConfigParameters: {
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	// +kubebuilder:validation:Optional
	kernelGatewayImageConfig?: [...#KernelGatewayImageConfigParameters] @go(KernelGatewayImageConfig,[]KernelGatewayImageConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FileSystemConfigInitParameters: {
	// The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.
	defaultGid?: null | float64 @go(DefaultGID,*float64)

	// The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.
	defaultUid?: null | float64 @go(DefaultUID,*float64)

	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
	mountPath?: null | string @go(MountPath,*string)
}

#FileSystemConfigObservation: {
	// The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.
	defaultGid?: null | float64 @go(DefaultGID,*float64)

	// The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.
	defaultUid?: null | float64 @go(DefaultUID,*float64)

	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
	mountPath?: null | string @go(MountPath,*string)
}

#FileSystemConfigParameters: {
	// The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.
	// +kubebuilder:validation:Optional
	defaultGid?: null | float64 @go(DefaultGID,*float64)

	// The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.
	// +kubebuilder:validation:Optional
	defaultUid?: null | float64 @go(DefaultUID,*float64)

	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
	// +kubebuilder:validation:Optional
	mountPath?: null | string @go(MountPath,*string)
}

#KernelGatewayImageConfigInitParameters: {
	// The URL where the Git repository is located. See File System Config details below.
	fileSystemConfig?: [...#FileSystemConfigInitParameters] @go(FileSystemConfig,[]FileSystemConfigInitParameters)

	// The default branch for the Git repository. See Kernel Spec details below.
	kernelSpec?: [...#KernelSpecInitParameters] @go(KernelSpec,[]KernelSpecInitParameters)
}

#KernelGatewayImageConfigObservation: {
	// The URL where the Git repository is located. See File System Config details below.
	fileSystemConfig?: [...#FileSystemConfigObservation] @go(FileSystemConfig,[]FileSystemConfigObservation)

	// The default branch for the Git repository. See Kernel Spec details below.
	kernelSpec?: [...#KernelSpecObservation] @go(KernelSpec,[]KernelSpecObservation)
}

#KernelGatewayImageConfigParameters: {
	// The URL where the Git repository is located. See File System Config details below.
	// +kubebuilder:validation:Optional
	fileSystemConfig?: [...#FileSystemConfigParameters] @go(FileSystemConfig,[]FileSystemConfigParameters)

	// The default branch for the Git repository. See Kernel Spec details below.
	// +kubebuilder:validation:Optional
	kernelSpec: [...#KernelSpecParameters] @go(KernelSpec,[]KernelSpecParameters)
}

#KernelSpecInitParameters: {
	// The display name of the kernel.
	displayName?: null | string @go(DisplayName,*string)

	// The name of the kernel.
	name?: null | string @go(Name,*string)
}

#KernelSpecObservation: {
	// The display name of the kernel.
	displayName?: null | string @go(DisplayName,*string)

	// The name of the kernel.
	name?: null | string @go(Name,*string)
}

#KernelSpecParameters: {
	// The display name of the kernel.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The name of the kernel.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

// AppImageConfigSpec defines the desired state of AppImageConfig
#AppImageConfigSpec: {
	v1.#ResourceSpec
	forProvider: #AppImageConfigParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AppImageConfigInitParameters @go(InitProvider)
}

// AppImageConfigStatus defines the observed state of AppImageConfig.
#AppImageConfigStatus: {
	v1.#ResourceStatus
	atProvider?: #AppImageConfigObservation @go(AtProvider)
}

// AppImageConfig is the Schema for the AppImageConfigs API. Provides a SageMaker App Image Config resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AppImageConfig: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec:      #AppImageConfigSpec   @go(Spec)
	status?:   #AppImageConfigStatus @go(Status)
}

// AppImageConfigList contains a list of AppImageConfigs
#AppImageConfigList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#AppImageConfig] @go(Items,[]AppImageConfig)
}
