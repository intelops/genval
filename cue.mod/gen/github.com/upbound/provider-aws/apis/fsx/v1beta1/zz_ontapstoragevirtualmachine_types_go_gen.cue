// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/fsx/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ActiveDirectoryConfigurationInitParameters: {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
	netbiosName?: null | string @go(NetbiosName,*string)

	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	selfManagedActiveDirectoryConfiguration?: [...#SelfManagedActiveDirectoryConfigurationInitParameters] @go(SelfManagedActiveDirectoryConfiguration,[]SelfManagedActiveDirectoryConfigurationInitParameters)
}

#ActiveDirectoryConfigurationObservation: {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
	netbiosName?: null | string @go(NetbiosName,*string)

	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	selfManagedActiveDirectoryConfiguration?: [...#SelfManagedActiveDirectoryConfigurationObservation] @go(SelfManagedActiveDirectoryConfiguration,[]SelfManagedActiveDirectoryConfigurationObservation)
}

#ActiveDirectoryConfigurationParameters: {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
	// +kubebuilder:validation:Optional
	netbiosName?: null | string @go(NetbiosName,*string)

	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	// +kubebuilder:validation:Optional
	selfManagedActiveDirectoryConfiguration?: [...#SelfManagedActiveDirectoryConfigurationParameters] @go(SelfManagedActiveDirectoryConfiguration,[]SelfManagedActiveDirectoryConfigurationParameters)
}

#EndpointsManagementInitParameters: {
}

#EndpointsManagementObservation: {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	dnsName?: null | string @go(DNSName,*string)

	// IP addresses of the storage virtual machine endpoint.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)
}

#EndpointsManagementParameters: {
}

#ISCSIInitParameters: {
}

#ISCSIObservation: {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	dnsName?: null | string @go(DNSName,*string)

	// IP addresses of the storage virtual machine endpoint.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)
}

#ISCSIParameters: {
}

#NFSInitParameters: {
}

#NFSObservation: {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	dnsName?: null | string @go(DNSName,*string)

	// IP addresses of the storage virtual machine endpoint.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)
}

#NFSParameters: {
}

#OntapStorageVirtualMachineEndpointsInitParameters: {
}

#OntapStorageVirtualMachineEndpointsObservation: {
	// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
	iscsi?: [...#ISCSIObservation] @go(ISCSI,[]ISCSIObservation)

	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	management?: [...#EndpointsManagementObservation] @go(Management,[]EndpointsManagementObservation)

	// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
	nfs?: [...#NFSObservation] @go(NFS,[]NFSObservation)

	// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an active_directory_configuration has been set. See Endpoint.
	smb?: [...#SMBObservation] @go(SMB,[]SMBObservation)
}

#OntapStorageVirtualMachineEndpointsParameters: {
}

#OntapStorageVirtualMachineInitParameters: {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	activeDirectoryConfiguration?: [...#ActiveDirectoryConfigurationInitParameters] @go(ActiveDirectoryConfiguration,[]ActiveDirectoryConfigurationInitParameters)

	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	name?: null | string @go(Name,*string)

	// Specifies the root volume security style, Valid values are UNIX, NTFS, and MIXED. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is UNIX.
	rootVolumeSecurityStyle?: null | string @go(RootVolumeSecurityStyle,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#OntapStorageVirtualMachineObservation: {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	activeDirectoryConfiguration?: [...#ActiveDirectoryConfigurationObservation] @go(ActiveDirectoryConfiguration,[]ActiveDirectoryConfigurationObservation)

	// Amazon Resource Name of the storage virtual machine.
	arn?: null | string @go(Arn,*string)

	// The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	endpoints?: [...#OntapStorageVirtualMachineEndpointsObservation] @go(Endpoints,[]OntapStorageVirtualMachineEndpointsObservation)

	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	fileSystemId?: null | string @go(FileSystemID,*string)

	// Identifier of the storage virtual machine, e.g., svm-12345678
	id?: null | string @go(ID,*string)

	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	name?: null | string @go(Name,*string)

	// Specifies the root volume security style, Valid values are UNIX, NTFS, and MIXED. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is UNIX.
	rootVolumeSecurityStyle?: null | string @go(RootVolumeSecurityStyle,*string)

	// Describes the SVM's subtype, e.g. DEFAULT
	subtype?: null | string @go(Subtype,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The SVM's UUID (universally unique identifier).
	uuid?: null | string @go(UUID,*string)
}

#OntapStorageVirtualMachineParameters: {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	// +kubebuilder:validation:Optional
	activeDirectoryConfiguration?: [...#ActiveDirectoryConfigurationParameters] @go(ActiveDirectoryConfiguration,[]ActiveDirectoryConfigurationParameters)

	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/fsx/v1beta1.OntapFileSystem
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	fileSystemId?: null | string @go(FileSystemID,*string)

	// Reference to a OntapFileSystem in fsx to populate fileSystemId.
	// +kubebuilder:validation:Optional
	fileSystemIdRef?: null | v1.#Reference @go(FileSystemIDRef,*v1.Reference)

	// Selector for a OntapFileSystem in fsx to populate fileSystemId.
	// +kubebuilder:validation:Optional
	fileSystemIdSelector?: null | v1.#Selector @go(FileSystemIDSelector,*v1.Selector)

	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies the root volume security style, Valid values are UNIX, NTFS, and MIXED. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is UNIX.
	// +kubebuilder:validation:Optional
	rootVolumeSecurityStyle?: null | string @go(RootVolumeSecurityStyle,*string)

	// +kubebuilder:validation:Optional
	svmAdminPasswordSecretRef?: null | v1.#SecretKeySelector @go(SvmAdminPasswordSecretRef,*v1.SecretKeySelector)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SMBInitParameters: {
}

#SMBObservation: {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	dnsName?: null | string @go(DNSName,*string)

	// IP addresses of the storage virtual machine endpoint.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)
}

#SMBParameters: {
}

#SelfManagedActiveDirectoryConfigurationInitParameters: {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	dnsIps?: [...null | string] @go(DNSIps,[]*string)

	// The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.
	domainName?: null | string @go(DomainName,*string)

	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to Domain Admins.
	fileSystemAdministratorsGroup?: null | string @go(FileSystemAdministratorsGroup,*string)

	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.
	organizationalUnitDistinguishedName?: null | string @go(OrganizationalUnitDistinguishedName,*string)

	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	username?: null | string @go(Username,*string)
}

#SelfManagedActiveDirectoryConfigurationObservation: {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	dnsIps?: [...null | string] @go(DNSIps,[]*string)

	// The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.
	domainName?: null | string @go(DomainName,*string)

	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to Domain Admins.
	fileSystemAdministratorsGroup?: null | string @go(FileSystemAdministratorsGroup,*string)

	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.
	organizationalUnitDistinguishedName?: null | string @go(OrganizationalUnitDistinguishedName,*string)

	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	username?: null | string @go(Username,*string)
}

#SelfManagedActiveDirectoryConfigurationParameters: {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	// +kubebuilder:validation:Optional
	dnsIps: [...null | string] @go(DNSIps,[]*string)

	// The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to Domain Admins.
	// +kubebuilder:validation:Optional
	fileSystemAdministratorsGroup?: null | string @go(FileSystemAdministratorsGroup,*string)

	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.
	// +kubebuilder:validation:Optional
	organizationalUnitDistinguishedName?: null | string @go(OrganizationalUnitDistinguishedName,*string)

	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	// +kubebuilder:validation:Required
	passwordSecretRef: v1.#SecretKeySelector @go(PasswordSecretRef)

	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	// +kubebuilder:validation:Optional
	username?: null | string @go(Username,*string)
}

// OntapStorageVirtualMachineSpec defines the desired state of OntapStorageVirtualMachine
#OntapStorageVirtualMachineSpec: {
	v1.#ResourceSpec
	forProvider: #OntapStorageVirtualMachineParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #OntapStorageVirtualMachineInitParameters @go(InitProvider)
}

// OntapStorageVirtualMachineStatus defines the observed state of OntapStorageVirtualMachine.
#OntapStorageVirtualMachineStatus: {
	v1.#ResourceStatus
	atProvider?: #OntapStorageVirtualMachineObservation @go(AtProvider)
}

// OntapStorageVirtualMachine is the Schema for the OntapStorageVirtualMachines API. Manages a FSx Storage Virtual Machine.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#OntapStorageVirtualMachine: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #OntapStorageVirtualMachineSpec   @go(Spec)
	status?: #OntapStorageVirtualMachineStatus @go(Status)
}

// OntapStorageVirtualMachineList contains a list of OntapStorageVirtualMachines
#OntapStorageVirtualMachineList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#OntapStorageVirtualMachine] @go(Items,[]OntapStorageVirtualMachine)
}
