// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#TransitGatewayRouteTableAssociationInitParameters: {
}

#TransitGatewayRouteTableAssociationObservation: {
	// EC2 Transit Gateway Route Table identifier combined with EC2 Transit Gateway Attachment identifier
	id?: null | string @go(ID,*string)

	// Identifier of the resource
	resourceId?: null | string @go(ResourceID,*string)

	// Type of the resource
	resourceType?: null | string @go(ResourceType,*string)

	// Identifier of EC2 Transit Gateway Attachment.
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// Identifier of EC2 Transit Gateway Route Table.
	transitGatewayRouteTableId?: null | string @go(TransitGatewayRouteTableID,*string)
}

#TransitGatewayRouteTableAssociationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Identifier of EC2 Transit Gateway Attachment.
	// +crossplane:generate:reference:type=TransitGatewayVPCAttachment
	// +kubebuilder:validation:Optional
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// Reference to a TransitGatewayVPCAttachment to populate transitGatewayAttachmentId.
	// +kubebuilder:validation:Optional
	transitGatewayAttachmentIdRef?: null | v1.#Reference @go(TransitGatewayAttachmentIDRef,*v1.Reference)

	// Selector for a TransitGatewayVPCAttachment to populate transitGatewayAttachmentId.
	// +kubebuilder:validation:Optional
	transitGatewayAttachmentIdSelector?: null | v1.#Selector @go(TransitGatewayAttachmentIDSelector,*v1.Selector)

	// Identifier of EC2 Transit Gateway Route Table.
	// +crossplane:generate:reference:type=TransitGatewayRouteTable
	// +kubebuilder:validation:Optional
	transitGatewayRouteTableId?: null | string @go(TransitGatewayRouteTableID,*string)

	// Reference to a TransitGatewayRouteTable to populate transitGatewayRouteTableId.
	// +kubebuilder:validation:Optional
	transitGatewayRouteTableIdRef?: null | v1.#Reference @go(TransitGatewayRouteTableIDRef,*v1.Reference)

	// Selector for a TransitGatewayRouteTable to populate transitGatewayRouteTableId.
	// +kubebuilder:validation:Optional
	transitGatewayRouteTableIdSelector?: null | v1.#Selector @go(TransitGatewayRouteTableIDSelector,*v1.Selector)
}

// TransitGatewayRouteTableAssociationSpec defines the desired state of TransitGatewayRouteTableAssociation
#TransitGatewayRouteTableAssociationSpec: {
	v1.#ResourceSpec
	forProvider: #TransitGatewayRouteTableAssociationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TransitGatewayRouteTableAssociationInitParameters @go(InitProvider)
}

// TransitGatewayRouteTableAssociationStatus defines the observed state of TransitGatewayRouteTableAssociation.
#TransitGatewayRouteTableAssociationStatus: {
	v1.#ResourceStatus
	atProvider?: #TransitGatewayRouteTableAssociationObservation @go(AtProvider)
}

// TransitGatewayRouteTableAssociation is the Schema for the TransitGatewayRouteTableAssociations API. Manages an EC2 Transit Gateway Route Table association
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayRouteTableAssociation: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta                         @go(ObjectMeta)
	spec:      #TransitGatewayRouteTableAssociationSpec   @go(Spec)
	status?:   #TransitGatewayRouteTableAssociationStatus @go(Status)
}

// TransitGatewayRouteTableAssociationList contains a list of TransitGatewayRouteTableAssociations
#TransitGatewayRouteTableAssociationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TransitGatewayRouteTableAssociation] @go(Items,[]TransitGatewayRouteTableAssociation)
}
