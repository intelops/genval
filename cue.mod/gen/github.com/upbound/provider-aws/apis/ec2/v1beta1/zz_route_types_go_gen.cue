// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#RouteInitParameters_2: {
	// Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
	carrierGatewayId?: null | string @go(CarrierGatewayID,*string)

	// The Amazon Resource Name (ARN) of a core network.
	coreNetworkArn?: null | string @go(CoreNetworkArn,*string)

	// The destination CIDR block.
	destinationCidrBlock?: null | string @go(DestinationCidrBlock,*string)

	// The destination IPv6 CIDR block.
	destinationIpv6CidrBlock?: null | string @go(DestinationIPv6CidrBlock,*string)

	// Identifier of a Outpost local gateway.
	localGatewayId?: null | string @go(LocalGatewayID,*string)
}

#RouteObservation_2: {
	// Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
	carrierGatewayId?: null | string @go(CarrierGatewayID,*string)

	// The Amazon Resource Name (ARN) of a core network.
	coreNetworkArn?: null | string @go(CoreNetworkArn,*string)

	// The destination CIDR block.
	destinationCidrBlock?: null | string @go(DestinationCidrBlock,*string)

	// The destination IPv6 CIDR block.
	destinationIpv6CidrBlock?: null | string @go(DestinationIPv6CidrBlock,*string)

	// The ID of a managed prefix list destination.
	destinationPrefixListId?: null | string @go(DestinationPrefixListID,*string)

	// Identifier of a VPC Egress Only Internet Gateway.
	egressOnlyGatewayId?: null | string @go(EgressOnlyGatewayID,*string)

	// Identifier of a VPC internet gateway or a virtual private gateway. Specify local when updating a previously imported local route.
	gatewayId?: null | string @go(GatewayID,*string)

	// Route identifier computed from the routing table identifier and route destination.
	id?: null | string @go(ID,*string)

	// Identifier of an EC2 instance.
	instanceId?: null | string @go(InstanceID,*string)

	// The AWS account ID of the owner of the EC2 instance.
	instanceOwnerId?: null | string @go(InstanceOwnerID,*string)

	// Identifier of a Outpost local gateway.
	localGatewayId?: null | string @go(LocalGatewayID,*string)

	// Identifier of a VPC NAT gateway.
	natGatewayId?: null | string @go(NATGatewayID,*string)

	// Identifier of an EC2 network interface.
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)

	// How the route was created - CreateRouteTable, CreateRoute or EnableVgwRoutePropagation.
	origin?: null | string @go(Origin,*string)

	// The ID of the routing table.
	routeTableId?: null | string @go(RouteTableID,*string)

	// The state of the route - active or blackhole.
	state?: null | string @go(State,*string)

	// Identifier of an EC2 Transit Gateway.
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// Identifier of a VPC Endpoint.
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)

	// Identifier of a VPC peering connection.
	vpcPeeringConnectionId?: null | string @go(VPCPeeringConnectionID,*string)
}

#RouteParameters_2: {
	// Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
	// +kubebuilder:validation:Optional
	carrierGatewayId?: null | string @go(CarrierGatewayID,*string)

	// The Amazon Resource Name (ARN) of a core network.
	// +kubebuilder:validation:Optional
	coreNetworkArn?: null | string @go(CoreNetworkArn,*string)

	// The destination CIDR block.
	// +kubebuilder:validation:Optional
	destinationCidrBlock?: null | string @go(DestinationCidrBlock,*string)

	// The destination IPv6 CIDR block.
	// +kubebuilder:validation:Optional
	destinationIpv6CidrBlock?: null | string @go(DestinationIPv6CidrBlock,*string)

	// The ID of a managed prefix list destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.ManagedPrefixList
	// +kubebuilder:validation:Optional
	destinationPrefixListId?: null | string @go(DestinationPrefixListID,*string)

	// Reference to a ManagedPrefixList in ec2 to populate destinationPrefixListId.
	// +kubebuilder:validation:Optional
	destinationPrefixListIdRef?: null | v1.#Reference @go(DestinationPrefixListIDRef,*v1.Reference)

	// Selector for a ManagedPrefixList in ec2 to populate destinationPrefixListId.
	// +kubebuilder:validation:Optional
	destinationPrefixListIdSelector?: null | v1.#Selector @go(DestinationPrefixListIDSelector,*v1.Selector)

	// Identifier of a VPC Egress Only Internet Gateway.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.EgressOnlyInternetGateway
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	egressOnlyGatewayId?: null | string @go(EgressOnlyGatewayID,*string)

	// Reference to a EgressOnlyInternetGateway in ec2 to populate egressOnlyGatewayId.
	// +kubebuilder:validation:Optional
	egressOnlyGatewayIdRef?: null | v1.#Reference @go(EgressOnlyGatewayIDRef,*v1.Reference)

	// Selector for a EgressOnlyInternetGateway in ec2 to populate egressOnlyGatewayId.
	// +kubebuilder:validation:Optional
	egressOnlyGatewayIdSelector?: null | v1.#Selector @go(EgressOnlyGatewayIDSelector,*v1.Selector)

	// Identifier of a VPC internet gateway or a virtual private gateway. Specify local when updating a previously imported local route.
	// +crossplane:generate:reference:type=InternetGateway
	// +kubebuilder:validation:Optional
	gatewayId?: null | string @go(GatewayID,*string)

	// Reference to a InternetGateway to populate gatewayId.
	// +kubebuilder:validation:Optional
	gatewayIdRef?: null | v1.#Reference @go(GatewayIDRef,*v1.Reference)

	// Selector for a InternetGateway to populate gatewayId.
	// +kubebuilder:validation:Optional
	gatewayIdSelector?: null | v1.#Selector @go(GatewayIDSelector,*v1.Selector)

	// Identifier of an EC2 instance.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdRef?: null | v1.#Reference @go(InstanceIDRef,*v1.Reference)

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdSelector?: null | v1.#Selector @go(InstanceIDSelector,*v1.Selector)

	// Identifier of a Outpost local gateway.
	// +kubebuilder:validation:Optional
	localGatewayId?: null | string @go(LocalGatewayID,*string)

	// Identifier of a VPC NAT gateway.
	// +crossplane:generate:reference:type=NATGateway
	// +kubebuilder:validation:Optional
	natGatewayId?: null | string @go(NATGatewayID,*string)

	// Reference to a NATGateway to populate natGatewayId.
	// +kubebuilder:validation:Optional
	natGatewayIdRef?: null | v1.#Reference @go(NATGatewayIDRef,*v1.Reference)

	// Selector for a NATGateway to populate natGatewayId.
	// +kubebuilder:validation:Optional
	natGatewayIdSelector?: null | v1.#Selector @go(NATGatewayIDSelector,*v1.Selector)

	// Identifier of an EC2 network interface.
	// +crossplane:generate:reference:type=NetworkInterface
	// +kubebuilder:validation:Optional
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)

	// Reference to a NetworkInterface to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	networkInterfaceIdRef?: null | v1.#Reference @go(NetworkInterfaceIDRef,*v1.Reference)

	// Selector for a NetworkInterface to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	networkInterfaceIdSelector?: null | v1.#Selector @go(NetworkInterfaceIDSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the routing table.
	// +crossplane:generate:reference:type=RouteTable
	// +kubebuilder:validation:Optional
	routeTableId?: null | string @go(RouteTableID,*string)

	// Reference to a RouteTable to populate routeTableId.
	// +kubebuilder:validation:Optional
	routeTableIdRef?: null | v1.#Reference @go(RouteTableIDRef,*v1.Reference)

	// Selector for a RouteTable to populate routeTableId.
	// +kubebuilder:validation:Optional
	routeTableIdSelector?: null | v1.#Selector @go(RouteTableIDSelector,*v1.Selector)

	// Identifier of an EC2 Transit Gateway.
	// +crossplane:generate:reference:type=TransitGateway
	// +kubebuilder:validation:Optional
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// Reference to a TransitGateway to populate transitGatewayId.
	// +kubebuilder:validation:Optional
	transitGatewayIdRef?: null | v1.#Reference @go(TransitGatewayIDRef,*v1.Reference)

	// Selector for a TransitGateway to populate transitGatewayId.
	// +kubebuilder:validation:Optional
	transitGatewayIdSelector?: null | v1.#Selector @go(TransitGatewayIDSelector,*v1.Selector)

	// Identifier of a VPC Endpoint.
	// +crossplane:generate:reference:type=VPCEndpoint
	// +kubebuilder:validation:Optional
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)

	// Reference to a VPCEndpoint to populate vpcEndpointId.
	// +kubebuilder:validation:Optional
	vpcEndpointIdRef?: null | v1.#Reference @go(VPCEndpointIDRef,*v1.Reference)

	// Selector for a VPCEndpoint to populate vpcEndpointId.
	// +kubebuilder:validation:Optional
	vpcEndpointIdSelector?: null | v1.#Selector @go(VPCEndpointIDSelector,*v1.Selector)

	// Identifier of a VPC peering connection.
	// +crossplane:generate:reference:type=VPCPeeringConnection
	// +kubebuilder:validation:Optional
	vpcPeeringConnectionId?: null | string @go(VPCPeeringConnectionID,*string)

	// Reference to a VPCPeeringConnection to populate vpcPeeringConnectionId.
	// +kubebuilder:validation:Optional
	vpcPeeringConnectionIdRef?: null | v1.#Reference @go(VPCPeeringConnectionIDRef,*v1.Reference)

	// Selector for a VPCPeeringConnection to populate vpcPeeringConnectionId.
	// +kubebuilder:validation:Optional
	vpcPeeringConnectionIdSelector?: null | v1.#Selector @go(VPCPeeringConnectionIDSelector,*v1.Selector)
}

// RouteSpec defines the desired state of Route
#RouteSpec: {
	v1.#ResourceSpec
	forProvider: #RouteParameters_2 @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #RouteInitParameters_2 @go(InitProvider)
}

// RouteStatus defines the observed state of Route.
#RouteStatus: {
	v1.#ResourceStatus
	atProvider?: #RouteObservation_2 @go(AtProvider)
}

// Route is the Schema for the Routes API. Provides a resource to create a routing entry in a VPC routing table.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Route: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #RouteSpec         @go(Spec)
	status?:   #RouteStatus       @go(Status)
}

// RouteList contains a list of Routes
#RouteList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Route] @go(Items,[]Route)
}
