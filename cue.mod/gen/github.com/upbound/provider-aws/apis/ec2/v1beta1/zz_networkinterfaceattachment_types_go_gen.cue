// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#NetworkInterfaceAttachmentInitParameters: {
	// Network interface index (int).
	deviceIndex?: null | float64 @go(DeviceIndex,*float64)
}

#NetworkInterfaceAttachmentObservation: {
	// The ENI Attachment ID.
	attachmentId?: null | string @go(AttachmentID,*string)

	// Network interface index (int).
	deviceIndex?: null | float64 @go(DeviceIndex,*float64)
	id?:          null | string  @go(ID,*string)

	// Instance ID to attach.
	instanceId?: null | string @go(InstanceID,*string)

	// ENI ID to attach.
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)

	// The status of the Network Interface Attachment.
	status?: null | string @go(Status,*string)
}

#NetworkInterfaceAttachmentParameters: {
	// Network interface index (int).
	// +kubebuilder:validation:Optional
	deviceIndex?: null | float64 @go(DeviceIndex,*float64)

	// Instance ID to attach.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Reference to a Instance in ec2 to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdRef?: null | v1.#Reference @go(InstanceIDRef,*v1.Reference)

	// Selector for a Instance in ec2 to populate instanceId.
	// +kubebuilder:validation:Optional
	instanceIdSelector?: null | v1.#Selector @go(InstanceIDSelector,*v1.Selector)

	// ENI ID to attach.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.NetworkInterface
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)

	// Reference to a NetworkInterface in ec2 to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	networkInterfaceIdRef?: null | v1.#Reference @go(NetworkInterfaceIDRef,*v1.Reference)

	// Selector for a NetworkInterface in ec2 to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	networkInterfaceIdSelector?: null | v1.#Selector @go(NetworkInterfaceIDSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// NetworkInterfaceAttachmentSpec defines the desired state of NetworkInterfaceAttachment
#NetworkInterfaceAttachmentSpec: {
	v1.#ResourceSpec
	forProvider: #NetworkInterfaceAttachmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #NetworkInterfaceAttachmentInitParameters @go(InitProvider)
}

// NetworkInterfaceAttachmentStatus defines the observed state of NetworkInterfaceAttachment.
#NetworkInterfaceAttachmentStatus: {
	v1.#ResourceStatus
	atProvider?: #NetworkInterfaceAttachmentObservation @go(AtProvider)
}

// NetworkInterfaceAttachment is the Schema for the NetworkInterfaceAttachments API. Attach an Elastic network interface (ENI) resource with EC2 instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#NetworkInterfaceAttachment: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.deviceIndex) || (has(self.initProvider) && has(self.initProvider.deviceIndex))",message="spec.forProvider.deviceIndex is a required parameter"
	spec:    #NetworkInterfaceAttachmentSpec   @go(Spec)
	status?: #NetworkInterfaceAttachmentStatus @go(Status)
}

// NetworkInterfaceAttachmentList contains a list of NetworkInterfaceAttachments
#NetworkInterfaceAttachmentList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#NetworkInterfaceAttachment] @go(Items,[]NetworkInterfaceAttachment)
}
