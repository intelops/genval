// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#EBSSnapshotInitParameters: {
	// A description of what the snapshot is.
	description?: null | string @go(Description,*string)

	// The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.
	outpostArn?: null | string @go(OutpostArn,*string)

	// Indicates whether to permanently restore an archived snapshot.
	permanentRestore?: null | bool @go(PermanentRestore,*bool)

	// The name of the storage tier. Valid values are archive and standard. Default value is standard.
	storageTier?: null | string @go(StorageTier,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
	temporaryRestoreDays?: null | float64 @go(TemporaryRestoreDays,*float64)
}

#EBSSnapshotObservation: {
	// Amazon Resource Name (ARN) of the EBS Snapshot.
	arn?: null | string @go(Arn,*string)

	// The data encryption key identifier for the snapshot.
	dataEncryptionKeyId?: null | string @go(DataEncryptionKeyID,*string)

	// A description of what the snapshot is.
	description?: null | string @go(Description,*string)

	// Whether the snapshot is encrypted.
	encrypted?: null | bool @go(Encrypted,*bool)

	// The snapshot ID (e.g., snap-59fcb34e).
	id?: null | string @go(ID,*string)

	// The ARN for the KMS encryption key.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.
	outpostArn?: null | string @go(OutpostArn,*string)

	// Value from an Amazon-maintained list (amazon, aws-marketplace, microsoft) of snapshot owners.
	ownerAlias?: null | string @go(OwnerAlias,*string)

	// The AWS account ID of the EBS snapshot owner.
	ownerId?: null | string @go(OwnerID,*string)

	// Indicates whether to permanently restore an archived snapshot.
	permanentRestore?: null | bool @go(PermanentRestore,*bool)

	// The name of the storage tier. Valid values are archive and standard. Default value is standard.
	storageTier?: null | string @go(StorageTier,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
	temporaryRestoreDays?: null | float64 @go(TemporaryRestoreDays,*float64)

	// The Volume ID of which to make a snapshot.
	volumeId?: null | string @go(VolumeID,*string)

	// The size of the drive in GiBs.
	volumeSize?: null | float64 @go(VolumeSize,*float64)
}

#EBSSnapshotParameters: {
	// A description of what the snapshot is.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.
	// +kubebuilder:validation:Optional
	outpostArn?: null | string @go(OutpostArn,*string)

	// Indicates whether to permanently restore an archived snapshot.
	// +kubebuilder:validation:Optional
	permanentRestore?: null | bool @go(PermanentRestore,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The name of the storage tier. Valid values are archive and standard. Default value is standard.
	// +kubebuilder:validation:Optional
	storageTier?: null | string @go(StorageTier,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
	// +kubebuilder:validation:Optional
	temporaryRestoreDays?: null | float64 @go(TemporaryRestoreDays,*float64)

	// The Volume ID of which to make a snapshot.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.EBSVolume
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	volumeId?: null | string @go(VolumeID,*string)

	// Reference to a EBSVolume in ec2 to populate volumeId.
	// +kubebuilder:validation:Optional
	volumeIdRef?: null | v1.#Reference @go(VolumeIDRef,*v1.Reference)

	// Selector for a EBSVolume in ec2 to populate volumeId.
	// +kubebuilder:validation:Optional
	volumeIdSelector?: null | v1.#Selector @go(VolumeIDSelector,*v1.Selector)
}

// EBSSnapshotSpec defines the desired state of EBSSnapshot
#EBSSnapshotSpec: {
	v1.#ResourceSpec
	forProvider: #EBSSnapshotParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #EBSSnapshotInitParameters @go(InitProvider)
}

// EBSSnapshotStatus defines the observed state of EBSSnapshot.
#EBSSnapshotStatus: {
	v1.#ResourceStatus
	atProvider?: #EBSSnapshotObservation @go(AtProvider)
}

// EBSSnapshot is the Schema for the EBSSnapshots API. Provides an elastic block storage snapshot resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EBSSnapshot: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #EBSSnapshotSpec   @go(Spec)
	status?:   #EBSSnapshotStatus @go(Status)
}

// EBSSnapshotList contains a list of EBSSnapshots
#EBSSnapshotList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#EBSSnapshot] @go(Items,[]EBSSnapshot)
}
