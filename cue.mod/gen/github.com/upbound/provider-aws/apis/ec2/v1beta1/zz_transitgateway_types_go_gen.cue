// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#TransitGatewayInitParameters_2: {
	// Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.
	amazonSideAsn?: null | float64 @go(AmazonSideAsn,*float64)

	// Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.
	autoAcceptSharedAttachments?: null | string @go(AutoAcceptSharedAttachments,*string)

	// Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
	dnsSupport?: null | string @go(DNSSupport,*string)

	// Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.
	defaultRouteTableAssociation?: null | string @go(DefaultRouteTableAssociation,*string)

	// Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.
	defaultRouteTablePropagation?: null | string @go(DefaultRouteTablePropagation,*string)

	// Description of the EC2 Transit Gateway.
	description?: null | string @go(Description,*string)

	// Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.
	multicastSupport?: null | string @go(MulticastSupport,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
	transitGatewayCidrBlocks?: [...null | string] @go(TransitGatewayCidrBlocks,[]*string)

	// Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.
	vpnEcmpSupport?: null | string @go(VPNEcmpSupport,*string)
}

#TransitGatewayObservation_2: {
	// Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.
	amazonSideAsn?: null | float64 @go(AmazonSideAsn,*float64)

	// EC2 Transit Gateway Amazon Resource Name (ARN)
	arn?: null | string @go(Arn,*string)

	// Identifier of the default association route table
	associationDefaultRouteTableId?: null | string @go(AssociationDefaultRouteTableID,*string)

	// Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.
	autoAcceptSharedAttachments?: null | string @go(AutoAcceptSharedAttachments,*string)

	// Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
	dnsSupport?: null | string @go(DNSSupport,*string)

	// Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.
	defaultRouteTableAssociation?: null | string @go(DefaultRouteTableAssociation,*string)

	// Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.
	defaultRouteTablePropagation?: null | string @go(DefaultRouteTablePropagation,*string)

	// Description of the EC2 Transit Gateway.
	description?: null | string @go(Description,*string)

	// EC2 Transit Gateway identifier
	id?: null | string @go(ID,*string)

	// Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.
	multicastSupport?: null | string @go(MulticastSupport,*string)

	// Identifier of the AWS account that owns the EC2 Transit Gateway
	ownerId?: null | string @go(OwnerID,*string)

	// Identifier of the default propagation route table
	propagationDefaultRouteTableId?: null | string @go(PropagationDefaultRouteTableID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
	transitGatewayCidrBlocks?: [...null | string] @go(TransitGatewayCidrBlocks,[]*string)

	// Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.
	vpnEcmpSupport?: null | string @go(VPNEcmpSupport,*string)
}

#TransitGatewayParameters_2: {
	// Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.
	// +kubebuilder:validation:Optional
	amazonSideAsn?: null | float64 @go(AmazonSideAsn,*float64)

	// Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.
	// +kubebuilder:validation:Optional
	autoAcceptSharedAttachments?: null | string @go(AutoAcceptSharedAttachments,*string)

	// Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
	// +kubebuilder:validation:Optional
	dnsSupport?: null | string @go(DNSSupport,*string)

	// Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.
	// +kubebuilder:validation:Optional
	defaultRouteTableAssociation?: null | string @go(DefaultRouteTableAssociation,*string)

	// Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.
	// +kubebuilder:validation:Optional
	defaultRouteTablePropagation?: null | string @go(DefaultRouteTablePropagation,*string)

	// Description of the EC2 Transit Gateway.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.
	// +kubebuilder:validation:Optional
	multicastSupport?: null | string @go(MulticastSupport,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
	// +kubebuilder:validation:Optional
	transitGatewayCidrBlocks?: [...null | string] @go(TransitGatewayCidrBlocks,[]*string)

	// Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.
	// +kubebuilder:validation:Optional
	vpnEcmpSupport?: null | string @go(VPNEcmpSupport,*string)
}

// TransitGatewaySpec defines the desired state of TransitGateway
#TransitGatewaySpec: {
	v1.#ResourceSpec
	forProvider: #TransitGatewayParameters_2 @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TransitGatewayInitParameters_2 @go(InitProvider)
}

// TransitGatewayStatus defines the observed state of TransitGateway.
#TransitGatewayStatus: {
	v1.#ResourceStatus
	atProvider?: #TransitGatewayObservation_2 @go(AtProvider)
}

// TransitGateway is the Schema for the TransitGateways API. Manages an EC2 Transit Gateway
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGateway: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec:      #TransitGatewaySpec   @go(Spec)
	status?:   #TransitGatewayStatus @go(Status)
}

// TransitGatewayList contains a list of TransitGateways
#TransitGatewayList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TransitGateway] @go(Items,[]TransitGateway)
}
