// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/applicationinsights/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ApplicationInitParameters: {
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	autoConfigEnabled?: null | bool @go(AutoConfigEnabled,*bool)

	// Configures all of the resources in the resource group by applying the recommended configurations.
	autoCreate?: null | bool @go(AutoCreate,*bool)

	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	cweMonitorEnabled?: null | bool @go(CweMonitorEnabled,*bool)

	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to ACCOUNT_BASED.
	groupingType?: null | string @go(GroupingType,*string)

	// When set to true, creates opsItems for any problems detected on an application.
	opsCenterEnabled?: null | bool @go(OpsCenterEnabled,*bool)

	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	opsItemSnsTopicArn?: null | string @go(OpsItemSnsTopicArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ApplicationObservation: {
	// ARN of the Application.
	arn?: null | string @go(Arn,*string)

	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	autoConfigEnabled?: null | bool @go(AutoConfigEnabled,*bool)

	// Configures all of the resources in the resource group by applying the recommended configurations.
	autoCreate?: null | bool @go(AutoCreate,*bool)

	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	cweMonitorEnabled?: null | bool @go(CweMonitorEnabled,*bool)

	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to ACCOUNT_BASED.
	groupingType?: null | string @go(GroupingType,*string)

	// Name of the resource group.
	id?: null | string @go(ID,*string)

	// When set to true, creates opsItems for any problems detected on an application.
	opsCenterEnabled?: null | bool @go(OpsCenterEnabled,*bool)

	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	opsItemSnsTopicArn?: null | string @go(OpsItemSnsTopicArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ApplicationParameters: {
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	// +kubebuilder:validation:Optional
	autoConfigEnabled?: null | bool @go(AutoConfigEnabled,*bool)

	// Configures all of the resources in the resource group by applying the recommended configurations.
	// +kubebuilder:validation:Optional
	autoCreate?: null | bool @go(AutoCreate,*bool)

	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	// +kubebuilder:validation:Optional
	cweMonitorEnabled?: null | bool @go(CweMonitorEnabled,*bool)

	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to ACCOUNT_BASED.
	// +kubebuilder:validation:Optional
	groupingType?: null | string @go(GroupingType,*string)

	// When set to true, creates opsItems for any problems detected on an application.
	// +kubebuilder:validation:Optional
	opsCenterEnabled?: null | bool @go(OpsCenterEnabled,*bool)

	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	// +kubebuilder:validation:Optional
	opsItemSnsTopicArn?: null | string @go(OpsItemSnsTopicArn,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ApplicationSpec defines the desired state of Application
#ApplicationSpec: {
	v1.#ResourceSpec
	forProvider: #ApplicationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ApplicationInitParameters @go(InitProvider)
}

// ApplicationStatus defines the observed state of Application.
#ApplicationStatus: {
	v1.#ResourceStatus
	atProvider?: #ApplicationObservation @go(AtProvider)
}

// Application is the Schema for the Applications API. Provides a CloudWatch Application Insights Application resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Application: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #ApplicationSpec   @go(Spec)
	status?:   #ApplicationStatus @go(Status)
}

// ApplicationList contains a list of Applications
#ApplicationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Application] @go(Items,[]Application)
}
