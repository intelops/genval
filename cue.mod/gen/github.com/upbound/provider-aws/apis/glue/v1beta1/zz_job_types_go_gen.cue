// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/glue/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#CommandInitParameters: {
	// –  The name you assign to this job. It must be unique in your account.
	name?: null | string @go(Name,*string)

	// The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.
	pythonVersion?: null | string @go(PythonVersion,*string)

	// Specifies the S3 path to a script that executes a job.
	scriptLocation?: null | string @go(ScriptLocation,*string)
}

#CommandObservation: {
	// –  The name you assign to this job. It must be unique in your account.
	name?: null | string @go(Name,*string)

	// The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.
	pythonVersion?: null | string @go(PythonVersion,*string)

	// Specifies the S3 path to a script that executes a job.
	scriptLocation?: null | string @go(ScriptLocation,*string)
}

#CommandParameters: {
	// –  The name you assign to this job. It must be unique in your account.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.
	// +kubebuilder:validation:Optional
	pythonVersion?: null | string @go(PythonVersion,*string)

	// Specifies the S3 path to a script that executes a job.
	// +kubebuilder:validation:Optional
	scriptLocation?: null | string @go(ScriptLocation,*string)
}

#ExecutionPropertyInitParameters: {
	// The maximum number of concurrent runs allowed for a job. The default is 1.
	maxConcurrentRuns?: null | float64 @go(MaxConcurrentRuns,*float64)
}

#ExecutionPropertyObservation: {
	// The maximum number of concurrent runs allowed for a job. The default is 1.
	maxConcurrentRuns?: null | float64 @go(MaxConcurrentRuns,*float64)
}

#ExecutionPropertyParameters: {
	// The maximum number of concurrent runs allowed for a job. The default is 1.
	// +kubebuilder:validation:Optional
	maxConcurrentRuns?: null | float64 @go(MaxConcurrentRuns,*float64)
}

#JobInitParameters: {
	// –  The command of the job. Defined below.
	command?: [...#CommandInitParameters] @go(Command,[]CommandInitParameters)

	// –  The list of connections used for this job.
	connections?: [...null | string] @go(Connections,[]*string)

	// execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.
	defaultArguments?: {[string]: null | string} @go(DefaultArguments,map[string]*string)

	// –  Description of the job.
	description?: null | string @go(Description,*string)

	// Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: FLEX, STANDARD.
	executionClass?: null | string @go(ExecutionClass,*string)

	// –  Execution property of the job. Defined below.
	executionProperty?: [...#ExecutionPropertyInitParameters] @go(ExecutionProperty,[]ExecutionPropertyInitParameters)

	// The version of glue to use, for example "1.0". For information about available versions, see the AWS Glue Release Notes.
	glueVersion?: null | string @go(GlueVersion,*string)

	// –  The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// –  The maximum number of times to retry this job if it fails.
	maxRetries?: null | float64 @go(MaxRetries,*float64)

	// overridable arguments for this job, specified as name-value pairs.
	nonOverridableArguments?: {[string]: null | string} @go(NonOverridableArguments,map[string]*string)

	// Notification property of the job. Defined below.
	notificationProperty?: [...#NotificationPropertyInitParameters] @go(NotificationProperty,[]NotificationPropertyInitParameters)

	// The number of workers of a defined workerType that are allocated when a job runs.
	numberOfWorkers?: null | float64 @go(NumberOfWorkers,*float64)

	// The name of the Security Configuration to be associated with the job.
	securityConfiguration?: null | string @go(SecurityConfiguration,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// –  The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimited) for gluestreaming jobs.
	timeout?: null | float64 @go(Timeout,*float64)

	// The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
	workerType?: null | string @go(WorkerType,*string)
}

#JobObservation: {
	// Amazon Resource Name (ARN) of Glue Job
	arn?: null | string @go(Arn,*string)

	// –  The command of the job. Defined below.
	command?: [...#CommandObservation] @go(Command,[]CommandObservation)

	// –  The list of connections used for this job.
	connections?: [...null | string] @go(Connections,[]*string)

	// execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.
	defaultArguments?: {[string]: null | string} @go(DefaultArguments,map[string]*string)

	// –  Description of the job.
	description?: null | string @go(Description,*string)

	// Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: FLEX, STANDARD.
	executionClass?: null | string @go(ExecutionClass,*string)

	// –  Execution property of the job. Defined below.
	executionProperty?: [...#ExecutionPropertyObservation] @go(ExecutionProperty,[]ExecutionPropertyObservation)

	// The version of glue to use, for example "1.0". For information about available versions, see the AWS Glue Release Notes.
	glueVersion?: null | string @go(GlueVersion,*string)

	// Job name
	id?: null | string @go(ID,*string)

	// –  The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// –  The maximum number of times to retry this job if it fails.
	maxRetries?: null | float64 @go(MaxRetries,*float64)

	// overridable arguments for this job, specified as name-value pairs.
	nonOverridableArguments?: {[string]: null | string} @go(NonOverridableArguments,map[string]*string)

	// Notification property of the job. Defined below.
	notificationProperty?: [...#NotificationPropertyObservation] @go(NotificationProperty,[]NotificationPropertyObservation)

	// The number of workers of a defined workerType that are allocated when a job runs.
	numberOfWorkers?: null | float64 @go(NumberOfWorkers,*float64)

	// –  The ARN of the IAM role associated with this job.
	roleArn?: null | string @go(RoleArn,*string)

	// The name of the Security Configuration to be associated with the job.
	securityConfiguration?: null | string @go(SecurityConfiguration,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// –  The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimited) for gluestreaming jobs.
	timeout?: null | float64 @go(Timeout,*float64)

	// The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
	workerType?: null | string @go(WorkerType,*string)
}

#JobParameters: {
	// –  The command of the job. Defined below.
	// +kubebuilder:validation:Optional
	command?: [...#CommandParameters] @go(Command,[]CommandParameters)

	// –  The list of connections used for this job.
	// +kubebuilder:validation:Optional
	connections?: [...null | string] @go(Connections,[]*string)

	// execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.
	// +kubebuilder:validation:Optional
	defaultArguments?: {[string]: null | string} @go(DefaultArguments,map[string]*string)

	// –  Description of the job.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: FLEX, STANDARD.
	// +kubebuilder:validation:Optional
	executionClass?: null | string @go(ExecutionClass,*string)

	// –  Execution property of the job. Defined below.
	// +kubebuilder:validation:Optional
	executionProperty?: [...#ExecutionPropertyParameters] @go(ExecutionProperty,[]ExecutionPropertyParameters)

	// The version of glue to use, for example "1.0". For information about available versions, see the AWS Glue Release Notes.
	// +kubebuilder:validation:Optional
	glueVersion?: null | string @go(GlueVersion,*string)

	// –  The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.
	// +kubebuilder:validation:Optional
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// –  The maximum number of times to retry this job if it fails.
	// +kubebuilder:validation:Optional
	maxRetries?: null | float64 @go(MaxRetries,*float64)

	// overridable arguments for this job, specified as name-value pairs.
	// +kubebuilder:validation:Optional
	nonOverridableArguments?: {[string]: null | string} @go(NonOverridableArguments,map[string]*string)

	// Notification property of the job. Defined below.
	// +kubebuilder:validation:Optional
	notificationProperty?: [...#NotificationPropertyParameters] @go(NotificationProperty,[]NotificationPropertyParameters)

	// The number of workers of a defined workerType that are allocated when a job runs.
	// +kubebuilder:validation:Optional
	numberOfWorkers?: null | float64 @go(NumberOfWorkers,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// –  The ARN of the IAM role associated with this job.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Reference to a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	roleArnRef?: null | v1.#Reference @go(RoleArnRef,*v1.Reference)

	// Selector for a Role in iam to populate roleArn.
	// +kubebuilder:validation:Optional
	roleArnSelector?: null | v1.#Selector @go(RoleArnSelector,*v1.Selector)

	// The name of the Security Configuration to be associated with the job.
	// +kubebuilder:validation:Optional
	securityConfiguration?: null | string @go(SecurityConfiguration,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// –  The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimited) for gluestreaming jobs.
	// +kubebuilder:validation:Optional
	timeout?: null | float64 @go(Timeout,*float64)

	// The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
	// +kubebuilder:validation:Optional
	workerType?: null | string @go(WorkerType,*string)
}

#NotificationPropertyInitParameters: {
	// After a job run starts, the number of minutes to wait before sending a job run delay notification.
	notifyDelayAfter?: null | float64 @go(NotifyDelayAfter,*float64)
}

#NotificationPropertyObservation: {
	// After a job run starts, the number of minutes to wait before sending a job run delay notification.
	notifyDelayAfter?: null | float64 @go(NotifyDelayAfter,*float64)
}

#NotificationPropertyParameters: {
	// After a job run starts, the number of minutes to wait before sending a job run delay notification.
	// +kubebuilder:validation:Optional
	notifyDelayAfter?: null | float64 @go(NotifyDelayAfter,*float64)
}

// JobSpec defines the desired state of Job
#JobSpec: {
	v1.#ResourceSpec
	forProvider: #JobParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #JobInitParameters @go(InitProvider)
}

// JobStatus defines the observed state of Job.
#JobStatus: {
	v1.#ResourceStatus
	atProvider?: #JobObservation @go(AtProvider)
}

// Job is the Schema for the Jobs API. Provides an Glue Job resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Job: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.command) || (has(self.initProvider) && has(self.initProvider.command))",message="spec.forProvider.command is a required parameter"
	spec:    #JobSpec   @go(Spec)
	status?: #JobStatus @go(Status)
}

// JobList contains a list of Jobs
#JobList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Job] @go(Items,[]Job)
}
