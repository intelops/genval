// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/configservice/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ConformancePackInitParameters: {
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	deliveryS3Bucket?: null | string @go(DeliveryS3Bucket,*string)

	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	deliveryS3KeyPrefix?: null | string @go(DeliveryS3KeyPrefix,*string)

	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the template_body or in the template stored in Amazon S3 if using template_s3_uri.
	inputParameter?: [...#InputParameterInitParameters] @go(InputParameter,[]InputParameterInitParameters)

	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	templateBody?: null | string @go(TemplateBody,*string)

	// Location of file, e.g., s3://bucketname/prefix, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	templateS3Uri?: null | string @go(TemplateS3URI,*string)
}

#ConformancePackObservation: {
	// Amazon Resource Name (ARN) of the conformance pack.
	arn?: null | string @go(Arn,*string)

	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	deliveryS3Bucket?: null | string @go(DeliveryS3Bucket,*string)

	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	deliveryS3KeyPrefix?: null | string @go(DeliveryS3KeyPrefix,*string)
	id?:                  null | string @go(ID,*string)

	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the template_body or in the template stored in Amazon S3 if using template_s3_uri.
	inputParameter?: [...#InputParameterObservation] @go(InputParameter,[]InputParameterObservation)

	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	templateBody?: null | string @go(TemplateBody,*string)

	// Location of file, e.g., s3://bucketname/prefix, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	templateS3Uri?: null | string @go(TemplateS3URI,*string)
}

#ConformancePackParameters: {
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	// +kubebuilder:validation:Optional
	deliveryS3Bucket?: null | string @go(DeliveryS3Bucket,*string)

	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	// +kubebuilder:validation:Optional
	deliveryS3KeyPrefix?: null | string @go(DeliveryS3KeyPrefix,*string)

	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the template_body or in the template stored in Amazon S3 if using template_s3_uri.
	// +kubebuilder:validation:Optional
	inputParameter?: [...#InputParameterParameters] @go(InputParameter,[]InputParameterParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	// +kubebuilder:validation:Optional
	templateBody?: null | string @go(TemplateBody,*string)

	// Location of file, e.g., s3://bucketname/prefix, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	// +kubebuilder:validation:Optional
	templateS3Uri?: null | string @go(TemplateS3URI,*string)
}

#InputParameterInitParameters: {
	// The input key.
	parameterName?: null | string @go(ParameterName,*string)

	// The input value.
	parameterValue?: null | string @go(ParameterValue,*string)
}

#InputParameterObservation: {
	// The input key.
	parameterName?: null | string @go(ParameterName,*string)

	// The input value.
	parameterValue?: null | string @go(ParameterValue,*string)
}

#InputParameterParameters: {
	// The input key.
	// +kubebuilder:validation:Optional
	parameterName?: null | string @go(ParameterName,*string)

	// The input value.
	// +kubebuilder:validation:Optional
	parameterValue?: null | string @go(ParameterValue,*string)
}

// ConformancePackSpec defines the desired state of ConformancePack
#ConformancePackSpec: {
	v1.#ResourceSpec
	forProvider: #ConformancePackParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ConformancePackInitParameters @go(InitProvider)
}

// ConformancePackStatus defines the observed state of ConformancePack.
#ConformancePackStatus: {
	v1.#ResourceStatus
	atProvider?: #ConformancePackObservation @go(AtProvider)
}

// ConformancePack is the Schema for the ConformancePacks API. Manages a Config Conformance Pack
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConformancePack: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta     @go(ObjectMeta)
	spec:      #ConformancePackSpec   @go(Spec)
	status?:   #ConformancePackStatus @go(Status)
}

// ConformancePackList contains a list of ConformancePacks
#ConformancePackList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ConformancePack] @go(Items,[]ConformancePack)
}
