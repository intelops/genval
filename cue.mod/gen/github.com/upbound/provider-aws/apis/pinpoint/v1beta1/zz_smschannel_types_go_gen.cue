// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/pinpoint/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#SMSChannelInitParameters: {
	// Whether the channel is enabled or disabled. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// Sender identifier of your messages.
	senderId?: null | string @go(SenderID,*string)

	// The Short Code registered with the phone provider.
	shortCode?: null | string @go(ShortCode,*string)
}

#SMSChannelObservation: {
	// The application ID.
	applicationId?: null | string @go(ApplicationID,*string)

	// Whether the channel is enabled or disabled. Defaults to true.
	enabled?: null | bool   @go(Enabled,*bool)
	id?:      null | string @go(ID,*string)

	// Promotional messages per second that can be sent.
	promotionalMessagesPerSecond?: null | float64 @go(PromotionalMessagesPerSecond,*float64)

	// Sender identifier of your messages.
	senderId?: null | string @go(SenderID,*string)

	// The Short Code registered with the phone provider.
	shortCode?: null | string @go(ShortCode,*string)

	// Transactional messages per second that can be sent.
	transactionalMessagesPerSecond?: null | float64 @go(TransactionalMessagesPerSecond,*float64)
}

#SMSChannelParameters: {
	// The application ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/pinpoint/v1beta1.App
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("application_id",true)
	// +kubebuilder:validation:Optional
	applicationId?: null | string @go(ApplicationID,*string)

	// Reference to a App in pinpoint to populate applicationId.
	// +kubebuilder:validation:Optional
	applicationIdRef?: null | v1.#Reference @go(ApplicationIDRef,*v1.Reference)

	// Selector for a App in pinpoint to populate applicationId.
	// +kubebuilder:validation:Optional
	applicationIdSelector?: null | v1.#Selector @go(ApplicationIDSelector,*v1.Selector)

	// Whether the channel is enabled or disabled. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Sender identifier of your messages.
	// +kubebuilder:validation:Optional
	senderId?: null | string @go(SenderID,*string)

	// The Short Code registered with the phone provider.
	// +kubebuilder:validation:Optional
	shortCode?: null | string @go(ShortCode,*string)
}

// SMSChannelSpec defines the desired state of SMSChannel
#SMSChannelSpec: {
	v1.#ResourceSpec
	forProvider: #SMSChannelParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SMSChannelInitParameters @go(InitProvider)
}

// SMSChannelStatus defines the observed state of SMSChannel.
#SMSChannelStatus: {
	v1.#ResourceStatus
	atProvider?: #SMSChannelObservation @go(AtProvider)
}

// SMSChannel is the Schema for the SMSChannels API. Provides a Pinpoint SMS Channel resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SMSChannel: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #SMSChannelSpec    @go(Spec)
	status?:   #SMSChannelStatus  @go(Status)
}

// SMSChannelList contains a list of SMSChannels
#SMSChannelList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#SMSChannel] @go(Items,[]SMSChannel)
}
