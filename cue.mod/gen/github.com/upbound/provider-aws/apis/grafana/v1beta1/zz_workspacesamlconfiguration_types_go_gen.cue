// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/grafana/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#WorkspaceSAMLConfigurationInitParameters: {
	// The admin role values.
	adminRoleValues?: [...null | string] @go(AdminRoleValues,[]*string)

	// The allowed organizations.
	allowedOrganizations?: [...null | string] @go(AllowedOrganizations,[]*string)

	// The editor role values.
	editorRoleValues?: [...null | string] @go(EditorRoleValues,[]*string)

	// The email assertion.
	emailAssertion?: null | string @go(EmailAssertion,*string)

	// The groups assertion.
	groupsAssertion?: null | string @go(GroupsAssertion,*string)

	// The IDP Metadata URL. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.
	idpMetadataUrl?: null | string @go(IdpMetadataURL,*string)

	// The IDP Metadata XML. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.
	idpMetadataXml?: null | string @go(IdpMetadataXML,*string)

	// The login assertion.
	loginAssertion?: null | string @go(LoginAssertion,*string)

	// The login validity duration.
	loginValidityDuration?: null | float64 @go(LoginValidityDuration,*float64)

	// The name assertion.
	nameAssertion?: null | string @go(NameAssertion,*string)

	// The org assertion.
	orgAssertion?: null | string @go(OrgAssertion,*string)

	// The role assertion.
	roleAssertion?: null | string @go(RoleAssertion,*string)
}

#WorkspaceSAMLConfigurationObservation: {
	// The admin role values.
	adminRoleValues?: [...null | string] @go(AdminRoleValues,[]*string)

	// The allowed organizations.
	allowedOrganizations?: [...null | string] @go(AllowedOrganizations,[]*string)

	// The editor role values.
	editorRoleValues?: [...null | string] @go(EditorRoleValues,[]*string)

	// The email assertion.
	emailAssertion?: null | string @go(EmailAssertion,*string)

	// The groups assertion.
	groupsAssertion?: null | string @go(GroupsAssertion,*string)
	id?:              null | string @go(ID,*string)

	// The IDP Metadata URL. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.
	idpMetadataUrl?: null | string @go(IdpMetadataURL,*string)

	// The IDP Metadata XML. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.
	idpMetadataXml?: null | string @go(IdpMetadataXML,*string)

	// The login assertion.
	loginAssertion?: null | string @go(LoginAssertion,*string)

	// The login validity duration.
	loginValidityDuration?: null | float64 @go(LoginValidityDuration,*float64)

	// The name assertion.
	nameAssertion?: null | string @go(NameAssertion,*string)

	// The org assertion.
	orgAssertion?: null | string @go(OrgAssertion,*string)

	// The role assertion.
	roleAssertion?: null | string @go(RoleAssertion,*string)

	// The status of the SAML configuration.
	status?: null | string @go(Status,*string)

	// The workspace id.
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#WorkspaceSAMLConfigurationParameters: {
	// The admin role values.
	// +kubebuilder:validation:Optional
	adminRoleValues?: [...null | string] @go(AdminRoleValues,[]*string)

	// The allowed organizations.
	// +kubebuilder:validation:Optional
	allowedOrganizations?: [...null | string] @go(AllowedOrganizations,[]*string)

	// The editor role values.
	// +kubebuilder:validation:Optional
	editorRoleValues?: [...null | string] @go(EditorRoleValues,[]*string)

	// The email assertion.
	// +kubebuilder:validation:Optional
	emailAssertion?: null | string @go(EmailAssertion,*string)

	// The groups assertion.
	// +kubebuilder:validation:Optional
	groupsAssertion?: null | string @go(GroupsAssertion,*string)

	// The IDP Metadata URL. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.
	// +kubebuilder:validation:Optional
	idpMetadataUrl?: null | string @go(IdpMetadataURL,*string)

	// The IDP Metadata XML. Note that either idp_metadata_url or idp_metadata_xml (but not both) must be specified.
	// +kubebuilder:validation:Optional
	idpMetadataXml?: null | string @go(IdpMetadataXML,*string)

	// The login assertion.
	// +kubebuilder:validation:Optional
	loginAssertion?: null | string @go(LoginAssertion,*string)

	// The login validity duration.
	// +kubebuilder:validation:Optional
	loginValidityDuration?: null | float64 @go(LoginValidityDuration,*float64)

	// The name assertion.
	// +kubebuilder:validation:Optional
	nameAssertion?: null | string @go(NameAssertion,*string)

	// The org assertion.
	// +kubebuilder:validation:Optional
	orgAssertion?: null | string @go(OrgAssertion,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The role assertion.
	// +kubebuilder:validation:Optional
	roleAssertion?: null | string @go(RoleAssertion,*string)

	// The workspace id.
	// +crossplane:generate:reference:type=Workspace
	// +kubebuilder:validation:Optional
	workspaceId?: null | string @go(WorkspaceID,*string)

	// Reference to a Workspace to populate workspaceId.
	// +kubebuilder:validation:Optional
	workspaceIdRef?: null | v1.#Reference @go(WorkspaceIDRef,*v1.Reference)

	// Selector for a Workspace to populate workspaceId.
	// +kubebuilder:validation:Optional
	workspaceIdSelector?: null | v1.#Selector @go(WorkspaceIDSelector,*v1.Selector)
}

// WorkspaceSAMLConfigurationSpec defines the desired state of WorkspaceSAMLConfiguration
#WorkspaceSAMLConfigurationSpec: {
	v1.#ResourceSpec
	forProvider: #WorkspaceSAMLConfigurationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #WorkspaceSAMLConfigurationInitParameters @go(InitProvider)
}

// WorkspaceSAMLConfigurationStatus defines the observed state of WorkspaceSAMLConfiguration.
#WorkspaceSAMLConfigurationStatus: {
	v1.#ResourceStatus
	atProvider?: #WorkspaceSAMLConfigurationObservation @go(AtProvider)
}

// WorkspaceSAMLConfiguration is the Schema for the WorkspaceSAMLConfigurations API. Provides an Amazon Managed Grafana workspace SAML configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#WorkspaceSAMLConfiguration: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.editorRoleValues) || (has(self.initProvider) && has(self.initProvider.editorRoleValues))",message="spec.forProvider.editorRoleValues is a required parameter"
	spec:    #WorkspaceSAMLConfigurationSpec   @go(Spec)
	status?: #WorkspaceSAMLConfigurationStatus @go(Status)
}

// WorkspaceSAMLConfigurationList contains a list of WorkspaceSAMLConfigurations
#WorkspaceSAMLConfigurationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#WorkspaceSAMLConfiguration] @go(Items,[]WorkspaceSAMLConfiguration)
}
