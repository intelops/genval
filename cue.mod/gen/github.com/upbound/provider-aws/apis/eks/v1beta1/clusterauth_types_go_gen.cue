// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/eks/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ClusterAuthParameters: {
	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// ClusterName is the name of the cluster you'd like to fetch Kubeconfig of.
	// Either ClusterName, ClusterNameRef or ClusterNameSelector has to be given.
	// +crossplane:generate:reference:type=Cluster
	// +crossplane:generate:reference:extractor=ExternalNameIfClusterActive()
	clusterName?: string @go(ClusterName)

	// Reference to a Cluster to populate clusterName.
	// Either ClusterName, ClusterNameRef or ClusterNameSelector has to be given.
	// +kubebuilder:validation:Optional
	clusterNameRef?: null | v1.#Reference @go(ClusterNameRef,*v1.Reference)

	// Selector for a Cluster to populate clusterName.
	// Either ClusterName, ClusterNameRef or ClusterNameSelector has to be given.
	// +kubebuilder:validation:Optional
	clusterNameSelector?: null | v1.#Selector @go(ClusterNameSelector,*v1.Selector)

	// RefreshPeriod is how frequently you'd like the token in the published
	// Kubeconfig to be refreshed. The maximum is 10m0s.
	// The default is 10m0s.
	// +kubebuilder:default:="10m0s"
	refreshPeriod?: null | metav1.#Duration @go(RefreshPeriod,*metav1.Duration)
}

#ClusterAuthObservation: {
	// LastRefreshTime is the time when the token was refreshed.
	lastRefreshTime?: null | metav1.#Time @go(LastRefreshTime,*metav1.Time)
}

// ClusterAuthSpec defines the desired state of ClusterAuth
#ClusterAuthSpec: {
	v1.#ResourceSpec
	forProvider: #ClusterAuthParameters @go(ForProvider)
}

// ClusterAuthStatus defines the observed state of ClusterAuth.
#ClusterAuthStatus: {
	v1.#ResourceStatus
	atProvider?: #ClusterAuthObservation @go(AtProvider)
}

// ClusterAuth is used to retrieve Kubeconfig of given EKS cluster.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ClusterAuth: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #ClusterAuthSpec   @go(Spec)
	status?:   #ClusterAuthStatus @go(Status)
}

// ClusterAuthList contains a list of ClusterAuths
#ClusterAuthList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ClusterAuth] @go(Items,[]ClusterAuth)
}
