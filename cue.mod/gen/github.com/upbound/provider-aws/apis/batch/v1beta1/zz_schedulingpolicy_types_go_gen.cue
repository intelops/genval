// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/batch/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#FairSharePolicyInitParameters: {
	// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see FairsharePolicy.
	computeReservation?: null | float64 @go(ComputeReservation,*float64)
	shareDecaySeconds?:  null | float64 @go(ShareDecaySeconds,*float64)

	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see FairsharePolicy. The share_distribution block is documented below.
	shareDistribution?: [...#ShareDistributionInitParameters] @go(ShareDistribution,[]ShareDistributionInitParameters)
}

#FairSharePolicyObservation: {
	// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see FairsharePolicy.
	computeReservation?: null | float64 @go(ComputeReservation,*float64)
	shareDecaySeconds?:  null | float64 @go(ShareDecaySeconds,*float64)

	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see FairsharePolicy. The share_distribution block is documented below.
	shareDistribution?: [...#ShareDistributionObservation] @go(ShareDistribution,[]ShareDistributionObservation)
}

#FairSharePolicyParameters: {
	// A value used to reserve some of the available maximum vCPU for fair share identifiers that have not yet been used. For more information, see FairsharePolicy.
	// +kubebuilder:validation:Optional
	computeReservation?: null | float64 @go(ComputeReservation,*float64)

	// +kubebuilder:validation:Optional
	shareDecaySeconds?: null | float64 @go(ShareDecaySeconds,*float64)

	// One or more share distribution blocks which define the weights for the fair share identifiers for the fair share policy. For more information, see FairsharePolicy. The share_distribution block is documented below.
	// +kubebuilder:validation:Optional
	shareDistribution?: [...#ShareDistributionParameters] @go(ShareDistribution,[]ShareDistributionParameters)
}

#SchedulingPolicyInitParameters: {
	fairSharePolicy?: [...#FairSharePolicyInitParameters] @go(FairSharePolicy,[]FairSharePolicyInitParameters)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SchedulingPolicyObservation: {
	// The Amazon Resource Name of the scheduling policy.
	arn?: null | string @go(Arn,*string)
	fairSharePolicy?: [...#FairSharePolicyObservation] @go(FairSharePolicy,[]FairSharePolicyObservation)
	id?: null | string @go(ID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#SchedulingPolicyParameters: {
	// +kubebuilder:validation:Optional
	fairSharePolicy?: [...#FairSharePolicyParameters] @go(FairSharePolicy,[]FairSharePolicyParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ShareDistributionInitParameters: {
	// A fair share identifier or fair share identifier prefix. For more information, see ShareAttributes.
	shareIdentifier?: null | string @go(ShareIdentifier,*string)

	// The weight factor for the fair share identifier. For more information, see ShareAttributes.
	weightFactor?: null | float64 @go(WeightFactor,*float64)
}

#ShareDistributionObservation: {
	// A fair share identifier or fair share identifier prefix. For more information, see ShareAttributes.
	shareIdentifier?: null | string @go(ShareIdentifier,*string)

	// The weight factor for the fair share identifier. For more information, see ShareAttributes.
	weightFactor?: null | float64 @go(WeightFactor,*float64)
}

#ShareDistributionParameters: {
	// A fair share identifier or fair share identifier prefix. For more information, see ShareAttributes.
	// +kubebuilder:validation:Optional
	shareIdentifier?: null | string @go(ShareIdentifier,*string)

	// The weight factor for the fair share identifier. For more information, see ShareAttributes.
	// +kubebuilder:validation:Optional
	weightFactor?: null | float64 @go(WeightFactor,*float64)
}

// SchedulingPolicySpec defines the desired state of SchedulingPolicy
#SchedulingPolicySpec: {
	v1.#ResourceSpec
	forProvider: #SchedulingPolicyParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SchedulingPolicyInitParameters @go(InitProvider)
}

// SchedulingPolicyStatus defines the observed state of SchedulingPolicy.
#SchedulingPolicyStatus: {
	v1.#ResourceStatus
	atProvider?: #SchedulingPolicyObservation @go(AtProvider)
}

// SchedulingPolicy is the Schema for the SchedulingPolicys API. Provides a Batch Scheduling Policy resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SchedulingPolicy: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta      @go(ObjectMeta)
	spec:      #SchedulingPolicySpec   @go(Spec)
	status?:   #SchedulingPolicyStatus @go(Status)
}

// SchedulingPolicyList contains a list of SchedulingPolicys
#SchedulingPolicyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#SchedulingPolicy] @go(Items,[]SchedulingPolicy)
}
