// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lexmodels/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#BotAliasInitParameters: {
	// The name of the bot.
	botName?: null | string @go(BotName,*string)

	// The name of the bot.
	botVersion?: null | string @go(BotVersion,*string)

	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	conversationLogs?: [...#ConversationLogsInitParameters] @go(ConversationLogs,[]ConversationLogsInitParameters)

	// A description of the alias. Must be less than or equal to 200 characters in length.
	description?: null | string @go(Description,*string)
}

#BotAliasObservation: {
	// The ARN of the bot alias.
	arn?: null | string @go(Arn,*string)

	// The name of the bot.
	botName?: null | string @go(BotName,*string)

	// The name of the bot.
	botVersion?: null | string @go(BotVersion,*string)

	// Checksum of the bot alias.
	checksum?: null | string @go(Checksum,*string)

	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	conversationLogs?: [...#ConversationLogsObservation] @go(ConversationLogs,[]ConversationLogsObservation)

	// The date that the bot alias was created.
	createdDate?: null | string @go(CreatedDate,*string)

	// A description of the alias. Must be less than or equal to 200 characters in length.
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)

	// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
	lastUpdatedDate?: null | string @go(LastUpdatedDate,*string)
}

#BotAliasParameters: {
	// The name of the bot.
	// +kubebuilder:validation:Optional
	botName?: null | string @go(BotName,*string)

	// The name of the bot.
	// +kubebuilder:validation:Optional
	botVersion?: null | string @go(BotVersion,*string)

	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	// +kubebuilder:validation:Optional
	conversationLogs?: [...#ConversationLogsParameters] @go(ConversationLogs,[]ConversationLogsParameters)

	// A description of the alias. Must be less than or equal to 200 characters in length.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#ConversationLogsInitParameters: {
	// The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
	iamRoleArn?: null | string @go(IAMRoleArn,*string)

	// The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
	logSettings?: [...#LogSettingsInitParameters] @go(LogSettings,[]LogSettingsInitParameters)
}

#ConversationLogsObservation: {
	// The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
	iamRoleArn?: null | string @go(IAMRoleArn,*string)

	// The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
	logSettings?: [...#LogSettingsObservation] @go(LogSettings,[]LogSettingsObservation)
}

#ConversationLogsParameters: {
	// The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
	// +kubebuilder:validation:Optional
	iamRoleArn?: null | string @go(IAMRoleArn,*string)

	// The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
	// +kubebuilder:validation:Optional
	logSettings?: [...#LogSettingsParameters] @go(LogSettings,[]LogSettingsParameters)
}

#LogSettingsInitParameters: {
	// The destination where logs are delivered. Options are CLOUDWATCH_LOGS or S3.
	destination?: null | string @go(Destination,*string)

	// The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when destination is set to S3. Must be between 20 and 2048 characters in length.
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The type of logging that is enabled. Options are AUDIO or TEXT.
	logType?: null | string @go(LogType,*string)

	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
	resourceArn?: null | string @go(ResourceArn,*string)
}

#LogSettingsObservation: {
	// The destination where logs are delivered. Options are CLOUDWATCH_LOGS or S3.
	destination?: null | string @go(Destination,*string)

	// The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when destination is set to S3. Must be between 20 and 2048 characters in length.
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The type of logging that is enabled. Options are AUDIO or TEXT.
	logType?: null | string @go(LogType,*string)

	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
	resourceArn?: null | string @go(ResourceArn,*string)

	// (Computed) The prefix of the S3 object key for AUDIO logs or the log stream name for TEXT logs.
	resourcePrefix?: null | string @go(ResourcePrefix,*string)
}

#LogSettingsParameters: {
	// The destination where logs are delivered. Options are CLOUDWATCH_LOGS or S3.
	// +kubebuilder:validation:Optional
	destination?: null | string @go(Destination,*string)

	// The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when destination is set to S3. Must be between 20 and 2048 characters in length.
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The type of logging that is enabled. Options are AUDIO or TEXT.
	// +kubebuilder:validation:Optional
	logType?: null | string @go(LogType,*string)

	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
	// +kubebuilder:validation:Optional
	resourceArn?: null | string @go(ResourceArn,*string)
}

// BotAliasSpec defines the desired state of BotAlias
#BotAliasSpec: {
	v1.#ResourceSpec
	forProvider: #BotAliasParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BotAliasInitParameters @go(InitProvider)
}

// BotAliasStatus defines the observed state of BotAlias.
#BotAliasStatus: {
	v1.#ResourceStatus
	atProvider?: #BotAliasObservation @go(AtProvider)
}

// BotAlias is the Schema for the BotAliass API. Provides an Amazon Lex Bot Alias resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BotAlias: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.botName) || (has(self.initProvider) && has(self.initProvider.botName))",message="spec.forProvider.botName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.botVersion) || (has(self.initProvider) && has(self.initProvider.botVersion))",message="spec.forProvider.botVersion is a required parameter"
	spec:    #BotAliasSpec   @go(Spec)
	status?: #BotAliasStatus @go(Status)
}

// BotAliasList contains a list of BotAliass
#BotAliasList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#BotAlias] @go(Items,[]BotAlias)
}
