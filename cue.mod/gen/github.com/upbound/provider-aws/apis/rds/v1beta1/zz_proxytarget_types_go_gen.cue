// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ProxyTargetInitParameters: {
	// DB cluster identifier.
	dbClusterIdentifier?: null | string @go(DBClusterIdentifier,*string)

	// The name of the target group.
	targetGroupName?: null | string @go(TargetGroupName,*string)
}

#ProxyTargetObservation: {
	// DB cluster identifier.
	dbClusterIdentifier?: null | string @go(DBClusterIdentifier,*string)

	// DB instance identifier.
	dbInstanceIdentifier?: null | string @go(DBInstanceIdentifier,*string)

	// The name of the DB proxy.
	dbProxyName?: null | string @go(DBProxyName,*string)

	// Hostname for the target RDS DB Instance. Only returned for RDS_INSTANCE type.
	endpoint?: null | string @go(Endpoint,*string)

	// Identifier of  db_proxy_name, target_group_name, target type (e.g., RDS_INSTANCE or TRACKED_CLUSTER), and resource identifier separated by forward slashes (/).
	id?: null | string @go(ID,*string)

	// Port for the target RDS DB Instance or Aurora DB Cluster.
	port?: null | float64 @go(Port,*float64)

	// Identifier representing the DB Instance or DB Cluster target.
	rdsResourceId?: null | string @go(RDSResourceID,*string)

	// Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
	targetArn?: null | string @go(TargetArn,*string)

	// The name of the target group.
	targetGroupName?: null | string @go(TargetGroupName,*string)

	// DB Cluster identifier for the DB Instance target. Not returned unless manually importing an RDS_INSTANCE target that is part of a DB Cluster.
	trackedClusterId?: null | string @go(TrackedClusterID,*string)

	// Type of targetE.g., RDS_INSTANCE or TRACKED_CLUSTER
	type?: null | string @go(Type,*string)
}

#ProxyTargetParameters: {
	// DB cluster identifier.
	// +kubebuilder:validation:Optional
	dbClusterIdentifier?: null | string @go(DBClusterIdentifier,*string)

	// DB instance identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dbInstanceIdentifier?: null | string @go(DBInstanceIdentifier,*string)

	// Reference to a Instance in rds to populate dbInstanceIdentifier.
	// +kubebuilder:validation:Optional
	dbInstanceIdentifierRef?: null | v1.#Reference @go(DBInstanceIdentifierRef,*v1.Reference)

	// Selector for a Instance in rds to populate dbInstanceIdentifier.
	// +kubebuilder:validation:Optional
	dbInstanceIdentifierSelector?: null | v1.#Selector @go(DBInstanceIdentifierSelector,*v1.Selector)

	// The name of the DB proxy.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta1.Proxy
	// +kubebuilder:validation:Optional
	dbProxyName?: null | string @go(DBProxyName,*string)

	// Reference to a Proxy in rds to populate dbProxyName.
	// +kubebuilder:validation:Optional
	dbProxyNameRef?: null | v1.#Reference @go(DBProxyNameRef,*v1.Reference)

	// Selector for a Proxy in rds to populate dbProxyName.
	// +kubebuilder:validation:Optional
	dbProxyNameSelector?: null | v1.#Selector @go(DBProxyNameSelector,*v1.Selector)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The name of the target group.
	// +kubebuilder:validation:Optional
	targetGroupName?: null | string @go(TargetGroupName,*string)
}

// ProxyTargetSpec defines the desired state of ProxyTarget
#ProxyTargetSpec: {
	v1.#ResourceSpec
	forProvider: #ProxyTargetParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ProxyTargetInitParameters @go(InitProvider)
}

// ProxyTargetStatus defines the observed state of ProxyTarget.
#ProxyTargetStatus: {
	v1.#ResourceStatus
	atProvider?: #ProxyTargetObservation @go(AtProvider)
}

// ProxyTarget is the Schema for the ProxyTargets API. Provides an RDS DB proxy target resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ProxyTarget: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetGroupName) || (has(self.initProvider) && has(self.initProvider.targetGroupName))",message="spec.forProvider.targetGroupName is a required parameter"
	spec:    #ProxyTargetSpec   @go(Spec)
	status?: #ProxyTargetStatus @go(Status)
}

// ProxyTargetList contains a list of ProxyTargets
#ProxyTargetList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ProxyTarget] @go(Items,[]ProxyTarget)
}
