// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/dynamodb/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ContributorInsightsInitParameters: {
	// The global secondary index name
	indexName?: null | string @go(IndexName,*string)
}

#ContributorInsightsObservation: {
	id?: null | string @go(ID,*string)

	// The global secondary index name
	indexName?: null | string @go(IndexName,*string)

	// The name of the table to enable contributor insights
	tableName?: null | string @go(TableName,*string)
}

#ContributorInsightsParameters: {
	// The global secondary index name
	// +kubebuilder:validation:Optional
	indexName?: null | string @go(IndexName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The name of the table to enable contributor insights
	// +crossplane:generate:reference:type=Table
	// +kubebuilder:validation:Optional
	tableName?: null | string @go(TableName,*string)

	// Reference to a Table to populate tableName.
	// +kubebuilder:validation:Optional
	tableNameRef?: null | v1.#Reference @go(TableNameRef,*v1.Reference)

	// Selector for a Table to populate tableName.
	// +kubebuilder:validation:Optional
	tableNameSelector?: null | v1.#Selector @go(TableNameSelector,*v1.Selector)
}

// ContributorInsightsSpec defines the desired state of ContributorInsights
#ContributorInsightsSpec: {
	v1.#ResourceSpec
	forProvider: #ContributorInsightsParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ContributorInsightsInitParameters @go(InitProvider)
}

// ContributorInsightsStatus defines the observed state of ContributorInsights.
#ContributorInsightsStatus: {
	v1.#ResourceStatus
	atProvider?: #ContributorInsightsObservation @go(AtProvider)
}

// ContributorInsights is the Schema for the ContributorInsightss API. Provides a DynamoDB contributor insights resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ContributorInsights: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta         @go(ObjectMeta)
	spec:      #ContributorInsightsSpec   @go(Spec)
	status?:   #ContributorInsightsStatus @go(Status)
}

// ContributorInsightsList contains a list of ContributorInsightss
#ContributorInsightsList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ContributorInsights] @go(Items,[]ContributorInsights)
}
